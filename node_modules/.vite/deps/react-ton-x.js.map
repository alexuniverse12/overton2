{
  "version": 3,
  "sources": ["../../ton-x/node_modules/ton-crypto/dist/primitives/sha256.js", "../../ton-x/node_modules/ton-crypto/dist/primitives/sha512.js", "../../ton-x/node_modules/ton-crypto/dist/primitives/pbkdf2_sha512.js", "../../ton-x/node_modules/ton-crypto/dist/primitives/hmac_sha512.js", "../../ton-x/node_modules/ton-crypto/dist/primitives/getSecureRandom.js", "../../ton-x/node_modules/ton-crypto/dist/passwords/wordlist.js", "../../ton-x/node_modules/ton-crypto/dist/passwords/newSecureWords.js", "../../ton-x/node_modules/ton-crypto/dist/passwords/newSecurePassphrase.js", "../../ton-x/node_modules/ton-crypto/dist/utils/binary.js", "../../ton-x/node_modules/ton-crypto/dist/mnemonic/wordlist.js", "../../ton-x/node_modules/ton-crypto/dist/mnemonic/mnemonic.js", "../../ton-x/node_modules/ton-crypto/dist/primitives/nacl.js", "../../ton-x/node_modules/ton-crypto/dist/hd/ed25519.js", "../../ton-x/node_modules/ton-crypto/dist/hd/symmetric.js", "../../ton-x/node_modules/ton-crypto/dist/hd/mnemonics.js", "../../ton-x/node_modules/ton-crypto/dist/index.js", "../../teslabot/src/iterator/createAsyncIterator.ts", "../../teslabot/src/sync/AsyncLock.ts", "../../teslabot/src/timer/delay.ts", "../../teslabot/src/timer/backoff.ts", "../../teslabot/src/sync/InvalidateSync.ts", "../../teslabot/src/sync/SyncValue.ts", "../../teslabot/src/sync/Queue.ts", "../../teslabot/src/sync/ConcurrencyPool.ts", "../../teslabot/src/timer/asyncTimeout.ts", "../../teslabot/src/index.ts", "../../ton-x/dist/utils/backoff.js", "../../ton-x/dist/utils/toURLsafe.js", "../../ton-x/node_modules/ton/dist/boc/BitString.js", "../../ton-x/node_modules/ton/dist/boc/BitStringReader.js", "../../ton-x/node_modules/ton/node_modules/ton-crypto/dist/primitives/sha256.js", "../../ton-x/node_modules/ton/node_modules/ton-crypto/dist/primitives/sha512.js", "../../ton-x/node_modules/ton/node_modules/ton-crypto/dist/primitives/pbkdf2_sha512.js", "../../ton-x/node_modules/ton/node_modules/ton-crypto/dist/primitives/hmac_sha512.js", "../../ton-x/node_modules/ton/node_modules/ton-crypto/dist/primitives/getSecureRandom.js", "../../ton-x/node_modules/ton/node_modules/ton-crypto/dist/mnemonic/wordlist.js", "../../ton-x/node_modules/ton/node_modules/ton-crypto/dist/mnemonic/mnemonic.js", "../../ton-x/node_modules/ton/node_modules/ton-crypto/dist/primitives/nacl.js", "../../ton-x/node_modules/ton/node_modules/ton-crypto/dist/passwords/wordlist.js", "../../ton-x/node_modules/ton/node_modules/ton-crypto/dist/passwords/newSecureWords.js", "../../ton-x/node_modules/ton/node_modules/ton-crypto/dist/passwords/newSecurePassphrase.js", "../../ton-x/node_modules/ton/node_modules/ton-crypto/dist/index.js", "../../ton-x/node_modules/ton/dist/boc/utils/crc32c.js", "../../ton-x/node_modules/ton/dist/boc/utils/topologicalSort.js", "../../ton-x/node_modules/ton/dist/boc/boc.js", "../../ton-x/node_modules/ton/dist/boc/Cell.js", "../../ton-x/node_modules/ton/dist/utils/crc16.js", "../../ton-x/node_modules/ton/dist/address/Address.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/helpers/bind.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/utils.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/helpers/buildURL.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/core/InterceptorManager.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/helpers/normalizeHeaderName.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/core/enhanceError.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/core/createError.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/core/settle.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/helpers/cookies.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/helpers/isAbsoluteURL.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/helpers/combineURLs.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/core/buildFullPath.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/helpers/parseHeaders.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/helpers/isURLSameOrigin.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/cancel/Cancel.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/adapters/xhr.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/defaults.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/core/transformData.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/cancel/isCancel.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/core/dispatchRequest.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/core/mergeConfig.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/env/data.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/helpers/validator.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/core/Axios.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/cancel/CancelToken.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/helpers/spread.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/helpers/isAxiosError.js", "../../ton-x/node_modules/ton/node_modules/axios/lib/axios.js", "../../ton-x/node_modules/ton/node_modules/axios/index.js", "../../ton-x/node_modules/ton/dist/client/api/HttpApi.js", "../../ton-x/node_modules/ton/dist/messages/ExternalMessage.js", "../../ton-x/node_modules/ton/dist/messages/CommonMessageInfo.js", "../../ton-x/node_modules/ton/dist/messages/StateInit.js", "../../ton-x/node_modules/ton/dist/contracts/sources/WalletV1R2Source.js", "../../ton-x/node_modules/ton/dist/contracts/sources/WalletV1R3Source.js", "../../ton-x/node_modules/ton/dist/contracts/sources/WalletV2R1Source.js", "../../ton-x/node_modules/ton/dist/contracts/sources/WalletV2R2Source.js", "../../ton-x/node_modules/ton/dist/contracts/sources/WalletV3R1Source.js", "../../ton-x/node_modules/ton/dist/contracts/sources/WalletV3R2Source.js", "../../ton-x/node_modules/ton/dist/contracts/messages/WalletV1SigningMessage.js", "../../ton-x/node_modules/ton/dist/contracts/messages/WalletV2SigningMessage.js", "../../ton-x/node_modules/ton/dist/contracts/messages/WalletV3SigningMessage.js", "../../ton-x/node_modules/ton/dist/contracts/messages/createWalletTransfer.js", "../../ton-x/node_modules/ton/dist/contracts/contractAddress.js", "../../ton-x/node_modules/ton/dist/contracts/WalletContract.js", "../../ton-x/node_modules/ton/dist/messages/InternalMessage.js", "../../ton-x/node_modules/ton/dist/client/SendMode.js", "../../ton-x/node_modules/ton/dist/client/Wallet.js", "../../ton-x/node_modules/ton/dist/boc/dict/parseDict.js", "../../ton-x/node_modules/ton/dist/contracts/configs/configParsing.js", "../../ton-x/node_modules/ton/dist/contracts/ConfigContract.js", "../../ton-x/node_modules/ton/dist/client/TonCache.js", "../../ton-x/node_modules/ton/dist/client/TonClient.js", "../../ton-x/node_modules/ton/dist/utils/convert.js", "../../ton-x/node_modules/ton/dist/keystore/KeyStore.js", "../../ton-x/node_modules/ton/dist/boc/Slice.js", "../../ton-x/node_modules/ton/dist/utils/base32.js", "../../ton-x/node_modules/ton/dist/address/ADNLAddress.js", "../../ton-x/node_modules/ton/dist/keystore/ADNLKey.js", "../../ton-x/node_modules/ton/dist/boc/Builder.js", "../../ton-x/node_modules/ton/dist/boc/dict/utils/findCommonPrefix.js", "../../ton-x/node_modules/ton/dist/boc/dict/serializeDict.js", "../../ton-x/node_modules/ton/dist/boc/DictBuilder.js", "../../ton-x/node_modules/ton/dist/utils/bnToAddress.js", "../../ton-x/node_modules/ton/dist/boc/TupleSlice.js", "../../ton-x/node_modules/ton/dist/introspection/getSupportedInterfaces.js", "../../ton-x/node_modules/ton/dist/utils/crc32.js", "../../ton-x/node_modules/ton/dist/introspection/parseSupportedMessage.js", "../../ton-x/node_modules/ton/dist/messages/CellMessage.js", "../../ton-x/node_modules/ton/dist/messages/EmptyMessage.js", "../../ton-x/node_modules/ton/dist/messages/CommentMessage.js", "../../ton-x/node_modules/ton/dist/messages/BinaryMessage.js", "../../ton-x/node_modules/ton/dist/contracts/sources/UnknownContractSource.js", "../../ton-x/node_modules/ton/dist/contracts/sources/WalletV1R1Source.js", "../../ton-x/node_modules/ton/dist/utils/ConfigStore.js", "../../ton-x/node_modules/ton/dist/client/safeSign.js", "../../ton-x/node_modules/ton/dist/block/parseTransaction.js", "../../ton-x/node_modules/ton/dist/index.js", "../../ton-x/node_modules/axios/lib/helpers/bind.js", "../../ton-x/node_modules/axios/lib/utils.js", "../../ton-x/node_modules/axios/lib/helpers/buildURL.js", "../../ton-x/node_modules/axios/lib/core/InterceptorManager.js", "../../ton-x/node_modules/axios/lib/helpers/normalizeHeaderName.js", "../../ton-x/node_modules/axios/lib/core/AxiosError.js", "../../ton-x/node_modules/axios/lib/defaults/transitional.js", "../../ton-x/node_modules/axios/lib/helpers/toFormData.js", "../../ton-x/node_modules/axios/lib/core/settle.js", "../../ton-x/node_modules/axios/lib/helpers/cookies.js", "../../ton-x/node_modules/axios/lib/helpers/isAbsoluteURL.js", "../../ton-x/node_modules/axios/lib/helpers/combineURLs.js", "../../ton-x/node_modules/axios/lib/core/buildFullPath.js", "../../ton-x/node_modules/axios/lib/helpers/parseHeaders.js", "../../ton-x/node_modules/axios/lib/helpers/isURLSameOrigin.js", "../../ton-x/node_modules/axios/lib/cancel/CanceledError.js", "../../ton-x/node_modules/axios/lib/helpers/parseProtocol.js", "../../ton-x/node_modules/axios/lib/adapters/xhr.js", "../../ton-x/node_modules/axios/lib/helpers/null.js", "../../ton-x/node_modules/axios/lib/defaults/index.js", "../../ton-x/node_modules/axios/lib/core/transformData.js", "../../ton-x/node_modules/axios/lib/cancel/isCancel.js", "../../ton-x/node_modules/axios/lib/core/dispatchRequest.js", "../../ton-x/node_modules/axios/lib/core/mergeConfig.js", "../../ton-x/node_modules/axios/lib/env/data.js", "../../ton-x/node_modules/axios/lib/helpers/validator.js", "../../ton-x/node_modules/axios/lib/core/Axios.js", "../../ton-x/node_modules/axios/lib/cancel/CancelToken.js", "../../ton-x/node_modules/axios/lib/helpers/spread.js", "../../ton-x/node_modules/axios/lib/helpers/isAxiosError.js", "../../ton-x/node_modules/axios/lib/axios.js", "../../ton-x/node_modules/axios/index.js", "../../ton-x/dist/transport/TonhubHttpTransport.js", "../../ton-x/dist/contracts/WalletV4Source.js", "../../ton-x/dist/contracts/extractPublicKeyAndAddress.js", "../../ton-x/dist/connector/crypto.js", "../../ton-x/dist/connector/TonhubConnector.js", "../../ton-x/dist/connector/TonhubLocalConnector.js", "../../ton-x/dist/index.js", "../../react-ton-x/dist/useLocalConnector.js", "../../react-ton-x/dist/utils/time.js", "../../react-ton-x/dist/useRemoteConnector.js", "../../react-ton-x/dist/useTonhubConnect.js", "../../react-ton-x/dist/index.js", "dep:react-ton-x"],
  "sourcesContent": ["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = exports.sha256_fallback = exports.sha256_sync = void 0;\nconst jssha_1 = __importDefault(require(\"jssha\"));\nconst ton_crypto_primitives_1 = require(\"ton-crypto-primitives\");\nfunction sha256_sync(source) {\n    let src;\n    if (typeof source === 'string') {\n        src = Buffer.from(source, 'utf-8').toString('hex');\n    }\n    else {\n        src = source.toString('hex');\n    }\n    let hasher = new jssha_1.default('SHA-256', 'HEX');\n    hasher.update(src);\n    let res = hasher.getHash('HEX');\n    return Buffer.from(res, 'hex');\n}\nexports.sha256_sync = sha256_sync;\nasync function sha256_fallback(source) {\n    return sha256_sync(source);\n}\nexports.sha256_fallback = sha256_fallback;\nfunction sha256(source) {\n    return (0, ton_crypto_primitives_1.sha256)(source);\n}\nexports.sha256 = sha256;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha512 = exports.sha512_fallback = exports.sha512_sync = void 0;\nconst jssha_1 = __importDefault(require(\"jssha\"));\nconst ton_crypto_primitives_1 = require(\"ton-crypto-primitives\");\nfunction sha512_sync(source) {\n    let src;\n    if (typeof source === 'string') {\n        src = Buffer.from(source, 'utf-8').toString('hex');\n    }\n    else {\n        src = source.toString('hex');\n    }\n    let hasher = new jssha_1.default('SHA-512', 'HEX');\n    hasher.update(src);\n    let res = hasher.getHash('HEX');\n    return Buffer.from(res, 'hex');\n}\nexports.sha512_sync = sha512_sync;\nasync function sha512_fallback(source) {\n    return sha512_sync(source);\n}\nexports.sha512_fallback = sha512_fallback;\nasync function sha512(source) {\n    return (0, ton_crypto_primitives_1.sha512)(source);\n}\nexports.sha512 = sha512;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2_sha512 = void 0;\nconst ton_crypto_primitives_1 = require(\"ton-crypto-primitives\");\nfunction pbkdf2_sha512(key, salt, iterations, keyLen) {\n    return (0, ton_crypto_primitives_1.pbkdf2_sha512)(key, salt, iterations, keyLen);\n}\nexports.pbkdf2_sha512 = pbkdf2_sha512;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac_sha512 = exports.hmac_sha512_fallback = void 0;\nconst jssha_1 = __importDefault(require(\"jssha\"));\nconst ton_crypto_primitives_1 = require(\"ton-crypto-primitives\");\nasync function hmac_sha512_fallback(key, data) {\n    let keyBuffer = typeof key === 'string' ? Buffer.from(key, 'utf-8') : key;\n    let dataBuffer = typeof data === 'string' ? Buffer.from(data, 'utf-8') : data;\n    const shaObj = new jssha_1.default(\"SHA-512\", \"HEX\", {\n        hmacKey: { value: keyBuffer.toString('hex'), format: \"HEX\" },\n    });\n    shaObj.update(dataBuffer.toString('hex'));\n    const hmac = shaObj.getHash(\"HEX\");\n    return Buffer.from(hmac, 'hex');\n}\nexports.hmac_sha512_fallback = hmac_sha512_fallback;\nfunction hmac_sha512(key, data) {\n    return (0, ton_crypto_primitives_1.hmac_sha512)(key, data);\n}\nexports.hmac_sha512 = hmac_sha512;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSecureRandomNumber = exports.getSecureRandomWords = exports.getSecureRandomBytes = void 0;\nconst ton_crypto_primitives_1 = require(\"ton-crypto-primitives\");\nasync function getSecureRandomBytes(size) {\n    return (0, ton_crypto_primitives_1.getSecureRandomBytes)(size);\n}\nexports.getSecureRandomBytes = getSecureRandomBytes;\nasync function getSecureRandomWords(size) {\n    return getSecureRandomWords(size);\n}\nexports.getSecureRandomWords = getSecureRandomWords;\nasync function getSecureRandomNumber(min, max) {\n    let range = max - min;\n    var bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n        throw new Error('Range is too large');\n    }\n    var bytesNeeded = Math.ceil(bitsNeeded / 8);\n    var mask = Math.pow(2, bitsNeeded) - 1;\n    while (true) {\n        let res = await getSecureRandomBytes(bitsNeeded);\n        let power = (bytesNeeded - 1) * 8;\n        let numberValue = 0;\n        for (var i = 0; i < bytesNeeded; i++) {\n            numberValue += res[i] * Math.pow(2, power);\n            power -= 8;\n        }\n        numberValue = numberValue & mask; // Truncate\n        if (numberValue >= range) {\n            continue;\n        }\n        return min + numberValue;\n    }\n}\nexports.getSecureRandomNumber = getSecureRandomNumber;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlist = void 0;\n// Source https://www.eff.org/dice\nexports.wordlist = [\n    'abacus',\n    'abdomen',\n    'abdominal',\n    'abide',\n    'abiding',\n    'ability',\n    'ablaze',\n    'able',\n    'abnormal',\n    'abrasion',\n    'abrasive',\n    'abreast',\n    'abridge',\n    'abroad',\n    'abruptly',\n    'absence',\n    'absentee',\n    'absently',\n    'absinthe',\n    'absolute',\n    'absolve',\n    'abstain',\n    'abstract',\n    'absurd',\n    'accent',\n    'acclaim',\n    'acclimate',\n    'accompany',\n    'account',\n    'accuracy',\n    'accurate',\n    'accustom',\n    'acetone',\n    'achiness',\n    'aching',\n    'acid',\n    'acorn',\n    'acquaint',\n    'acquire',\n    'acre',\n    'acrobat',\n    'acronym',\n    'acting',\n    'action',\n    'activate',\n    'activator',\n    'active',\n    'activism',\n    'activist',\n    'activity',\n    'actress',\n    'acts',\n    'acutely',\n    'acuteness',\n    'aeration',\n    'aerobics',\n    'aerosol',\n    'aerospace',\n    'afar',\n    'affair',\n    'affected',\n    'affecting',\n    'affection',\n    'affidavit',\n    'affiliate',\n    'affirm',\n    'affix',\n    'afflicted',\n    'affluent',\n    'afford',\n    'affront',\n    'aflame',\n    'afloat',\n    'aflutter',\n    'afoot',\n    'afraid',\n    'afterglow',\n    'afterlife',\n    'aftermath',\n    'aftermost',\n    'afternoon',\n    'aged',\n    'ageless',\n    'agency',\n    'agenda',\n    'agent',\n    'aggregate',\n    'aghast',\n    'agile',\n    'agility',\n    'aging',\n    'agnostic',\n    'agonize',\n    'agonizing',\n    'agony',\n    'agreeable',\n    'agreeably',\n    'agreed',\n    'agreeing',\n    'agreement',\n    'aground',\n    'ahead',\n    'ahoy',\n    'aide',\n    'aids',\n    'aim',\n    'ajar',\n    'alabaster',\n    'alarm',\n    'albatross',\n    'album',\n    'alfalfa',\n    'algebra',\n    'algorithm',\n    'alias',\n    'alibi',\n    'alienable',\n    'alienate',\n    'aliens',\n    'alike',\n    'alive',\n    'alkaline',\n    'alkalize',\n    'almanac',\n    'almighty',\n    'almost',\n    'aloe',\n    'aloft',\n    'aloha',\n    'alone',\n    'alongside',\n    'aloof',\n    'alphabet',\n    'alright',\n    'although',\n    'altitude',\n    'alto',\n    'aluminum',\n    'alumni',\n    'always',\n    'amaretto',\n    'amaze',\n    'amazingly',\n    'amber',\n    'ambiance',\n    'ambiguity',\n    'ambiguous',\n    'ambition',\n    'ambitious',\n    'ambulance',\n    'ambush',\n    'amendable',\n    'amendment',\n    'amends',\n    'amenity',\n    'amiable',\n    'amicably',\n    'amid',\n    'amigo',\n    'amino',\n    'amiss',\n    'ammonia',\n    'ammonium',\n    'amnesty',\n    'amniotic',\n    'among',\n    'amount',\n    'amperage',\n    'ample',\n    'amplifier',\n    'amplify',\n    'amply',\n    'amuck',\n    'amulet',\n    'amusable',\n    'amused',\n    'amusement',\n    'amuser',\n    'amusing',\n    'anaconda',\n    'anaerobic',\n    'anagram',\n    'anatomist',\n    'anatomy',\n    'anchor',\n    'anchovy',\n    'ancient',\n    'android',\n    'anemia',\n    'anemic',\n    'aneurism',\n    'anew',\n    'angelfish',\n    'angelic',\n    'anger',\n    'angled',\n    'angler',\n    'angles',\n    'angling',\n    'angrily',\n    'angriness',\n    'anguished',\n    'angular',\n    'animal',\n    'animate',\n    'animating',\n    'animation',\n    'animator',\n    'anime',\n    'animosity',\n    'ankle',\n    'annex',\n    'annotate',\n    'announcer',\n    'annoying',\n    'annually',\n    'annuity',\n    'anointer',\n    'another',\n    'answering',\n    'antacid',\n    'antarctic',\n    'anteater',\n    'antelope',\n    'antennae',\n    'anthem',\n    'anthill',\n    'anthology',\n    'antibody',\n    'antics',\n    'antidote',\n    'antihero',\n    'antiquely',\n    'antiques',\n    'antiquity',\n    'antirust',\n    'antitoxic',\n    'antitrust',\n    'antiviral',\n    'antivirus',\n    'antler',\n    'antonym',\n    'antsy',\n    'anvil',\n    'anybody',\n    'anyhow',\n    'anymore',\n    'anyone',\n    'anyplace',\n    'anything',\n    'anytime',\n    'anyway',\n    'anywhere',\n    'aorta',\n    'apache',\n    'apostle',\n    'appealing',\n    'appear',\n    'appease',\n    'appeasing',\n    'appendage',\n    'appendix',\n    'appetite',\n    'appetizer',\n    'applaud',\n    'applause',\n    'apple',\n    'appliance',\n    'applicant',\n    'applied',\n    'apply',\n    'appointee',\n    'appraisal',\n    'appraiser',\n    'apprehend',\n    'approach',\n    'approval',\n    'approve',\n    'apricot',\n    'april',\n    'apron',\n    'aptitude',\n    'aptly',\n    'aqua',\n    'aqueduct',\n    'arbitrary',\n    'arbitrate',\n    'ardently',\n    'area',\n    'arena',\n    'arguable',\n    'arguably',\n    'argue',\n    'arise',\n    'armadillo',\n    'armband',\n    'armchair',\n    'armed',\n    'armful',\n    'armhole',\n    'arming',\n    'armless',\n    'armoire',\n    'armored',\n    'armory',\n    'armrest',\n    'army',\n    'aroma',\n    'arose',\n    'around',\n    'arousal',\n    'arrange',\n    'array',\n    'arrest',\n    'arrival',\n    'arrive',\n    'arrogance',\n    'arrogant',\n    'arson',\n    'art',\n    'ascend',\n    'ascension',\n    'ascent',\n    'ascertain',\n    'ashamed',\n    'ashen',\n    'ashes',\n    'ashy',\n    'aside',\n    'askew',\n    'asleep',\n    'asparagus',\n    'aspect',\n    'aspirate',\n    'aspire',\n    'aspirin',\n    'astonish',\n    'astound',\n    'astride',\n    'astrology',\n    'astronaut',\n    'astronomy',\n    'astute',\n    'atlantic',\n    'atlas',\n    'atom',\n    'atonable',\n    'atop',\n    'atrium',\n    'atrocious',\n    'atrophy',\n    'attach',\n    'attain',\n    'attempt',\n    'attendant',\n    'attendee',\n    'attention',\n    'attentive',\n    'attest',\n    'attic',\n    'attire',\n    'attitude',\n    'attractor',\n    'attribute',\n    'atypical',\n    'auction',\n    'audacious',\n    'audacity',\n    'audible',\n    'audibly',\n    'audience',\n    'audio',\n    'audition',\n    'augmented',\n    'august',\n    'authentic',\n    'author',\n    'autism',\n    'autistic',\n    'autograph',\n    'automaker',\n    'automated',\n    'automatic',\n    'autopilot',\n    'available',\n    'avalanche',\n    'avatar',\n    'avenge',\n    'avenging',\n    'avenue',\n    'average',\n    'aversion',\n    'avert',\n    'aviation',\n    'aviator',\n    'avid',\n    'avoid',\n    'await',\n    'awaken',\n    'award',\n    'aware',\n    'awhile',\n    'awkward',\n    'awning',\n    'awoke',\n    'awry',\n    'axis',\n    'babble',\n    'babbling',\n    'babied',\n    'baboon',\n    'backache',\n    'backboard',\n    'backboned',\n    'backdrop',\n    'backed',\n    'backer',\n    'backfield',\n    'backfire',\n    'backhand',\n    'backing',\n    'backlands',\n    'backlash',\n    'backless',\n    'backlight',\n    'backlit',\n    'backlog',\n    'backpack',\n    'backpedal',\n    'backrest',\n    'backroom',\n    'backshift',\n    'backside',\n    'backslid',\n    'backspace',\n    'backspin',\n    'backstab',\n    'backstage',\n    'backtalk',\n    'backtrack',\n    'backup',\n    'backward',\n    'backwash',\n    'backwater',\n    'backyard',\n    'bacon',\n    'bacteria',\n    'bacterium',\n    'badass',\n    'badge',\n    'badland',\n    'badly',\n    'badness',\n    'baffle',\n    'baffling',\n    'bagel',\n    'bagful',\n    'baggage',\n    'bagged',\n    'baggie',\n    'bagginess',\n    'bagging',\n    'baggy',\n    'bagpipe',\n    'baguette',\n    'baked',\n    'bakery',\n    'bakeshop',\n    'baking',\n    'balance',\n    'balancing',\n    'balcony',\n    'balmy',\n    'balsamic',\n    'bamboo',\n    'banana',\n    'banish',\n    'banister',\n    'banjo',\n    'bankable',\n    'bankbook',\n    'banked',\n    'banker',\n    'banking',\n    'banknote',\n    'bankroll',\n    'banner',\n    'bannister',\n    'banshee',\n    'banter',\n    'barbecue',\n    'barbed',\n    'barbell',\n    'barber',\n    'barcode',\n    'barge',\n    'bargraph',\n    'barista',\n    'baritone',\n    'barley',\n    'barmaid',\n    'barman',\n    'barn',\n    'barometer',\n    'barrack',\n    'barracuda',\n    'barrel',\n    'barrette',\n    'barricade',\n    'barrier',\n    'barstool',\n    'bartender',\n    'barterer',\n    'bash',\n    'basically',\n    'basics',\n    'basil',\n    'basin',\n    'basis',\n    'basket',\n    'batboy',\n    'batch',\n    'bath',\n    'baton',\n    'bats',\n    'battalion',\n    'battered',\n    'battering',\n    'battery',\n    'batting',\n    'battle',\n    'bauble',\n    'bazooka',\n    'blabber',\n    'bladder',\n    'blade',\n    'blah',\n    'blame',\n    'blaming',\n    'blanching',\n    'blandness',\n    'blank',\n    'blaspheme',\n    'blasphemy',\n    'blast',\n    'blatancy',\n    'blatantly',\n    'blazer',\n    'blazing',\n    'bleach',\n    'bleak',\n    'bleep',\n    'blemish',\n    'blend',\n    'bless',\n    'blighted',\n    'blimp',\n    'bling',\n    'blinked',\n    'blinker',\n    'blinking',\n    'blinks',\n    'blip',\n    'blissful',\n    'blitz',\n    'blizzard',\n    'bloated',\n    'bloating',\n    'blob',\n    'blog',\n    'bloomers',\n    'blooming',\n    'blooper',\n    'blot',\n    'blouse',\n    'blubber',\n    'bluff',\n    'bluish',\n    'blunderer',\n    'blunt',\n    'blurb',\n    'blurred',\n    'blurry',\n    'blurt',\n    'blush',\n    'blustery',\n    'boaster',\n    'boastful',\n    'boasting',\n    'boat',\n    'bobbed',\n    'bobbing',\n    'bobble',\n    'bobcat',\n    'bobsled',\n    'bobtail',\n    'bodacious',\n    'body',\n    'bogged',\n    'boggle',\n    'bogus',\n    'boil',\n    'bok',\n    'bolster',\n    'bolt',\n    'bonanza',\n    'bonded',\n    'bonding',\n    'bondless',\n    'boned',\n    'bonehead',\n    'boneless',\n    'bonelike',\n    'boney',\n    'bonfire',\n    'bonnet',\n    'bonsai',\n    'bonus',\n    'bony',\n    'boogeyman',\n    'boogieman',\n    'book',\n    'boondocks',\n    'booted',\n    'booth',\n    'bootie',\n    'booting',\n    'bootlace',\n    'bootleg',\n    'boots',\n    'boozy',\n    'borax',\n    'boring',\n    'borough',\n    'borrower',\n    'borrowing',\n    'boss',\n    'botanical',\n    'botanist',\n    'botany',\n    'botch',\n    'both',\n    'bottle',\n    'bottling',\n    'bottom',\n    'bounce',\n    'bouncing',\n    'bouncy',\n    'bounding',\n    'boundless',\n    'bountiful',\n    'bovine',\n    'boxcar',\n    'boxer',\n    'boxing',\n    'boxlike',\n    'boxy',\n    'breach',\n    'breath',\n    'breeches',\n    'breeching',\n    'breeder',\n    'breeding',\n    'breeze',\n    'breezy',\n    'brethren',\n    'brewery',\n    'brewing',\n    'briar',\n    'bribe',\n    'brick',\n    'bride',\n    'bridged',\n    'brigade',\n    'bright',\n    'brilliant',\n    'brim',\n    'bring',\n    'brink',\n    'brisket',\n    'briskly',\n    'briskness',\n    'bristle',\n    'brittle',\n    'broadband',\n    'broadcast',\n    'broaden',\n    'broadly',\n    'broadness',\n    'broadside',\n    'broadways',\n    'broiler',\n    'broiling',\n    'broken',\n    'broker',\n    'bronchial',\n    'bronco',\n    'bronze',\n    'bronzing',\n    'brook',\n    'broom',\n    'brought',\n    'browbeat',\n    'brownnose',\n    'browse',\n    'browsing',\n    'bruising',\n    'brunch',\n    'brunette',\n    'brunt',\n    'brush',\n    'brussels',\n    'brute',\n    'brutishly',\n    'bubble',\n    'bubbling',\n    'bubbly',\n    'buccaneer',\n    'bucked',\n    'bucket',\n    'buckle',\n    'buckshot',\n    'buckskin',\n    'bucktooth',\n    'buckwheat',\n    'buddhism',\n    'buddhist',\n    'budding',\n    'buddy',\n    'budget',\n    'buffalo',\n    'buffed',\n    'buffer',\n    'buffing',\n    'buffoon',\n    'buggy',\n    'bulb',\n    'bulge',\n    'bulginess',\n    'bulgur',\n    'bulk',\n    'bulldog',\n    'bulldozer',\n    'bullfight',\n    'bullfrog',\n    'bullhorn',\n    'bullion',\n    'bullish',\n    'bullpen',\n    'bullring',\n    'bullseye',\n    'bullwhip',\n    'bully',\n    'bunch',\n    'bundle',\n    'bungee',\n    'bunion',\n    'bunkbed',\n    'bunkhouse',\n    'bunkmate',\n    'bunny',\n    'bunt',\n    'busboy',\n    'bush',\n    'busily',\n    'busload',\n    'bust',\n    'busybody',\n    'buzz',\n    'cabana',\n    'cabbage',\n    'cabbie',\n    'cabdriver',\n    'cable',\n    'caboose',\n    'cache',\n    'cackle',\n    'cacti',\n    'cactus',\n    'caddie',\n    'caddy',\n    'cadet',\n    'cadillac',\n    'cadmium',\n    'cage',\n    'cahoots',\n    'cake',\n    'calamari',\n    'calamity',\n    'calcium',\n    'calculate',\n    'calculus',\n    'caliber',\n    'calibrate',\n    'calm',\n    'caloric',\n    'calorie',\n    'calzone',\n    'camcorder',\n    'cameo',\n    'camera',\n    'camisole',\n    'camper',\n    'campfire',\n    'camping',\n    'campsite',\n    'campus',\n    'canal',\n    'canary',\n    'cancel',\n    'candied',\n    'candle',\n    'candy',\n    'cane',\n    'canine',\n    'canister',\n    'cannabis',\n    'canned',\n    'canning',\n    'cannon',\n    'cannot',\n    'canola',\n    'canon',\n    'canopener',\n    'canopy',\n    'canteen',\n    'canyon',\n    'capable',\n    'capably',\n    'capacity',\n    'cape',\n    'capillary',\n    'capital',\n    'capitol',\n    'capped',\n    'capricorn',\n    'capsize',\n    'capsule',\n    'caption',\n    'captivate',\n    'captive',\n    'captivity',\n    'capture',\n    'caramel',\n    'carat',\n    'caravan',\n    'carbon',\n    'cardboard',\n    'carded',\n    'cardiac',\n    'cardigan',\n    'cardinal',\n    'cardstock',\n    'carefully',\n    'caregiver',\n    'careless',\n    'caress',\n    'caretaker',\n    'cargo',\n    'caring',\n    'carless',\n    'carload',\n    'carmaker',\n    'carnage',\n    'carnation',\n    'carnival',\n    'carnivore',\n    'carol',\n    'carpenter',\n    'carpentry',\n    'carpool',\n    'carport',\n    'carried',\n    'carrot',\n    'carrousel',\n    'carry',\n    'cartel',\n    'cartload',\n    'carton',\n    'cartoon',\n    'cartridge',\n    'cartwheel',\n    'carve',\n    'carving',\n    'carwash',\n    'cascade',\n    'case',\n    'cash',\n    'casing',\n    'casino',\n    'casket',\n    'cassette',\n    'casually',\n    'casualty',\n    'catacomb',\n    'catalog',\n    'catalyst',\n    'catalyze',\n    'catapult',\n    'cataract',\n    'catatonic',\n    'catcall',\n    'catchable',\n    'catcher',\n    'catching',\n    'catchy',\n    'caterer',\n    'catering',\n    'catfight',\n    'catfish',\n    'cathedral',\n    'cathouse',\n    'catlike',\n    'catnap',\n    'catnip',\n    'catsup',\n    'cattail',\n    'cattishly',\n    'cattle',\n    'catty',\n    'catwalk',\n    'caucasian',\n    'caucus',\n    'causal',\n    'causation',\n    'cause',\n    'causing',\n    'cauterize',\n    'caution',\n    'cautious',\n    'cavalier',\n    'cavalry',\n    'caviar',\n    'cavity',\n    'cedar',\n    'celery',\n    'celestial',\n    'celibacy',\n    'celibate',\n    'celtic',\n    'cement',\n    'census',\n    'ceramics',\n    'ceremony',\n    'certainly',\n    'certainty',\n    'certified',\n    'certify',\n    'cesarean',\n    'cesspool',\n    'chafe',\n    'chaffing',\n    'chain',\n    'chair',\n    'chalice',\n    'challenge',\n    'chamber',\n    'chamomile',\n    'champion',\n    'chance',\n    'change',\n    'channel',\n    'chant',\n    'chaos',\n    'chaperone',\n    'chaplain',\n    'chapped',\n    'chaps',\n    'chapter',\n    'character',\n    'charbroil',\n    'charcoal',\n    'charger',\n    'charging',\n    'chariot',\n    'charity',\n    'charm',\n    'charred',\n    'charter',\n    'charting',\n    'chase',\n    'chasing',\n    'chaste',\n    'chastise',\n    'chastity',\n    'chatroom',\n    'chatter',\n    'chatting',\n    'chatty',\n    'cheating',\n    'cheddar',\n    'cheek',\n    'cheer',\n    'cheese',\n    'cheesy',\n    'chef',\n    'chemicals',\n    'chemist',\n    'chemo',\n    'cherisher',\n    'cherub',\n    'chess',\n    'chest',\n    'chevron',\n    'chevy',\n    'chewable',\n    'chewer',\n    'chewing',\n    'chewy',\n    'chief',\n    'chihuahua',\n    'childcare',\n    'childhood',\n    'childish',\n    'childless',\n    'childlike',\n    'chili',\n    'chill',\n    'chimp',\n    'chip',\n    'chirping',\n    'chirpy',\n    'chitchat',\n    'chivalry',\n    'chive',\n    'chloride',\n    'chlorine',\n    'choice',\n    'chokehold',\n    'choking',\n    'chomp',\n    'chooser',\n    'choosing',\n    'choosy',\n    'chop',\n    'chosen',\n    'chowder',\n    'chowtime',\n    'chrome',\n    'chubby',\n    'chuck',\n    'chug',\n    'chummy',\n    'chump',\n    'chunk',\n    'churn',\n    'chute',\n    'cider',\n    'cilantro',\n    'cinch',\n    'cinema',\n    'cinnamon',\n    'circle',\n    'circling',\n    'circular',\n    'circulate',\n    'circus',\n    'citable',\n    'citadel',\n    'citation',\n    'citizen',\n    'citric',\n    'citrus',\n    'city',\n    'civic',\n    'civil',\n    'clad',\n    'claim',\n    'clambake',\n    'clammy',\n    'clamor',\n    'clamp',\n    'clamshell',\n    'clang',\n    'clanking',\n    'clapped',\n    'clapper',\n    'clapping',\n    'clarify',\n    'clarinet',\n    'clarity',\n    'clash',\n    'clasp',\n    'class',\n    'clatter',\n    'clause',\n    'clavicle',\n    'claw',\n    'clay',\n    'clean',\n    'clear',\n    'cleat',\n    'cleaver',\n    'cleft',\n    'clench',\n    'clergyman',\n    'clerical',\n    'clerk',\n    'clever',\n    'clicker',\n    'client',\n    'climate',\n    'climatic',\n    'cling',\n    'clinic',\n    'clinking',\n    'clip',\n    'clique',\n    'cloak',\n    'clobber',\n    'clock',\n    'clone',\n    'cloning',\n    'closable',\n    'closure',\n    'clothes',\n    'clothing',\n    'cloud',\n    'clover',\n    'clubbed',\n    'clubbing',\n    'clubhouse',\n    'clump',\n    'clumsily',\n    'clumsy',\n    'clunky',\n    'clustered',\n    'clutch',\n    'clutter',\n    'coach',\n    'coagulant',\n    'coastal',\n    'coaster',\n    'coasting',\n    'coastland',\n    'coastline',\n    'coat',\n    'coauthor',\n    'cobalt',\n    'cobbler',\n    'cobweb',\n    'cocoa',\n    'coconut',\n    'cod',\n    'coeditor',\n    'coerce',\n    'coexist',\n    'coffee',\n    'cofounder',\n    'cognition',\n    'cognitive',\n    'cogwheel',\n    'coherence',\n    'coherent',\n    'cohesive',\n    'coil',\n    'coke',\n    'cola',\n    'cold',\n    'coleslaw',\n    'coliseum',\n    'collage',\n    'collapse',\n    'collar',\n    'collected',\n    'collector',\n    'collide',\n    'collie',\n    'collision',\n    'colonial',\n    'colonist',\n    'colonize',\n    'colony',\n    'colossal',\n    'colt',\n    'coma',\n    'come',\n    'comfort',\n    'comfy',\n    'comic',\n    'coming',\n    'comma',\n    'commence',\n    'commend',\n    'comment',\n    'commerce',\n    'commode',\n    'commodity',\n    'commodore',\n    'common',\n    'commotion',\n    'commute',\n    'commuting',\n    'compacted',\n    'compacter',\n    'compactly',\n    'compactor',\n    'companion',\n    'company',\n    'compare',\n    'compel',\n    'compile',\n    'comply',\n    'component',\n    'composed',\n    'composer',\n    'composite',\n    'compost',\n    'composure',\n    'compound',\n    'compress',\n    'comprised',\n    'computer',\n    'computing',\n    'comrade',\n    'concave',\n    'conceal',\n    'conceded',\n    'concept',\n    'concerned',\n    'concert',\n    'conch',\n    'concierge',\n    'concise',\n    'conclude',\n    'concrete',\n    'concur',\n    'condense',\n    'condiment',\n    'condition',\n    'condone',\n    'conducive',\n    'conductor',\n    'conduit',\n    'cone',\n    'confess',\n    'confetti',\n    'confidant',\n    'confident',\n    'confider',\n    'confiding',\n    'configure',\n    'confined',\n    'confining',\n    'confirm',\n    'conflict',\n    'conform',\n    'confound',\n    'confront',\n    'confused',\n    'confusing',\n    'confusion',\n    'congenial',\n    'congested',\n    'congrats',\n    'congress',\n    'conical',\n    'conjoined',\n    'conjure',\n    'conjuror',\n    'connected',\n    'connector',\n    'consensus',\n    'consent',\n    'console',\n    'consoling',\n    'consonant',\n    'constable',\n    'constant',\n    'constrain',\n    'constrict',\n    'construct',\n    'consult',\n    'consumer',\n    'consuming',\n    'contact',\n    'container',\n    'contempt',\n    'contend',\n    'contented',\n    'contently',\n    'contents',\n    'contest',\n    'context',\n    'contort',\n    'contour',\n    'contrite',\n    'control',\n    'contusion',\n    'convene',\n    'convent',\n    'copartner',\n    'cope',\n    'copied',\n    'copier',\n    'copilot',\n    'coping',\n    'copious',\n    'copper',\n    'copy',\n    'coral',\n    'cork',\n    'cornball',\n    'cornbread',\n    'corncob',\n    'cornea',\n    'corned',\n    'corner',\n    'cornfield',\n    'cornflake',\n    'cornhusk',\n    'cornmeal',\n    'cornstalk',\n    'corny',\n    'coronary',\n    'coroner',\n    'corporal',\n    'corporate',\n    'corral',\n    'correct',\n    'corridor',\n    'corrode',\n    'corroding',\n    'corrosive',\n    'corsage',\n    'corset',\n    'cortex',\n    'cosigner',\n    'cosmetics',\n    'cosmic',\n    'cosmos',\n    'cosponsor',\n    'cost',\n    'cottage',\n    'cotton',\n    'couch',\n    'cough',\n    'could',\n    'countable',\n    'countdown',\n    'counting',\n    'countless',\n    'country',\n    'county',\n    'courier',\n    'covenant',\n    'cover',\n    'coveted',\n    'coveting',\n    'coyness',\n    'cozily',\n    'coziness',\n    'cozy',\n    'crabbing',\n    'crabgrass',\n    'crablike',\n    'crabmeat',\n    'cradle',\n    'cradling',\n    'crafter',\n    'craftily',\n    'craftsman',\n    'craftwork',\n    'crafty',\n    'cramp',\n    'cranberry',\n    'crane',\n    'cranial',\n    'cranium',\n    'crank',\n    'crate',\n    'crave',\n    'craving',\n    'crawfish',\n    'crawlers',\n    'crawling',\n    'crayfish',\n    'crayon',\n    'crazed',\n    'crazily',\n    'craziness',\n    'crazy',\n    'creamed',\n    'creamer',\n    'creamlike',\n    'crease',\n    'creasing',\n    'creatable',\n    'create',\n    'creation',\n    'creative',\n    'creature',\n    'credible',\n    'credibly',\n    'credit',\n    'creed',\n    'creme',\n    'creole',\n    'crepe',\n    'crept',\n    'crescent',\n    'crested',\n    'cresting',\n    'crestless',\n    'crevice',\n    'crewless',\n    'crewman',\n    'crewmate',\n    'crib',\n    'cricket',\n    'cried',\n    'crier',\n    'crimp',\n    'crimson',\n    'cringe',\n    'cringing',\n    'crinkle',\n    'crinkly',\n    'crisped',\n    'crisping',\n    'crisply',\n    'crispness',\n    'crispy',\n    'criteria',\n    'critter',\n    'croak',\n    'crock',\n    'crook',\n    'croon',\n    'crop',\n    'cross',\n    'crouch',\n    'crouton',\n    'crowbar',\n    'crowd',\n    'crown',\n    'crucial',\n    'crudely',\n    'crudeness',\n    'cruelly',\n    'cruelness',\n    'cruelty',\n    'crumb',\n    'crummiest',\n    'crummy',\n    'crumpet',\n    'crumpled',\n    'cruncher',\n    'crunching',\n    'crunchy',\n    'crusader',\n    'crushable',\n    'crushed',\n    'crusher',\n    'crushing',\n    'crust',\n    'crux',\n    'crying',\n    'cryptic',\n    'crystal',\n    'cubbyhole',\n    'cube',\n    'cubical',\n    'cubicle',\n    'cucumber',\n    'cuddle',\n    'cuddly',\n    'cufflink',\n    'culinary',\n    'culminate',\n    'culpable',\n    'culprit',\n    'cultivate',\n    'cultural',\n    'culture',\n    'cupbearer',\n    'cupcake',\n    'cupid',\n    'cupped',\n    'cupping',\n    'curable',\n    'curator',\n    'curdle',\n    'cure',\n    'curfew',\n    'curing',\n    'curled',\n    'curler',\n    'curliness',\n    'curling',\n    'curly',\n    'curry',\n    'curse',\n    'cursive',\n    'cursor',\n    'curtain',\n    'curtly',\n    'curtsy',\n    'curvature',\n    'curve',\n    'curvy',\n    'cushy',\n    'cusp',\n    'cussed',\n    'custard',\n    'custodian',\n    'custody',\n    'customary',\n    'customer',\n    'customize',\n    'customs',\n    'cut',\n    'cycle',\n    'cyclic',\n    'cycling',\n    'cyclist',\n    'cylinder',\n    'cymbal',\n    'cytoplasm',\n    'cytoplast',\n    'dab',\n    'dad',\n    'daffodil',\n    'dagger',\n    'daily',\n    'daintily',\n    'dainty',\n    'dairy',\n    'daisy',\n    'dallying',\n    'dance',\n    'dancing',\n    'dandelion',\n    'dander',\n    'dandruff',\n    'dandy',\n    'danger',\n    'dangle',\n    'dangling',\n    'daredevil',\n    'dares',\n    'daringly',\n    'darkened',\n    'darkening',\n    'darkish',\n    'darkness',\n    'darkroom',\n    'darling',\n    'darn',\n    'dart',\n    'darwinism',\n    'dash',\n    'dastardly',\n    'data',\n    'datebook',\n    'dating',\n    'daughter',\n    'daunting',\n    'dawdler',\n    'dawn',\n    'daybed',\n    'daybreak',\n    'daycare',\n    'daydream',\n    'daylight',\n    'daylong',\n    'dayroom',\n    'daytime',\n    'dazzler',\n    'dazzling',\n    'deacon',\n    'deafening',\n    'deafness',\n    'dealer',\n    'dealing',\n    'dealmaker',\n    'dealt',\n    'dean',\n    'debatable',\n    'debate',\n    'debating',\n    'debit',\n    'debrief',\n    'debtless',\n    'debtor',\n    'debug',\n    'debunk',\n    'decade',\n    'decaf',\n    'decal',\n    'decathlon',\n    'decay',\n    'deceased',\n    'deceit',\n    'deceiver',\n    'deceiving',\n    'december',\n    'decency',\n    'decent',\n    'deception',\n    'deceptive',\n    'decibel',\n    'decidable',\n    'decimal',\n    'decimeter',\n    'decipher',\n    'deck',\n    'declared',\n    'decline',\n    'decode',\n    'decompose',\n    'decorated',\n    'decorator',\n    'decoy',\n    'decrease',\n    'decree',\n    'dedicate',\n    'dedicator',\n    'deduce',\n    'deduct',\n    'deed',\n    'deem',\n    'deepen',\n    'deeply',\n    'deepness',\n    'deface',\n    'defacing',\n    'defame',\n    'default',\n    'defeat',\n    'defection',\n    'defective',\n    'defendant',\n    'defender',\n    'defense',\n    'defensive',\n    'deferral',\n    'deferred',\n    'defiance',\n    'defiant',\n    'defile',\n    'defiling',\n    'define',\n    'definite',\n    'deflate',\n    'deflation',\n    'deflator',\n    'deflected',\n    'deflector',\n    'defog',\n    'deforest',\n    'defraud',\n    'defrost',\n    'deftly',\n    'defuse',\n    'defy',\n    'degraded',\n    'degrading',\n    'degrease',\n    'degree',\n    'dehydrate',\n    'deity',\n    'dejected',\n    'delay',\n    'delegate',\n    'delegator',\n    'delete',\n    'deletion',\n    'delicacy',\n    'delicate',\n    'delicious',\n    'delighted',\n    'delirious',\n    'delirium',\n    'deliverer',\n    'delivery',\n    'delouse',\n    'delta',\n    'deluge',\n    'delusion',\n    'deluxe',\n    'demanding',\n    'demeaning',\n    'demeanor',\n    'demise',\n    'democracy',\n    'democrat',\n    'demote',\n    'demotion',\n    'demystify',\n    'denatured',\n    'deniable',\n    'denial',\n    'denim',\n    'denote',\n    'dense',\n    'density',\n    'dental',\n    'dentist',\n    'denture',\n    'deny',\n    'deodorant',\n    'deodorize',\n    'departed',\n    'departure',\n    'depict',\n    'deplete',\n    'depletion',\n    'deplored',\n    'deploy',\n    'deport',\n    'depose',\n    'depraved',\n    'depravity',\n    'deprecate',\n    'depress',\n    'deprive',\n    'depth',\n    'deputize',\n    'deputy',\n    'derail',\n    'deranged',\n    'derby',\n    'derived',\n    'desecrate',\n    'deserve',\n    'deserving',\n    'designate',\n    'designed',\n    'designer',\n    'designing',\n    'deskbound',\n    'desktop',\n    'deskwork',\n    'desolate',\n    'despair',\n    'despise',\n    'despite',\n    'destiny',\n    'destitute',\n    'destruct',\n    'detached',\n    'detail',\n    'detection',\n    'detective',\n    'detector',\n    'detention',\n    'detergent',\n    'detest',\n    'detonate',\n    'detonator',\n    'detoxify',\n    'detract',\n    'deuce',\n    'devalue',\n    'deviancy',\n    'deviant',\n    'deviate',\n    'deviation',\n    'deviator',\n    'device',\n    'devious',\n    'devotedly',\n    'devotee',\n    'devotion',\n    'devourer',\n    'devouring',\n    'devoutly',\n    'dexterity',\n    'dexterous',\n    'diabetes',\n    'diabetic',\n    'diabolic',\n    'diagnoses',\n    'diagnosis',\n    'diagram',\n    'dial',\n    'diameter',\n    'diaper',\n    'diaphragm',\n    'diary',\n    'dice',\n    'dicing',\n    'dictate',\n    'dictation',\n    'dictator',\n    'difficult',\n    'diffused',\n    'diffuser',\n    'diffusion',\n    'diffusive',\n    'dig',\n    'dilation',\n    'diligence',\n    'diligent',\n    'dill',\n    'dilute',\n    'dime',\n    'diminish',\n    'dimly',\n    'dimmed',\n    'dimmer',\n    'dimness',\n    'dimple',\n    'diner',\n    'dingbat',\n    'dinghy',\n    'dinginess',\n    'dingo',\n    'dingy',\n    'dining',\n    'dinner',\n    'diocese',\n    'dioxide',\n    'diploma',\n    'dipped',\n    'dipper',\n    'dipping',\n    'directed',\n    'direction',\n    'directive',\n    'directly',\n    'directory',\n    'direness',\n    'dirtiness',\n    'disabled',\n    'disagree',\n    'disallow',\n    'disarm',\n    'disarray',\n    'disaster',\n    'disband',\n    'disbelief',\n    'disburse',\n    'discard',\n    'discern',\n    'discharge',\n    'disclose',\n    'discolor',\n    'discount',\n    'discourse',\n    'discover',\n    'discuss',\n    'disdain',\n    'disengage',\n    'disfigure',\n    'disgrace',\n    'dish',\n    'disinfect',\n    'disjoin',\n    'disk',\n    'dislike',\n    'disliking',\n    'dislocate',\n    'dislodge',\n    'disloyal',\n    'dismantle',\n    'dismay',\n    'dismiss',\n    'dismount',\n    'disobey',\n    'disorder',\n    'disown',\n    'disparate',\n    'disparity',\n    'dispatch',\n    'dispense',\n    'dispersal',\n    'dispersed',\n    'disperser',\n    'displace',\n    'display',\n    'displease',\n    'disposal',\n    'dispose',\n    'disprove',\n    'dispute',\n    'disregard',\n    'disrupt',\n    'dissuade',\n    'distance',\n    'distant',\n    'distaste',\n    'distill',\n    'distinct',\n    'distort',\n    'distract',\n    'distress',\n    'district',\n    'distrust',\n    'ditch',\n    'ditto',\n    'ditzy',\n    'dividable',\n    'divided',\n    'dividend',\n    'dividers',\n    'dividing',\n    'divinely',\n    'diving',\n    'divinity',\n    'divisible',\n    'divisibly',\n    'division',\n    'divisive',\n    'divorcee',\n    'dizziness',\n    'dizzy',\n    'doable',\n    'docile',\n    'dock',\n    'doctrine',\n    'document',\n    'dodge',\n    'dodgy',\n    'doily',\n    'doing',\n    'dole',\n    'dollar',\n    'dollhouse',\n    'dollop',\n    'dolly',\n    'dolphin',\n    'domain',\n    'domelike',\n    'domestic',\n    'dominion',\n    'dominoes',\n    'donated',\n    'donation',\n    'donator',\n    'donor',\n    'donut',\n    'doodle',\n    'doorbell',\n    'doorframe',\n    'doorknob',\n    'doorman',\n    'doormat',\n    'doornail',\n    'doorpost',\n    'doorstep',\n    'doorstop',\n    'doorway',\n    'doozy',\n    'dork',\n    'dormitory',\n    'dorsal',\n    'dosage',\n    'dose',\n    'dotted',\n    'doubling',\n    'douche',\n    'dove',\n    'down',\n    'dowry',\n    'doze',\n    'drab',\n    'dragging',\n    'dragonfly',\n    'dragonish',\n    'dragster',\n    'drainable',\n    'drainage',\n    'drained',\n    'drainer',\n    'drainpipe',\n    'dramatic',\n    'dramatize',\n    'drank',\n    'drapery',\n    'drastic',\n    'draw',\n    'dreaded',\n    'dreadful',\n    'dreadlock',\n    'dreamboat',\n    'dreamily',\n    'dreamland',\n    'dreamless',\n    'dreamlike',\n    'dreamt',\n    'dreamy',\n    'drearily',\n    'dreary',\n    'drench',\n    'dress',\n    'drew',\n    'dribble',\n    'dried',\n    'drier',\n    'drift',\n    'driller',\n    'drilling',\n    'drinkable',\n    'drinking',\n    'dripping',\n    'drippy',\n    'drivable',\n    'driven',\n    'driver',\n    'driveway',\n    'driving',\n    'drizzle',\n    'drizzly',\n    'drone',\n    'drool',\n    'droop',\n    'drop-down',\n    'dropbox',\n    'dropkick',\n    'droplet',\n    'dropout',\n    'dropper',\n    'drove',\n    'drown',\n    'drowsily',\n    'drudge',\n    'drum',\n    'dry',\n    'dubbed',\n    'dubiously',\n    'duchess',\n    'duckbill',\n    'ducking',\n    'duckling',\n    'ducktail',\n    'ducky',\n    'duct',\n    'dude',\n    'duffel',\n    'dugout',\n    'duh',\n    'duke',\n    'duller',\n    'dullness',\n    'duly',\n    'dumping',\n    'dumpling',\n    'dumpster',\n    'duo',\n    'dupe',\n    'duplex',\n    'duplicate',\n    'duplicity',\n    'durable',\n    'durably',\n    'duration',\n    'duress',\n    'during',\n    'dusk',\n    'dust',\n    'dutiful',\n    'duty',\n    'duvet',\n    'dwarf',\n    'dweeb',\n    'dwelled',\n    'dweller',\n    'dwelling',\n    'dwindle',\n    'dwindling',\n    'dynamic',\n    'dynamite',\n    'dynasty',\n    'dyslexia',\n    'dyslexic',\n    'each',\n    'eagle',\n    'earache',\n    'eardrum',\n    'earflap',\n    'earful',\n    'earlobe',\n    'early',\n    'earmark',\n    'earmuff',\n    'earphone',\n    'earpiece',\n    'earplugs',\n    'earring',\n    'earshot',\n    'earthen',\n    'earthlike',\n    'earthling',\n    'earthly',\n    'earthworm',\n    'earthy',\n    'earwig',\n    'easeful',\n    'easel',\n    'easiest',\n    'easily',\n    'easiness',\n    'easing',\n    'eastbound',\n    'eastcoast',\n    'easter',\n    'eastward',\n    'eatable',\n    'eaten',\n    'eatery',\n    'eating',\n    'eats',\n    'ebay',\n    'ebony',\n    'ebook',\n    'ecard',\n    'eccentric',\n    'echo',\n    'eclair',\n    'eclipse',\n    'ecologist',\n    'ecology',\n    'economic',\n    'economist',\n    'economy',\n    'ecosphere',\n    'ecosystem',\n    'edge',\n    'edginess',\n    'edging',\n    'edgy',\n    'edition',\n    'editor',\n    'educated',\n    'education',\n    'educator',\n    'eel',\n    'effective',\n    'effects',\n    'efficient',\n    'effort',\n    'eggbeater',\n    'egging',\n    'eggnog',\n    'eggplant',\n    'eggshell',\n    'egomaniac',\n    'egotism',\n    'egotistic',\n    'either',\n    'eject',\n    'elaborate',\n    'elastic',\n    'elated',\n    'elbow',\n    'eldercare',\n    'elderly',\n    'eldest',\n    'electable',\n    'election',\n    'elective',\n    'elephant',\n    'elevate',\n    'elevating',\n    'elevation',\n    'elevator',\n    'eleven',\n    'elf',\n    'eligible',\n    'eligibly',\n    'eliminate',\n    'elite',\n    'elitism',\n    'elixir',\n    'elk',\n    'ellipse',\n    'elliptic',\n    'elm',\n    'elongated',\n    'elope',\n    'eloquence',\n    'eloquent',\n    'elsewhere',\n    'elude',\n    'elusive',\n    'elves',\n    'email',\n    'embargo',\n    'embark',\n    'embassy',\n    'embattled',\n    'embellish',\n    'ember',\n    'embezzle',\n    'emblaze',\n    'emblem',\n    'embody',\n    'embolism',\n    'emboss',\n    'embroider',\n    'emcee',\n    'emerald',\n    'emergency',\n    'emission',\n    'emit',\n    'emote',\n    'emoticon',\n    'emotion',\n    'empathic',\n    'empathy',\n    'emperor',\n    'emphases',\n    'emphasis',\n    'emphasize',\n    'emphatic',\n    'empirical',\n    'employed',\n    'employee',\n    'employer',\n    'emporium',\n    'empower',\n    'emptier',\n    'emptiness',\n    'empty',\n    'emu',\n    'enable',\n    'enactment',\n    'enamel',\n    'enchanted',\n    'enchilada',\n    'encircle',\n    'enclose',\n    'enclosure',\n    'encode',\n    'encore',\n    'encounter',\n    'encourage',\n    'encroach',\n    'encrust',\n    'encrypt',\n    'endanger',\n    'endeared',\n    'endearing',\n    'ended',\n    'ending',\n    'endless',\n    'endnote',\n    'endocrine',\n    'endorphin',\n    'endorse',\n    'endowment',\n    'endpoint',\n    'endurable',\n    'endurance',\n    'enduring',\n    'energetic',\n    'energize',\n    'energy',\n    'enforced',\n    'enforcer',\n    'engaged',\n    'engaging',\n    'engine',\n    'engorge',\n    'engraved',\n    'engraver',\n    'engraving',\n    'engross',\n    'engulf',\n    'enhance',\n    'enigmatic',\n    'enjoyable',\n    'enjoyably',\n    'enjoyer',\n    'enjoying',\n    'enjoyment',\n    'enlarged',\n    'enlarging',\n    'enlighten',\n    'enlisted',\n    'enquirer',\n    'enrage',\n    'enrich',\n    'enroll',\n    'enslave',\n    'ensnare',\n    'ensure',\n    'entail',\n    'entangled',\n    'entering',\n    'entertain',\n    'enticing',\n    'entire',\n    'entitle',\n    'entity',\n    'entomb',\n    'entourage',\n    'entrap',\n    'entree',\n    'entrench',\n    'entrust',\n    'entryway',\n    'entwine',\n    'enunciate',\n    'envelope',\n    'enviable',\n    'enviably',\n    'envious',\n    'envision',\n    'envoy',\n    'envy',\n    'enzyme',\n    'epic',\n    'epidemic',\n    'epidermal',\n    'epidermis',\n    'epidural',\n    'epilepsy',\n    'epileptic',\n    'epilogue',\n    'epiphany',\n    'episode',\n    'equal',\n    'equate',\n    'equation',\n    'equator',\n    'equinox',\n    'equipment',\n    'equity',\n    'equivocal',\n    'eradicate',\n    'erasable',\n    'erased',\n    'eraser',\n    'erasure',\n    'ergonomic',\n    'errand',\n    'errant',\n    'erratic',\n    'error',\n    'erupt',\n    'escalate',\n    'escalator',\n    'escapable',\n    'escapade',\n    'escapist',\n    'escargot',\n    'eskimo',\n    'esophagus',\n    'espionage',\n    'espresso',\n    'esquire',\n    'essay',\n    'essence',\n    'essential',\n    'establish',\n    'estate',\n    'esteemed',\n    'estimate',\n    'estimator',\n    'estranged',\n    'estrogen',\n    'etching',\n    'eternal',\n    'eternity',\n    'ethanol',\n    'ether',\n    'ethically',\n    'ethics',\n    'euphemism',\n    'evacuate',\n    'evacuee',\n    'evade',\n    'evaluate',\n    'evaluator',\n    'evaporate',\n    'evasion',\n    'evasive',\n    'even',\n    'everglade',\n    'evergreen',\n    'everybody',\n    'everyday',\n    'everyone',\n    'evict',\n    'evidence',\n    'evident',\n    'evil',\n    'evoke',\n    'evolution',\n    'evolve',\n    'exact',\n    'exalted',\n    'example',\n    'excavate',\n    'excavator',\n    'exceeding',\n    'exception',\n    'excess',\n    'exchange',\n    'excitable',\n    'exciting',\n    'exclaim',\n    'exclude',\n    'excluding',\n    'exclusion',\n    'exclusive',\n    'excretion',\n    'excretory',\n    'excursion',\n    'excusable',\n    'excusably',\n    'excuse',\n    'exemplary',\n    'exemplify',\n    'exemption',\n    'exerciser',\n    'exert',\n    'exes',\n    'exfoliate',\n    'exhale',\n    'exhaust',\n    'exhume',\n    'exile',\n    'existing',\n    'exit',\n    'exodus',\n    'exonerate',\n    'exorcism',\n    'exorcist',\n    'expand',\n    'expanse',\n    'expansion',\n    'expansive',\n    'expectant',\n    'expedited',\n    'expediter',\n    'expel',\n    'expend',\n    'expenses',\n    'expensive',\n    'expert',\n    'expire',\n    'expiring',\n    'explain',\n    'expletive',\n    'explicit',\n    'explode',\n    'exploit',\n    'explore',\n    'exploring',\n    'exponent',\n    'exporter',\n    'exposable',\n    'expose',\n    'exposure',\n    'express',\n    'expulsion',\n    'exquisite',\n    'extended',\n    'extending',\n    'extent',\n    'extenuate',\n    'exterior',\n    'external',\n    'extinct',\n    'extortion',\n    'extradite',\n    'extras',\n    'extrovert',\n    'extrude',\n    'extruding',\n    'exuberant',\n    'fable',\n    'fabric',\n    'fabulous',\n    'facebook',\n    'facecloth',\n    'facedown',\n    'faceless',\n    'facelift',\n    'faceplate',\n    'faceted',\n    'facial',\n    'facility',\n    'facing',\n    'facsimile',\n    'faction',\n    'factoid',\n    'factor',\n    'factsheet',\n    'factual',\n    'faculty',\n    'fade',\n    'fading',\n    'failing',\n    'falcon',\n    'fall',\n    'false',\n    'falsify',\n    'fame',\n    'familiar',\n    'family',\n    'famine',\n    'famished',\n    'fanatic',\n    'fancied',\n    'fanciness',\n    'fancy',\n    'fanfare',\n    'fang',\n    'fanning',\n    'fantasize',\n    'fantastic',\n    'fantasy',\n    'fascism',\n    'fastball',\n    'faster',\n    'fasting',\n    'fastness',\n    'faucet',\n    'favorable',\n    'favorably',\n    'favored',\n    'favoring',\n    'favorite',\n    'fax',\n    'feast',\n    'federal',\n    'fedora',\n    'feeble',\n    'feed',\n    'feel',\n    'feisty',\n    'feline',\n    'felt-tip',\n    'feminine',\n    'feminism',\n    'feminist',\n    'feminize',\n    'femur',\n    'fence',\n    'fencing',\n    'fender',\n    'ferment',\n    'fernlike',\n    'ferocious',\n    'ferocity',\n    'ferret',\n    'ferris',\n    'ferry',\n    'fervor',\n    'fester',\n    'festival',\n    'festive',\n    'festivity',\n    'fetal',\n    'fetch',\n    'fever',\n    'fiber',\n    'fiction',\n    'fiddle',\n    'fiddling',\n    'fidelity',\n    'fidgeting',\n    'fidgety',\n    'fifteen',\n    'fifth',\n    'fiftieth',\n    'fifty',\n    'figment',\n    'figure',\n    'figurine',\n    'filing',\n    'filled',\n    'filler',\n    'filling',\n    'film',\n    'filter',\n    'filth',\n    'filtrate',\n    'finale',\n    'finalist',\n    'finalize',\n    'finally',\n    'finance',\n    'financial',\n    'finch',\n    'fineness',\n    'finer',\n    'finicky',\n    'finished',\n    'finisher',\n    'finishing',\n    'finite',\n    'finless',\n    'finlike',\n    'fiscally',\n    'fit',\n    'five',\n    'flaccid',\n    'flagman',\n    'flagpole',\n    'flagship',\n    'flagstick',\n    'flagstone',\n    'flail',\n    'flakily',\n    'flaky',\n    'flame',\n    'flammable',\n    'flanked',\n    'flanking',\n    'flannels',\n    'flap',\n    'flaring',\n    'flashback',\n    'flashbulb',\n    'flashcard',\n    'flashily',\n    'flashing',\n    'flashy',\n    'flask',\n    'flatbed',\n    'flatfoot',\n    'flatly',\n    'flatness',\n    'flatten',\n    'flattered',\n    'flatterer',\n    'flattery',\n    'flattop',\n    'flatware',\n    'flatworm',\n    'flavored',\n    'flavorful',\n    'flavoring',\n    'flaxseed',\n    'fled',\n    'fleshed',\n    'fleshy',\n    'flick',\n    'flier',\n    'flight',\n    'flinch',\n    'fling',\n    'flint',\n    'flip',\n    'flirt',\n    'float',\n    'flock',\n    'flogging',\n    'flop',\n    'floral',\n    'florist',\n    'floss',\n    'flounder',\n    'flyable',\n    'flyaway',\n    'flyer',\n    'flying',\n    'flyover',\n    'flypaper',\n    'foam',\n    'foe',\n    'fog',\n    'foil',\n    'folic',\n    'folk',\n    'follicle',\n    'follow',\n    'fondling',\n    'fondly',\n    'fondness',\n    'fondue',\n    'font',\n    'food',\n    'fool',\n    'footage',\n    'football',\n    'footbath',\n    'footboard',\n    'footer',\n    'footgear',\n    'foothill',\n    'foothold',\n    'footing',\n    'footless',\n    'footman',\n    'footnote',\n    'footpad',\n    'footpath',\n    'footprint',\n    'footrest',\n    'footsie',\n    'footsore',\n    'footwear',\n    'footwork',\n    'fossil',\n    'foster',\n    'founder',\n    'founding',\n    'fountain',\n    'fox',\n    'foyer',\n    'fraction',\n    'fracture',\n    'fragile',\n    'fragility',\n    'fragment',\n    'fragrance',\n    'fragrant',\n    'frail',\n    'frame',\n    'framing',\n    'frantic',\n    'fraternal',\n    'frayed',\n    'fraying',\n    'frays',\n    'freckled',\n    'freckles',\n    'freebase',\n    'freebee',\n    'freebie',\n    'freedom',\n    'freefall',\n    'freehand',\n    'freeing',\n    'freeload',\n    'freely',\n    'freemason',\n    'freeness',\n    'freestyle',\n    'freeware',\n    'freeway',\n    'freewill',\n    'freezable',\n    'freezing',\n    'freight',\n    'french',\n    'frenzied',\n    'frenzy',\n    'frequency',\n    'frequent',\n    'fresh',\n    'fretful',\n    'fretted',\n    'friction',\n    'friday',\n    'fridge',\n    'fried',\n    'friend',\n    'frighten',\n    'frightful',\n    'frigidity',\n    'frigidly',\n    'frill',\n    'fringe',\n    'frisbee',\n    'frisk',\n    'fritter',\n    'frivolous',\n    'frolic',\n    'from',\n    'front',\n    'frostbite',\n    'frosted',\n    'frostily',\n    'frosting',\n    'frostlike',\n    'frosty',\n    'froth',\n    'frown',\n    'frozen',\n    'fructose',\n    'frugality',\n    'frugally',\n    'fruit',\n    'frustrate',\n    'frying',\n    'gab',\n    'gaffe',\n    'gag',\n    'gainfully',\n    'gaining',\n    'gains',\n    'gala',\n    'gallantly',\n    'galleria',\n    'gallery',\n    'galley',\n    'gallon',\n    'gallows',\n    'gallstone',\n    'galore',\n    'galvanize',\n    'gambling',\n    'game',\n    'gaming',\n    'gamma',\n    'gander',\n    'gangly',\n    'gangrene',\n    'gangway',\n    'gap',\n    'garage',\n    'garbage',\n    'garden',\n    'gargle',\n    'garland',\n    'garlic',\n    'garment',\n    'garnet',\n    'garnish',\n    'garter',\n    'gas',\n    'gatherer',\n    'gathering',\n    'gating',\n    'gauging',\n    'gauntlet',\n    'gauze',\n    'gave',\n    'gawk',\n    'gazing',\n    'gear',\n    'gecko',\n    'geek',\n    'geiger',\n    'gem',\n    'gender',\n    'generic',\n    'generous',\n    'genetics',\n    'genre',\n    'gentile',\n    'gentleman',\n    'gently',\n    'gents',\n    'geography',\n    'geologic',\n    'geologist',\n    'geology',\n    'geometric',\n    'geometry',\n    'geranium',\n    'gerbil',\n    'geriatric',\n    'germicide',\n    'germinate',\n    'germless',\n    'germproof',\n    'gestate',\n    'gestation',\n    'gesture',\n    'getaway',\n    'getting',\n    'getup',\n    'giant',\n    'gibberish',\n    'giblet',\n    'giddily',\n    'giddiness',\n    'giddy',\n    'gift',\n    'gigabyte',\n    'gigahertz',\n    'gigantic',\n    'giggle',\n    'giggling',\n    'giggly',\n    'gigolo',\n    'gilled',\n    'gills',\n    'gimmick',\n    'girdle',\n    'giveaway',\n    'given',\n    'giver',\n    'giving',\n    'gizmo',\n    'gizzard',\n    'glacial',\n    'glacier',\n    'glade',\n    'gladiator',\n    'gladly',\n    'glamorous',\n    'glamour',\n    'glance',\n    'glancing',\n    'glandular',\n    'glare',\n    'glaring',\n    'glass',\n    'glaucoma',\n    'glazing',\n    'gleaming',\n    'gleeful',\n    'glider',\n    'gliding',\n    'glimmer',\n    'glimpse',\n    'glisten',\n    'glitch',\n    'glitter',\n    'glitzy',\n    'gloater',\n    'gloating',\n    'gloomily',\n    'gloomy',\n    'glorified',\n    'glorifier',\n    'glorify',\n    'glorious',\n    'glory',\n    'gloss',\n    'glove',\n    'glowing',\n    'glowworm',\n    'glucose',\n    'glue',\n    'gluten',\n    'glutinous',\n    'glutton',\n    'gnarly',\n    'gnat',\n    'goal',\n    'goatskin',\n    'goes',\n    'goggles',\n    'going',\n    'goldfish',\n    'goldmine',\n    'goldsmith',\n    'golf',\n    'goliath',\n    'gonad',\n    'gondola',\n    'gone',\n    'gong',\n    'good',\n    'gooey',\n    'goofball',\n    'goofiness',\n    'goofy',\n    'google',\n    'goon',\n    'gopher',\n    'gore',\n    'gorged',\n    'gorgeous',\n    'gory',\n    'gosling',\n    'gossip',\n    'gothic',\n    'gotten',\n    'gout',\n    'gown',\n    'grab',\n    'graceful',\n    'graceless',\n    'gracious',\n    'gradation',\n    'graded',\n    'grader',\n    'gradient',\n    'grading',\n    'gradually',\n    'graduate',\n    'graffiti',\n    'grafted',\n    'grafting',\n    'grain',\n    'granddad',\n    'grandkid',\n    'grandly',\n    'grandma',\n    'grandpa',\n    'grandson',\n    'granite',\n    'granny',\n    'granola',\n    'grant',\n    'granular',\n    'grape',\n    'graph',\n    'grapple',\n    'grappling',\n    'grasp',\n    'grass',\n    'gratified',\n    'gratify',\n    'grating',\n    'gratitude',\n    'gratuity',\n    'gravel',\n    'graveness',\n    'graves',\n    'graveyard',\n    'gravitate',\n    'gravity',\n    'gravy',\n    'gray',\n    'grazing',\n    'greasily',\n    'greedily',\n    'greedless',\n    'greedy',\n    'green',\n    'greeter',\n    'greeting',\n    'grew',\n    'greyhound',\n    'grid',\n    'grief',\n    'grievance',\n    'grieving',\n    'grievous',\n    'grill',\n    'grimace',\n    'grimacing',\n    'grime',\n    'griminess',\n    'grimy',\n    'grinch',\n    'grinning',\n    'grip',\n    'gristle',\n    'grit',\n    'groggily',\n    'groggy',\n    'groin',\n    'groom',\n    'groove',\n    'grooving',\n    'groovy',\n    'grope',\n    'ground',\n    'grouped',\n    'grout',\n    'grove',\n    'grower',\n    'growing',\n    'growl',\n    'grub',\n    'grudge',\n    'grudging',\n    'grueling',\n    'gruffly',\n    'grumble',\n    'grumbling',\n    'grumbly',\n    'grumpily',\n    'grunge',\n    'grunt',\n    'guacamole',\n    'guidable',\n    'guidance',\n    'guide',\n    'guiding',\n    'guileless',\n    'guise',\n    'gulf',\n    'gullible',\n    'gully',\n    'gulp',\n    'gumball',\n    'gumdrop',\n    'gumminess',\n    'gumming',\n    'gummy',\n    'gurgle',\n    'gurgling',\n    'guru',\n    'gush',\n    'gusto',\n    'gusty',\n    'gutless',\n    'guts',\n    'gutter',\n    'guy',\n    'guzzler',\n    'gyration',\n    'habitable',\n    'habitant',\n    'habitat',\n    'habitual',\n    'hacked',\n    'hacker',\n    'hacking',\n    'hacksaw',\n    'had',\n    'haggler',\n    'haiku',\n    'half',\n    'halogen',\n    'halt',\n    'halved',\n    'halves',\n    'hamburger',\n    'hamlet',\n    'hammock',\n    'hamper',\n    'hamster',\n    'hamstring',\n    'handbag',\n    'handball',\n    'handbook',\n    'handbrake',\n    'handcart',\n    'handclap',\n    'handclasp',\n    'handcraft',\n    'handcuff',\n    'handed',\n    'handful',\n    'handgrip',\n    'handgun',\n    'handheld',\n    'handiness',\n    'handiwork',\n    'handlebar',\n    'handled',\n    'handler',\n    'handling',\n    'handmade',\n    'handoff',\n    'handpick',\n    'handprint',\n    'handrail',\n    'handsaw',\n    'handset',\n    'handsfree',\n    'handshake',\n    'handstand',\n    'handwash',\n    'handwork',\n    'handwoven',\n    'handwrite',\n    'handyman',\n    'hangnail',\n    'hangout',\n    'hangover',\n    'hangup',\n    'hankering',\n    'hankie',\n    'hanky',\n    'haphazard',\n    'happening',\n    'happier',\n    'happiest',\n    'happily',\n    'happiness',\n    'happy',\n    'harbor',\n    'hardcopy',\n    'hardcore',\n    'hardcover',\n    'harddisk',\n    'hardened',\n    'hardener',\n    'hardening',\n    'hardhat',\n    'hardhead',\n    'hardiness',\n    'hardly',\n    'hardness',\n    'hardship',\n    'hardware',\n    'hardwired',\n    'hardwood',\n    'hardy',\n    'harmful',\n    'harmless',\n    'harmonica',\n    'harmonics',\n    'harmonize',\n    'harmony',\n    'harness',\n    'harpist',\n    'harsh',\n    'harvest',\n    'hash',\n    'hassle',\n    'haste',\n    'hastily',\n    'hastiness',\n    'hasty',\n    'hatbox',\n    'hatchback',\n    'hatchery',\n    'hatchet',\n    'hatching',\n    'hatchling',\n    'hate',\n    'hatless',\n    'hatred',\n    'haunt',\n    'haven',\n    'hazard',\n    'hazelnut',\n    'hazily',\n    'haziness',\n    'hazing',\n    'hazy',\n    'headache',\n    'headband',\n    'headboard',\n    'headcount',\n    'headdress',\n    'headed',\n    'header',\n    'headfirst',\n    'headgear',\n    'heading',\n    'headlamp',\n    'headless',\n    'headlock',\n    'headphone',\n    'headpiece',\n    'headrest',\n    'headroom',\n    'headscarf',\n    'headset',\n    'headsman',\n    'headstand',\n    'headstone',\n    'headway',\n    'headwear',\n    'heap',\n    'heat',\n    'heave',\n    'heavily',\n    'heaviness',\n    'heaving',\n    'hedge',\n    'hedging',\n    'heftiness',\n    'hefty',\n    'helium',\n    'helmet',\n    'helper',\n    'helpful',\n    'helping',\n    'helpless',\n    'helpline',\n    'hemlock',\n    'hemstitch',\n    'hence',\n    'henchman',\n    'henna',\n    'herald',\n    'herbal',\n    'herbicide',\n    'herbs',\n    'heritage',\n    'hermit',\n    'heroics',\n    'heroism',\n    'herring',\n    'herself',\n    'hertz',\n    'hesitancy',\n    'hesitant',\n    'hesitate',\n    'hexagon',\n    'hexagram',\n    'hubcap',\n    'huddle',\n    'huddling',\n    'huff',\n    'hug',\n    'hula',\n    'hulk',\n    'hull',\n    'human',\n    'humble',\n    'humbling',\n    'humbly',\n    'humid',\n    'humiliate',\n    'humility',\n    'humming',\n    'hummus',\n    'humongous',\n    'humorist',\n    'humorless',\n    'humorous',\n    'humpback',\n    'humped',\n    'humvee',\n    'hunchback',\n    'hundredth',\n    'hunger',\n    'hungrily',\n    'hungry',\n    'hunk',\n    'hunter',\n    'hunting',\n    'huntress',\n    'huntsman',\n    'hurdle',\n    'hurled',\n    'hurler',\n    'hurling',\n    'hurray',\n    'hurricane',\n    'hurried',\n    'hurry',\n    'hurt',\n    'husband',\n    'hush',\n    'husked',\n    'huskiness',\n    'hut',\n    'hybrid',\n    'hydrant',\n    'hydrated',\n    'hydration',\n    'hydrogen',\n    'hydroxide',\n    'hyperlink',\n    'hypertext',\n    'hyphen',\n    'hypnoses',\n    'hypnosis',\n    'hypnotic',\n    'hypnotism',\n    'hypnotist',\n    'hypnotize',\n    'hypocrisy',\n    'hypocrite',\n    'ibuprofen',\n    'ice',\n    'iciness',\n    'icing',\n    'icky',\n    'icon',\n    'icy',\n    'idealism',\n    'idealist',\n    'idealize',\n    'ideally',\n    'idealness',\n    'identical',\n    'identify',\n    'identity',\n    'ideology',\n    'idiocy',\n    'idiom',\n    'idly',\n    'igloo',\n    'ignition',\n    'ignore',\n    'iguana',\n    'illicitly',\n    'illusion',\n    'illusive',\n    'image',\n    'imaginary',\n    'imagines',\n    'imaging',\n    'imbecile',\n    'imitate',\n    'imitation',\n    'immature',\n    'immerse',\n    'immersion',\n    'imminent',\n    'immobile',\n    'immodest',\n    'immorally',\n    'immortal',\n    'immovable',\n    'immovably',\n    'immunity',\n    'immunize',\n    'impaired',\n    'impale',\n    'impart',\n    'impatient',\n    'impeach',\n    'impeding',\n    'impending',\n    'imperfect',\n    'imperial',\n    'impish',\n    'implant',\n    'implement',\n    'implicate',\n    'implicit',\n    'implode',\n    'implosion',\n    'implosive',\n    'imply',\n    'impolite',\n    'important',\n    'importer',\n    'impose',\n    'imposing',\n    'impotence',\n    'impotency',\n    'impotent',\n    'impound',\n    'imprecise',\n    'imprint',\n    'imprison',\n    'impromptu',\n    'improper',\n    'improve',\n    'improving',\n    'improvise',\n    'imprudent',\n    'impulse',\n    'impulsive',\n    'impure',\n    'impurity',\n    'iodine',\n    'iodize',\n    'ion',\n    'ipad',\n    'iphone',\n    'ipod',\n    'irate',\n    'irk',\n    'iron',\n    'irregular',\n    'irrigate',\n    'irritable',\n    'irritably',\n    'irritant',\n    'irritate',\n    'islamic',\n    'islamist',\n    'isolated',\n    'isolating',\n    'isolation',\n    'isotope',\n    'issue',\n    'issuing',\n    'italicize',\n    'italics',\n    'item',\n    'itinerary',\n    'itunes',\n    'ivory',\n    'ivy',\n    'jab',\n    'jackal',\n    'jacket',\n    'jackknife',\n    'jackpot',\n    'jailbird',\n    'jailbreak',\n    'jailer',\n    'jailhouse',\n    'jalapeno',\n    'jam',\n    'janitor',\n    'january',\n    'jargon',\n    'jarring',\n    'jasmine',\n    'jaundice',\n    'jaunt',\n    'java',\n    'jawed',\n    'jawless',\n    'jawline',\n    'jaws',\n    'jaybird',\n    'jaywalker',\n    'jazz',\n    'jeep',\n    'jeeringly',\n    'jellied',\n    'jelly',\n    'jersey',\n    'jester',\n    'jet',\n    'jiffy',\n    'jigsaw',\n    'jimmy',\n    'jingle',\n    'jingling',\n    'jinx',\n    'jitters',\n    'jittery',\n    'job',\n    'jockey',\n    'jockstrap',\n    'jogger',\n    'jogging',\n    'john',\n    'joining',\n    'jokester',\n    'jokingly',\n    'jolliness',\n    'jolly',\n    'jolt',\n    'jot',\n    'jovial',\n    'joyfully',\n    'joylessly',\n    'joyous',\n    'joyride',\n    'joystick',\n    'jubilance',\n    'jubilant',\n    'judge',\n    'judgingly',\n    'judicial',\n    'judiciary',\n    'judo',\n    'juggle',\n    'juggling',\n    'jugular',\n    'juice',\n    'juiciness',\n    'juicy',\n    'jujitsu',\n    'jukebox',\n    'july',\n    'jumble',\n    'jumbo',\n    'jump',\n    'junction',\n    'juncture',\n    'june',\n    'junior',\n    'juniper',\n    'junkie',\n    'junkman',\n    'junkyard',\n    'jurist',\n    'juror',\n    'jury',\n    'justice',\n    'justifier',\n    'justify',\n    'justly',\n    'justness',\n    'juvenile',\n    'kabob',\n    'kangaroo',\n    'karaoke',\n    'karate',\n    'karma',\n    'kebab',\n    'keenly',\n    'keenness',\n    'keep',\n    'keg',\n    'kelp',\n    'kennel',\n    'kept',\n    'kerchief',\n    'kerosene',\n    'kettle',\n    'kick',\n    'kiln',\n    'kilobyte',\n    'kilogram',\n    'kilometer',\n    'kilowatt',\n    'kilt',\n    'kimono',\n    'kindle',\n    'kindling',\n    'kindly',\n    'kindness',\n    'kindred',\n    'kinetic',\n    'kinfolk',\n    'king',\n    'kinship',\n    'kinsman',\n    'kinswoman',\n    'kissable',\n    'kisser',\n    'kissing',\n    'kitchen',\n    'kite',\n    'kitten',\n    'kitty',\n    'kiwi',\n    'kleenex',\n    'knapsack',\n    'knee',\n    'knelt',\n    'knickers',\n    'knoll',\n    'koala',\n    'kooky',\n    'kosher',\n    'krypton',\n    'kudos',\n    'kung',\n    'labored',\n    'laborer',\n    'laboring',\n    'laborious',\n    'labrador',\n    'ladder',\n    'ladies',\n    'ladle',\n    'ladybug',\n    'ladylike',\n    'lagged',\n    'lagging',\n    'lagoon',\n    'lair',\n    'lake',\n    'lance',\n    'landed',\n    'landfall',\n    'landfill',\n    'landing',\n    'landlady',\n    'landless',\n    'landline',\n    'landlord',\n    'landmark',\n    'landmass',\n    'landmine',\n    'landowner',\n    'landscape',\n    'landside',\n    'landslide',\n    'language',\n    'lankiness',\n    'lanky',\n    'lantern',\n    'lapdog',\n    'lapel',\n    'lapped',\n    'lapping',\n    'laptop',\n    'lard',\n    'large',\n    'lark',\n    'lash',\n    'lasso',\n    'last',\n    'latch',\n    'late',\n    'lather',\n    'latitude',\n    'latrine',\n    'latter',\n    'latticed',\n    'launch',\n    'launder',\n    'laundry',\n    'laurel',\n    'lavender',\n    'lavish',\n    'laxative',\n    'lazily',\n    'laziness',\n    'lazy',\n    'lecturer',\n    'left',\n    'legacy',\n    'legal',\n    'legend',\n    'legged',\n    'leggings',\n    'legible',\n    'legibly',\n    'legislate',\n    'lego',\n    'legroom',\n    'legume',\n    'legwarmer',\n    'legwork',\n    'lemon',\n    'lend',\n    'length',\n    'lens',\n    'lent',\n    'leotard',\n    'lesser',\n    'letdown',\n    'lethargic',\n    'lethargy',\n    'letter',\n    'lettuce',\n    'level',\n    'leverage',\n    'levers',\n    'levitate',\n    'levitator',\n    'liability',\n    'liable',\n    'liberty',\n    'librarian',\n    'library',\n    'licking',\n    'licorice',\n    'lid',\n    'life',\n    'lifter',\n    'lifting',\n    'liftoff',\n    'ligament',\n    'likely',\n    'likeness',\n    'likewise',\n    'liking',\n    'lilac',\n    'lilly',\n    'lily',\n    'limb',\n    'limeade',\n    'limelight',\n    'limes',\n    'limit',\n    'limping',\n    'limpness',\n    'line',\n    'lingo',\n    'linguini',\n    'linguist',\n    'lining',\n    'linked',\n    'linoleum',\n    'linseed',\n    'lint',\n    'lion',\n    'lip',\n    'liquefy',\n    'liqueur',\n    'liquid',\n    'lisp',\n    'list',\n    'litigate',\n    'litigator',\n    'litmus',\n    'litter',\n    'little',\n    'livable',\n    'lived',\n    'lively',\n    'liver',\n    'livestock',\n    'lividly',\n    'living',\n    'lizard',\n    'lubricant',\n    'lubricate',\n    'lucid',\n    'luckily',\n    'luckiness',\n    'luckless',\n    'lucrative',\n    'ludicrous',\n    'lugged',\n    'lukewarm',\n    'lullaby',\n    'lumber',\n    'luminance',\n    'luminous',\n    'lumpiness',\n    'lumping',\n    'lumpish',\n    'lunacy',\n    'lunar',\n    'lunchbox',\n    'luncheon',\n    'lunchroom',\n    'lunchtime',\n    'lung',\n    'lurch',\n    'lure',\n    'luridness',\n    'lurk',\n    'lushly',\n    'lushness',\n    'luster',\n    'lustfully',\n    'lustily',\n    'lustiness',\n    'lustrous',\n    'lusty',\n    'luxurious',\n    'luxury',\n    'lying',\n    'lyrically',\n    'lyricism',\n    'lyricist',\n    'lyrics',\n    'macarena',\n    'macaroni',\n    'macaw',\n    'mace',\n    'machine',\n    'machinist',\n    'magazine',\n    'magenta',\n    'maggot',\n    'magical',\n    'magician',\n    'magma',\n    'magnesium',\n    'magnetic',\n    'magnetism',\n    'magnetize',\n    'magnifier',\n    'magnify',\n    'magnitude',\n    'magnolia',\n    'mahogany',\n    'maimed',\n    'majestic',\n    'majesty',\n    'majorette',\n    'majority',\n    'makeover',\n    'maker',\n    'makeshift',\n    'making',\n    'malformed',\n    'malt',\n    'mama',\n    'mammal',\n    'mammary',\n    'mammogram',\n    'manager',\n    'managing',\n    'manatee',\n    'mandarin',\n    'mandate',\n    'mandatory',\n    'mandolin',\n    'manger',\n    'mangle',\n    'mango',\n    'mangy',\n    'manhandle',\n    'manhole',\n    'manhood',\n    'manhunt',\n    'manicotti',\n    'manicure',\n    'manifesto',\n    'manila',\n    'mankind',\n    'manlike',\n    'manliness',\n    'manly',\n    'manmade',\n    'manned',\n    'mannish',\n    'manor',\n    'manpower',\n    'mantis',\n    'mantra',\n    'manual',\n    'many',\n    'map',\n    'marathon',\n    'marauding',\n    'marbled',\n    'marbles',\n    'marbling',\n    'march',\n    'mardi',\n    'margarine',\n    'margarita',\n    'margin',\n    'marigold',\n    'marina',\n    'marine',\n    'marital',\n    'maritime',\n    'marlin',\n    'marmalade',\n    'maroon',\n    'married',\n    'marrow',\n    'marry',\n    'marshland',\n    'marshy',\n    'marsupial',\n    'marvelous',\n    'marxism',\n    'mascot',\n    'masculine',\n    'mashed',\n    'mashing',\n    'massager',\n    'masses',\n    'massive',\n    'mastiff',\n    'matador',\n    'matchbook',\n    'matchbox',\n    'matcher',\n    'matching',\n    'matchless',\n    'material',\n    'maternal',\n    'maternity',\n    'math',\n    'mating',\n    'matriarch',\n    'matrimony',\n    'matrix',\n    'matron',\n    'matted',\n    'matter',\n    'maturely',\n    'maturing',\n    'maturity',\n    'mauve',\n    'maverick',\n    'maximize',\n    'maximum',\n    'maybe',\n    'mayday',\n    'mayflower',\n    'moaner',\n    'moaning',\n    'mobile',\n    'mobility',\n    'mobilize',\n    'mobster',\n    'mocha',\n    'mocker',\n    'mockup',\n    'modified',\n    'modify',\n    'modular',\n    'modulator',\n    'module',\n    'moisten',\n    'moistness',\n    'moisture',\n    'molar',\n    'molasses',\n    'mold',\n    'molecular',\n    'molecule',\n    'molehill',\n    'mollusk',\n    'mom',\n    'monastery',\n    'monday',\n    'monetary',\n    'monetize',\n    'moneybags',\n    'moneyless',\n    'moneywise',\n    'mongoose',\n    'mongrel',\n    'monitor',\n    'monkhood',\n    'monogamy',\n    'monogram',\n    'monologue',\n    'monopoly',\n    'monorail',\n    'monotone',\n    'monotype',\n    'monoxide',\n    'monsieur',\n    'monsoon',\n    'monstrous',\n    'monthly',\n    'monument',\n    'moocher',\n    'moodiness',\n    'moody',\n    'mooing',\n    'moonbeam',\n    'mooned',\n    'moonlight',\n    'moonlike',\n    'moonlit',\n    'moonrise',\n    'moonscape',\n    'moonshine',\n    'moonstone',\n    'moonwalk',\n    'mop',\n    'morale',\n    'morality',\n    'morally',\n    'morbidity',\n    'morbidly',\n    'morphine',\n    'morphing',\n    'morse',\n    'mortality',\n    'mortally',\n    'mortician',\n    'mortified',\n    'mortify',\n    'mortuary',\n    'mosaic',\n    'mossy',\n    'most',\n    'mothball',\n    'mothproof',\n    'motion',\n    'motivate',\n    'motivator',\n    'motive',\n    'motocross',\n    'motor',\n    'motto',\n    'mountable',\n    'mountain',\n    'mounted',\n    'mounting',\n    'mourner',\n    'mournful',\n    'mouse',\n    'mousiness',\n    'moustache',\n    'mousy',\n    'mouth',\n    'movable',\n    'move',\n    'movie',\n    'moving',\n    'mower',\n    'mowing',\n    'much',\n    'muck',\n    'mud',\n    'mug',\n    'mulberry',\n    'mulch',\n    'mule',\n    'mulled',\n    'mullets',\n    'multiple',\n    'multiply',\n    'multitask',\n    'multitude',\n    'mumble',\n    'mumbling',\n    'mumbo',\n    'mummified',\n    'mummify',\n    'mummy',\n    'mumps',\n    'munchkin',\n    'mundane',\n    'municipal',\n    'muppet',\n    'mural',\n    'murkiness',\n    'murky',\n    'murmuring',\n    'muscular',\n    'museum',\n    'mushily',\n    'mushiness',\n    'mushroom',\n    'mushy',\n    'music',\n    'musket',\n    'muskiness',\n    'musky',\n    'mustang',\n    'mustard',\n    'muster',\n    'mustiness',\n    'musty',\n    'mutable',\n    'mutate',\n    'mutation',\n    'mute',\n    'mutilated',\n    'mutilator',\n    'mutiny',\n    'mutt',\n    'mutual',\n    'muzzle',\n    'myself',\n    'myspace',\n    'mystified',\n    'mystify',\n    'myth',\n    'nacho',\n    'nag',\n    'nail',\n    'name',\n    'naming',\n    'nanny',\n    'nanometer',\n    'nape',\n    'napkin',\n    'napped',\n    'napping',\n    'nappy',\n    'narrow',\n    'nastily',\n    'nastiness',\n    'national',\n    'native',\n    'nativity',\n    'natural',\n    'nature',\n    'naturist',\n    'nautical',\n    'navigate',\n    'navigator',\n    'navy',\n    'nearby',\n    'nearest',\n    'nearly',\n    'nearness',\n    'neatly',\n    'neatness',\n    'nebula',\n    'nebulizer',\n    'nectar',\n    'negate',\n    'negation',\n    'negative',\n    'neglector',\n    'negligee',\n    'negligent',\n    'negotiate',\n    'nemeses',\n    'nemesis',\n    'neon',\n    'nephew',\n    'nerd',\n    'nervous',\n    'nervy',\n    'nest',\n    'net',\n    'neurology',\n    'neuron',\n    'neurosis',\n    'neurotic',\n    'neuter',\n    'neutron',\n    'never',\n    'next',\n    'nibble',\n    'nickname',\n    'nicotine',\n    'niece',\n    'nifty',\n    'nimble',\n    'nimbly',\n    'nineteen',\n    'ninetieth',\n    'ninja',\n    'nintendo',\n    'ninth',\n    'nuclear',\n    'nuclei',\n    'nucleus',\n    'nugget',\n    'nullify',\n    'number',\n    'numbing',\n    'numbly',\n    'numbness',\n    'numeral',\n    'numerate',\n    'numerator',\n    'numeric',\n    'numerous',\n    'nuptials',\n    'nursery',\n    'nursing',\n    'nurture',\n    'nutcase',\n    'nutlike',\n    'nutmeg',\n    'nutrient',\n    'nutshell',\n    'nuttiness',\n    'nutty',\n    'nuzzle',\n    'nylon',\n    'oaf',\n    'oak',\n    'oasis',\n    'oat',\n    'obedience',\n    'obedient',\n    'obituary',\n    'object',\n    'obligate',\n    'obliged',\n    'oblivion',\n    'oblivious',\n    'oblong',\n    'obnoxious',\n    'oboe',\n    'obscure',\n    'obscurity',\n    'observant',\n    'observer',\n    'observing',\n    'obsessed',\n    'obsession',\n    'obsessive',\n    'obsolete',\n    'obstacle',\n    'obstinate',\n    'obstruct',\n    'obtain',\n    'obtrusive',\n    'obtuse',\n    'obvious',\n    'occultist',\n    'occupancy',\n    'occupant',\n    'occupier',\n    'occupy',\n    'ocean',\n    'ocelot',\n    'octagon',\n    'octane',\n    'october',\n    'octopus',\n    'ogle',\n    'oil',\n    'oink',\n    'ointment',\n    'okay',\n    'old',\n    'olive',\n    'olympics',\n    'omega',\n    'omen',\n    'ominous',\n    'omission',\n    'omit',\n    'omnivore',\n    'onboard',\n    'oncoming',\n    'ongoing',\n    'onion',\n    'online',\n    'onlooker',\n    'only',\n    'onscreen',\n    'onset',\n    'onshore',\n    'onslaught',\n    'onstage',\n    'onto',\n    'onward',\n    'onyx',\n    'oops',\n    'ooze',\n    'oozy',\n    'opacity',\n    'opal',\n    'open',\n    'operable',\n    'operate',\n    'operating',\n    'operation',\n    'operative',\n    'operator',\n    'opium',\n    'opossum',\n    'opponent',\n    'oppose',\n    'opposing',\n    'opposite',\n    'oppressed',\n    'oppressor',\n    'opt',\n    'opulently',\n    'osmosis',\n    'other',\n    'otter',\n    'ouch',\n    'ought',\n    'ounce',\n    'outage',\n    'outback',\n    'outbid',\n    'outboard',\n    'outbound',\n    'outbreak',\n    'outburst',\n    'outcast',\n    'outclass',\n    'outcome',\n    'outdated',\n    'outdoors',\n    'outer',\n    'outfield',\n    'outfit',\n    'outflank',\n    'outgoing',\n    'outgrow',\n    'outhouse',\n    'outing',\n    'outlast',\n    'outlet',\n    'outline',\n    'outlook',\n    'outlying',\n    'outmatch',\n    'outmost',\n    'outnumber',\n    'outplayed',\n    'outpost',\n    'outpour',\n    'output',\n    'outrage',\n    'outrank',\n    'outreach',\n    'outright',\n    'outscore',\n    'outsell',\n    'outshine',\n    'outshoot',\n    'outsider',\n    'outskirts',\n    'outsmart',\n    'outsource',\n    'outspoken',\n    'outtakes',\n    'outthink',\n    'outward',\n    'outweigh',\n    'outwit',\n    'oval',\n    'ovary',\n    'oven',\n    'overact',\n    'overall',\n    'overarch',\n    'overbid',\n    'overbill',\n    'overbite',\n    'overblown',\n    'overboard',\n    'overbook',\n    'overbuilt',\n    'overcast',\n    'overcoat',\n    'overcome',\n    'overcook',\n    'overcrowd',\n    'overdraft',\n    'overdrawn',\n    'overdress',\n    'overdrive',\n    'overdue',\n    'overeager',\n    'overeater',\n    'overexert',\n    'overfed',\n    'overfeed',\n    'overfill',\n    'overflow',\n    'overfull',\n    'overgrown',\n    'overhand',\n    'overhang',\n    'overhaul',\n    'overhead',\n    'overhear',\n    'overheat',\n    'overhung',\n    'overjoyed',\n    'overkill',\n    'overlabor',\n    'overlaid',\n    'overlap',\n    'overlay',\n    'overload',\n    'overlook',\n    'overlord',\n    'overlying',\n    'overnight',\n    'overpass',\n    'overpay',\n    'overplant',\n    'overplay',\n    'overpower',\n    'overprice',\n    'overrate',\n    'overreach',\n    'overreact',\n    'override',\n    'overripe',\n    'overrule',\n    'overrun',\n    'overshoot',\n    'overshot',\n    'oversight',\n    'oversized',\n    'oversleep',\n    'oversold',\n    'overspend',\n    'overstate',\n    'overstay',\n    'overstep',\n    'overstock',\n    'overstuff',\n    'oversweet',\n    'overtake',\n    'overthrow',\n    'overtime',\n    'overtly',\n    'overtone',\n    'overture',\n    'overturn',\n    'overuse',\n    'overvalue',\n    'overview',\n    'overwrite',\n    'owl',\n    'oxford',\n    'oxidant',\n    'oxidation',\n    'oxidize',\n    'oxidizing',\n    'oxygen',\n    'oxymoron',\n    'oyster',\n    'ozone',\n    'paced',\n    'pacemaker',\n    'pacific',\n    'pacifier',\n    'pacifism',\n    'pacifist',\n    'pacify',\n    'padded',\n    'padding',\n    'paddle',\n    'paddling',\n    'padlock',\n    'pagan',\n    'pager',\n    'paging',\n    'pajamas',\n    'palace',\n    'palatable',\n    'palm',\n    'palpable',\n    'palpitate',\n    'paltry',\n    'pampered',\n    'pamperer',\n    'pampers',\n    'pamphlet',\n    'panama',\n    'pancake',\n    'pancreas',\n    'panda',\n    'pandemic',\n    'pang',\n    'panhandle',\n    'panic',\n    'panning',\n    'panorama',\n    'panoramic',\n    'panther',\n    'pantomime',\n    'pantry',\n    'pants',\n    'pantyhose',\n    'paparazzi',\n    'papaya',\n    'paper',\n    'paprika',\n    'papyrus',\n    'parabola',\n    'parachute',\n    'parade',\n    'paradox',\n    'paragraph',\n    'parakeet',\n    'paralegal',\n    'paralyses',\n    'paralysis',\n    'paralyze',\n    'paramedic',\n    'parameter',\n    'paramount',\n    'parasail',\n    'parasite',\n    'parasitic',\n    'parcel',\n    'parched',\n    'parchment',\n    'pardon',\n    'parish',\n    'parka',\n    'parking',\n    'parkway',\n    'parlor',\n    'parmesan',\n    'parole',\n    'parrot',\n    'parsley',\n    'parsnip',\n    'partake',\n    'parted',\n    'parting',\n    'partition',\n    'partly',\n    'partner',\n    'partridge',\n    'party',\n    'passable',\n    'passably',\n    'passage',\n    'passcode',\n    'passenger',\n    'passerby',\n    'passing',\n    'passion',\n    'passive',\n    'passivism',\n    'passover',\n    'passport',\n    'password',\n    'pasta',\n    'pasted',\n    'pastel',\n    'pastime',\n    'pastor',\n    'pastrami',\n    'pasture',\n    'pasty',\n    'patchwork',\n    'patchy',\n    'paternal',\n    'paternity',\n    'path',\n    'patience',\n    'patient',\n    'patio',\n    'patriarch',\n    'patriot',\n    'patrol',\n    'patronage',\n    'patronize',\n    'pauper',\n    'pavement',\n    'paver',\n    'pavestone',\n    'pavilion',\n    'paving',\n    'pawing',\n    'payable',\n    'payback',\n    'paycheck',\n    'payday',\n    'payee',\n    'payer',\n    'paying',\n    'payment',\n    'payphone',\n    'payroll',\n    'pebble',\n    'pebbly',\n    'pecan',\n    'pectin',\n    'peculiar',\n    'peddling',\n    'pediatric',\n    'pedicure',\n    'pedigree',\n    'pedometer',\n    'pegboard',\n    'pelican',\n    'pellet',\n    'pelt',\n    'pelvis',\n    'penalize',\n    'penalty',\n    'pencil',\n    'pendant',\n    'pending',\n    'penholder',\n    'penknife',\n    'pennant',\n    'penniless',\n    'penny',\n    'penpal',\n    'pension',\n    'pentagon',\n    'pentagram',\n    'pep',\n    'perceive',\n    'percent',\n    'perch',\n    'percolate',\n    'perennial',\n    'perfected',\n    'perfectly',\n    'perfume',\n    'periscope',\n    'perish',\n    'perjurer',\n    'perjury',\n    'perkiness',\n    'perky',\n    'perm',\n    'peroxide',\n    'perpetual',\n    'perplexed',\n    'persecute',\n    'persevere',\n    'persuaded',\n    'persuader',\n    'pesky',\n    'peso',\n    'pessimism',\n    'pessimist',\n    'pester',\n    'pesticide',\n    'petal',\n    'petite',\n    'petition',\n    'petri',\n    'petroleum',\n    'petted',\n    'petticoat',\n    'pettiness',\n    'petty',\n    'petunia',\n    'phantom',\n    'phobia',\n    'phoenix',\n    'phonebook',\n    'phoney',\n    'phonics',\n    'phoniness',\n    'phony',\n    'phosphate',\n    'photo',\n    'phrase',\n    'phrasing',\n    'placard',\n    'placate',\n    'placidly',\n    'plank',\n    'planner',\n    'plant',\n    'plasma',\n    'plaster',\n    'plastic',\n    'plated',\n    'platform',\n    'plating',\n    'platinum',\n    'platonic',\n    'platter',\n    'platypus',\n    'plausible',\n    'plausibly',\n    'playable',\n    'playback',\n    'player',\n    'playful',\n    'playgroup',\n    'playhouse',\n    'playing',\n    'playlist',\n    'playmaker',\n    'playmate',\n    'playoff',\n    'playpen',\n    'playroom',\n    'playset',\n    'plaything',\n    'playtime',\n    'plaza',\n    'pleading',\n    'pleat',\n    'pledge',\n    'plentiful',\n    'plenty',\n    'plethora',\n    'plexiglas',\n    'pliable',\n    'plod',\n    'plop',\n    'plot',\n    'plow',\n    'ploy',\n    'pluck',\n    'plug',\n    'plunder',\n    'plunging',\n    'plural',\n    'plus',\n    'plutonium',\n    'plywood',\n    'poach',\n    'pod',\n    'poem',\n    'poet',\n    'pogo',\n    'pointed',\n    'pointer',\n    'pointing',\n    'pointless',\n    'pointy',\n    'poise',\n    'poison',\n    'poker',\n    'poking',\n    'polar',\n    'police',\n    'policy',\n    'polio',\n    'polish',\n    'politely',\n    'polka',\n    'polo',\n    'polyester',\n    'polygon',\n    'polygraph',\n    'polymer',\n    'poncho',\n    'pond',\n    'pony',\n    'popcorn',\n    'pope',\n    'poplar',\n    'popper',\n    'poppy',\n    'popsicle',\n    'populace',\n    'popular',\n    'populate',\n    'porcupine',\n    'pork',\n    'porous',\n    'porridge',\n    'portable',\n    'portal',\n    'portfolio',\n    'porthole',\n    'portion',\n    'portly',\n    'portside',\n    'poser',\n    'posh',\n    'posing',\n    'possible',\n    'possibly',\n    'possum',\n    'postage',\n    'postal',\n    'postbox',\n    'postcard',\n    'posted',\n    'poster',\n    'posting',\n    'postnasal',\n    'posture',\n    'postwar',\n    'pouch',\n    'pounce',\n    'pouncing',\n    'pound',\n    'pouring',\n    'pout',\n    'powdered',\n    'powdering',\n    'powdery',\n    'power',\n    'powwow',\n    'pox',\n    'praising',\n    'prance',\n    'prancing',\n    'pranker',\n    'prankish',\n    'prankster',\n    'prayer',\n    'praying',\n    'preacher',\n    'preaching',\n    'preachy',\n    'preamble',\n    'precinct',\n    'precise',\n    'precision',\n    'precook',\n    'precut',\n    'predator',\n    'predefine',\n    'predict',\n    'preface',\n    'prefix',\n    'preflight',\n    'preformed',\n    'pregame',\n    'pregnancy',\n    'pregnant',\n    'preheated',\n    'prelaunch',\n    'prelaw',\n    'prelude',\n    'premiere',\n    'premises',\n    'premium',\n    'prenatal',\n    'preoccupy',\n    'preorder',\n    'prepaid',\n    'prepay',\n    'preplan',\n    'preppy',\n    'preschool',\n    'prescribe',\n    'preseason',\n    'preset',\n    'preshow',\n    'president',\n    'presoak',\n    'press',\n    'presume',\n    'presuming',\n    'preteen',\n    'pretended',\n    'pretender',\n    'pretense',\n    'pretext',\n    'pretty',\n    'pretzel',\n    'prevail',\n    'prevalent',\n    'prevent',\n    'preview',\n    'previous',\n    'prewar',\n    'prewashed',\n    'prideful',\n    'pried',\n    'primal',\n    'primarily',\n    'primary',\n    'primate',\n    'primer',\n    'primp',\n    'princess',\n    'print',\n    'prior',\n    'prism',\n    'prison',\n    'prissy',\n    'pristine',\n    'privacy',\n    'private',\n    'privatize',\n    'prize',\n    'proactive',\n    'probable',\n    'probably',\n    'probation',\n    'probe',\n    'probing',\n    'probiotic',\n    'problem',\n    'procedure',\n    'process',\n    'proclaim',\n    'procreate',\n    'procurer',\n    'prodigal',\n    'prodigy',\n    'produce',\n    'product',\n    'profane',\n    'profanity',\n    'professed',\n    'professor',\n    'profile',\n    'profound',\n    'profusely',\n    'progeny',\n    'prognosis',\n    'program',\n    'progress',\n    'projector',\n    'prologue',\n    'prolonged',\n    'promenade',\n    'prominent',\n    'promoter',\n    'promotion',\n    'prompter',\n    'promptly',\n    'prone',\n    'prong',\n    'pronounce',\n    'pronto',\n    'proofing',\n    'proofread',\n    'proofs',\n    'propeller',\n    'properly',\n    'property',\n    'proponent',\n    'proposal',\n    'propose',\n    'props',\n    'prorate',\n    'protector',\n    'protegee',\n    'proton',\n    'prototype',\n    'protozoan',\n    'protract',\n    'protrude',\n    'proud',\n    'provable',\n    'proved',\n    'proven',\n    'provided',\n    'provider',\n    'providing',\n    'province',\n    'proving',\n    'provoke',\n    'provoking',\n    'provolone',\n    'prowess',\n    'prowler',\n    'prowling',\n    'proximity',\n    'proxy',\n    'prozac',\n    'prude',\n    'prudishly',\n    'prune',\n    'pruning',\n    'pry',\n    'psychic',\n    'public',\n    'publisher',\n    'pucker',\n    'pueblo',\n    'pug',\n    'pull',\n    'pulmonary',\n    'pulp',\n    'pulsate',\n    'pulse',\n    'pulverize',\n    'puma',\n    'pumice',\n    'pummel',\n    'punch',\n    'punctual',\n    'punctuate',\n    'punctured',\n    'pungent',\n    'punisher',\n    'punk',\n    'pupil',\n    'puppet',\n    'puppy',\n    'purchase',\n    'pureblood',\n    'purebred',\n    'purely',\n    'pureness',\n    'purgatory',\n    'purge',\n    'purging',\n    'purifier',\n    'purify',\n    'purist',\n    'puritan',\n    'purity',\n    'purple',\n    'purplish',\n    'purposely',\n    'purr',\n    'purse',\n    'pursuable',\n    'pursuant',\n    'pursuit',\n    'purveyor',\n    'pushcart',\n    'pushchair',\n    'pusher',\n    'pushiness',\n    'pushing',\n    'pushover',\n    'pushpin',\n    'pushup',\n    'pushy',\n    'putdown',\n    'putt',\n    'puzzle',\n    'puzzling',\n    'pyramid',\n    'pyromania',\n    'python',\n    'quack',\n    'quadrant',\n    'quail',\n    'quaintly',\n    'quake',\n    'quaking',\n    'qualified',\n    'qualifier',\n    'qualify',\n    'quality',\n    'qualm',\n    'quantum',\n    'quarrel',\n    'quarry',\n    'quartered',\n    'quarterly',\n    'quarters',\n    'quartet',\n    'quench',\n    'query',\n    'quicken',\n    'quickly',\n    'quickness',\n    'quicksand',\n    'quickstep',\n    'quiet',\n    'quill',\n    'quilt',\n    'quintet',\n    'quintuple',\n    'quirk',\n    'quit',\n    'quiver',\n    'quizzical',\n    'quotable',\n    'quotation',\n    'quote',\n    'rabid',\n    'race',\n    'racing',\n    'racism',\n    'rack',\n    'racoon',\n    'radar',\n    'radial',\n    'radiance',\n    'radiantly',\n    'radiated',\n    'radiation',\n    'radiator',\n    'radio',\n    'radish',\n    'raffle',\n    'raft',\n    'rage',\n    'ragged',\n    'raging',\n    'ragweed',\n    'raider',\n    'railcar',\n    'railing',\n    'railroad',\n    'railway',\n    'raisin',\n    'rake',\n    'raking',\n    'rally',\n    'ramble',\n    'rambling',\n    'ramp',\n    'ramrod',\n    'ranch',\n    'rancidity',\n    'random',\n    'ranged',\n    'ranger',\n    'ranging',\n    'ranked',\n    'ranking',\n    'ransack',\n    'ranting',\n    'rants',\n    'rare',\n    'rarity',\n    'rascal',\n    'rash',\n    'rasping',\n    'ravage',\n    'raven',\n    'ravine',\n    'raving',\n    'ravioli',\n    'ravishing',\n    'reabsorb',\n    'reach',\n    'reacquire',\n    'reaction',\n    'reactive',\n    'reactor',\n    'reaffirm',\n    'ream',\n    'reanalyze',\n    'reappear',\n    'reapply',\n    'reappoint',\n    'reapprove',\n    'rearrange',\n    'rearview',\n    'reason',\n    'reassign',\n    'reassure',\n    'reattach',\n    'reawake',\n    'rebalance',\n    'rebate',\n    'rebel',\n    'rebirth',\n    'reboot',\n    'reborn',\n    'rebound',\n    'rebuff',\n    'rebuild',\n    'rebuilt',\n    'reburial',\n    'rebuttal',\n    'recall',\n    'recant',\n    'recapture',\n    'recast',\n    'recede',\n    'recent',\n    'recess',\n    'recharger',\n    'recipient',\n    'recital',\n    'recite',\n    'reckless',\n    'reclaim',\n    'recliner',\n    'reclining',\n    'recluse',\n    'reclusive',\n    'recognize',\n    'recoil',\n    'recollect',\n    'recolor',\n    'reconcile',\n    'reconfirm',\n    'reconvene',\n    'recopy',\n    'record',\n    'recount',\n    'recoup',\n    'recovery',\n    'recreate',\n    'rectal',\n    'rectangle',\n    'rectified',\n    'rectify',\n    'recycled',\n    'recycler',\n    'recycling',\n    'reemerge',\n    'reenact',\n    'reenter',\n    'reentry',\n    'reexamine',\n    'referable',\n    'referee',\n    'reference',\n    'refill',\n    'refinance',\n    'refined',\n    'refinery',\n    'refining',\n    'refinish',\n    'reflected',\n    'reflector',\n    'reflex',\n    'reflux',\n    'refocus',\n    'refold',\n    'reforest',\n    'reformat',\n    'reformed',\n    'reformer',\n    'reformist',\n    'refract',\n    'refrain',\n    'refreeze',\n    'refresh',\n    'refried',\n    'refueling',\n    'refund',\n    'refurbish',\n    'refurnish',\n    'refusal',\n    'refuse',\n    'refusing',\n    'refutable',\n    'refute',\n    'regain',\n    'regalia',\n    'regally',\n    'reggae',\n    'regime',\n    'region',\n    'register',\n    'registrar',\n    'registry',\n    'regress',\n    'regretful',\n    'regroup',\n    'regular',\n    'regulate',\n    'regulator',\n    'rehab',\n    'reheat',\n    'rehire',\n    'rehydrate',\n    'reimburse',\n    'reissue',\n    'reiterate',\n    'rejoice',\n    'rejoicing',\n    'rejoin',\n    'rekindle',\n    'relapse',\n    'relapsing',\n    'relatable',\n    'related',\n    'relation',\n    'relative',\n    'relax',\n    'relay',\n    'relearn',\n    'release',\n    'relenting',\n    'reliable',\n    'reliably',\n    'reliance',\n    'reliant',\n    'relic',\n    'relieve',\n    'relieving',\n    'relight',\n    'relish',\n    'relive',\n    'reload',\n    'relocate',\n    'relock',\n    'reluctant',\n    'rely',\n    'remake',\n    'remark',\n    'remarry',\n    'rematch',\n    'remedial',\n    'remedy',\n    'remember',\n    'reminder',\n    'remindful',\n    'remission',\n    'remix',\n    'remnant',\n    'remodeler',\n    'remold',\n    'remorse',\n    'remote',\n    'removable',\n    'removal',\n    'removed',\n    'remover',\n    'removing',\n    'rename',\n    'renderer',\n    'rendering',\n    'rendition',\n    'renegade',\n    'renewable',\n    'renewably',\n    'renewal',\n    'renewed',\n    'renounce',\n    'renovate',\n    'renovator',\n    'rentable',\n    'rental',\n    'rented',\n    'renter',\n    'reoccupy',\n    'reoccur',\n    'reopen',\n    'reorder',\n    'repackage',\n    'repacking',\n    'repaint',\n    'repair',\n    'repave',\n    'repaying',\n    'repayment',\n    'repeal',\n    'repeated',\n    'repeater',\n    'repent',\n    'rephrase',\n    'replace',\n    'replay',\n    'replica',\n    'reply',\n    'reporter',\n    'repose',\n    'repossess',\n    'repost',\n    'repressed',\n    'reprimand',\n    'reprint',\n    'reprise',\n    'reproach',\n    'reprocess',\n    'reproduce',\n    'reprogram',\n    'reps',\n    'reptile',\n    'reptilian',\n    'repugnant',\n    'repulsion',\n    'repulsive',\n    'repurpose',\n    'reputable',\n    'reputably',\n    'request',\n    'require',\n    'requisite',\n    'reroute',\n    'rerun',\n    'resale',\n    'resample',\n    'rescuer',\n    'reseal',\n    'research',\n    'reselect',\n    'reseller',\n    'resemble',\n    'resend',\n    'resent',\n    'reset',\n    'reshape',\n    'reshoot',\n    'reshuffle',\n    'residence',\n    'residency',\n    'resident',\n    'residual',\n    'residue',\n    'resigned',\n    'resilient',\n    'resistant',\n    'resisting',\n    'resize',\n    'resolute',\n    'resolved',\n    'resonant',\n    'resonate',\n    'resort',\n    'resource',\n    'respect',\n    'resubmit',\n    'result',\n    'resume',\n    'resupply',\n    'resurface',\n    'resurrect',\n    'retail',\n    'retainer',\n    'retaining',\n    'retake',\n    'retaliate',\n    'retention',\n    'rethink',\n    'retinal',\n    'retired',\n    'retiree',\n    'retiring',\n    'retold',\n    'retool',\n    'retorted',\n    'retouch',\n    'retrace',\n    'retract',\n    'retrain',\n    'retread',\n    'retreat',\n    'retrial',\n    'retrieval',\n    'retriever',\n    'retry',\n    'return',\n    'retying',\n    'retype',\n    'reunion',\n    'reunite',\n    'reusable',\n    'reuse',\n    'reveal',\n    'reveler',\n    'revenge',\n    'revenue',\n    'reverb',\n    'revered',\n    'reverence',\n    'reverend',\n    'reversal',\n    'reverse',\n    'reversing',\n    'reversion',\n    'revert',\n    'revisable',\n    'revise',\n    'revision',\n    'revisit',\n    'revivable',\n    'revival',\n    'reviver',\n    'reviving',\n    'revocable',\n    'revoke',\n    'revolt',\n    'revolver',\n    'revolving',\n    'reward',\n    'rewash',\n    'rewind',\n    'rewire',\n    'reword',\n    'rework',\n    'rewrap',\n    'rewrite',\n    'rhyme',\n    'ribbon',\n    'ribcage',\n    'rice',\n    'riches',\n    'richly',\n    'richness',\n    'rickety',\n    'ricotta',\n    'riddance',\n    'ridden',\n    'ride',\n    'riding',\n    'rifling',\n    'rift',\n    'rigging',\n    'rigid',\n    'rigor',\n    'rimless',\n    'rimmed',\n    'rind',\n    'rink',\n    'rinse',\n    'rinsing',\n    'riot',\n    'ripcord',\n    'ripeness',\n    'ripening',\n    'ripping',\n    'ripple',\n    'rippling',\n    'riptide',\n    'rise',\n    'rising',\n    'risk',\n    'risotto',\n    'ritalin',\n    'ritzy',\n    'rival',\n    'riverbank',\n    'riverbed',\n    'riverboat',\n    'riverside',\n    'riveter',\n    'riveting',\n    'roamer',\n    'roaming',\n    'roast',\n    'robbing',\n    'robe',\n    'robin',\n    'robotics',\n    'robust',\n    'rockband',\n    'rocker',\n    'rocket',\n    'rockfish',\n    'rockiness',\n    'rocking',\n    'rocklike',\n    'rockslide',\n    'rockstar',\n    'rocky',\n    'rogue',\n    'roman',\n    'romp',\n    'rope',\n    'roping',\n    'roster',\n    'rosy',\n    'rotten',\n    'rotting',\n    'rotunda',\n    'roulette',\n    'rounding',\n    'roundish',\n    'roundness',\n    'roundup',\n    'roundworm',\n    'routine',\n    'routing',\n    'rover',\n    'roving',\n    'royal',\n    'rubbed',\n    'rubber',\n    'rubbing',\n    'rubble',\n    'rubdown',\n    'ruby',\n    'ruckus',\n    'rudder',\n    'rug',\n    'ruined',\n    'rule',\n    'rumble',\n    'rumbling',\n    'rummage',\n    'rumor',\n    'runaround',\n    'rundown',\n    'runner',\n    'running',\n    'runny',\n    'runt',\n    'runway',\n    'rupture',\n    'rural',\n    'ruse',\n    'rush',\n    'rust',\n    'rut',\n    'sabbath',\n    'sabotage',\n    'sacrament',\n    'sacred',\n    'sacrifice',\n    'sadden',\n    'saddlebag',\n    'saddled',\n    'saddling',\n    'sadly',\n    'sadness',\n    'safari',\n    'safeguard',\n    'safehouse',\n    'safely',\n    'safeness',\n    'saffron',\n    'saga',\n    'sage',\n    'sagging',\n    'saggy',\n    'said',\n    'saint',\n    'sake',\n    'salad',\n    'salami',\n    'salaried',\n    'salary',\n    'saline',\n    'salon',\n    'saloon',\n    'salsa',\n    'salt',\n    'salutary',\n    'salute',\n    'salvage',\n    'salvaging',\n    'salvation',\n    'same',\n    'sample',\n    'sampling',\n    'sanction',\n    'sanctity',\n    'sanctuary',\n    'sandal',\n    'sandbag',\n    'sandbank',\n    'sandbar',\n    'sandblast',\n    'sandbox',\n    'sanded',\n    'sandfish',\n    'sanding',\n    'sandlot',\n    'sandpaper',\n    'sandpit',\n    'sandstone',\n    'sandstorm',\n    'sandworm',\n    'sandy',\n    'sanitary',\n    'sanitizer',\n    'sank',\n    'santa',\n    'sapling',\n    'sappiness',\n    'sappy',\n    'sarcasm',\n    'sarcastic',\n    'sardine',\n    'sash',\n    'sasquatch',\n    'sassy',\n    'satchel',\n    'satiable',\n    'satin',\n    'satirical',\n    'satisfied',\n    'satisfy',\n    'saturate',\n    'saturday',\n    'sauciness',\n    'saucy',\n    'sauna',\n    'savage',\n    'savanna',\n    'saved',\n    'savings',\n    'savior',\n    'savor',\n    'saxophone',\n    'say',\n    'scabbed',\n    'scabby',\n    'scalded',\n    'scalding',\n    'scale',\n    'scaling',\n    'scallion',\n    'scallop',\n    'scalping',\n    'scam',\n    'scandal',\n    'scanner',\n    'scanning',\n    'scant',\n    'scapegoat',\n    'scarce',\n    'scarcity',\n    'scarecrow',\n    'scared',\n    'scarf',\n    'scarily',\n    'scariness',\n    'scarring',\n    'scary',\n    'scavenger',\n    'scenic',\n    'schedule',\n    'schematic',\n    'scheme',\n    'scheming',\n    'schilling',\n    'schnapps',\n    'scholar',\n    'science',\n    'scientist',\n    'scion',\n    'scoff',\n    'scolding',\n    'scone',\n    'scoop',\n    'scooter',\n    'scope',\n    'scorch',\n    'scorebook',\n    'scorecard',\n    'scored',\n    'scoreless',\n    'scorer',\n    'scoring',\n    'scorn',\n    'scorpion',\n    'scotch',\n    'scoundrel',\n    'scoured',\n    'scouring',\n    'scouting',\n    'scouts',\n    'scowling',\n    'scrabble',\n    'scraggly',\n    'scrambled',\n    'scrambler',\n    'scrap',\n    'scratch',\n    'scrawny',\n    'screen',\n    'scribble',\n    'scribe',\n    'scribing',\n    'scrimmage',\n    'script',\n    'scroll',\n    'scrooge',\n    'scrounger',\n    'scrubbed',\n    'scrubber',\n    'scruffy',\n    'scrunch',\n    'scrutiny',\n    'scuba',\n    'scuff',\n    'sculptor',\n    'sculpture',\n    'scurvy',\n    'scuttle',\n    'secluded',\n    'secluding',\n    'seclusion',\n    'second',\n    'secrecy',\n    'secret',\n    'sectional',\n    'sector',\n    'secular',\n    'securely',\n    'security',\n    'sedan',\n    'sedate',\n    'sedation',\n    'sedative',\n    'sediment',\n    'seduce',\n    'seducing',\n    'segment',\n    'seismic',\n    'seizing',\n    'seldom',\n    'selected',\n    'selection',\n    'selective',\n    'selector',\n    'self',\n    'seltzer',\n    'semantic',\n    'semester',\n    'semicolon',\n    'semifinal',\n    'seminar',\n    'semisoft',\n    'semisweet',\n    'senate',\n    'senator',\n    'send',\n    'senior',\n    'senorita',\n    'sensation',\n    'sensitive',\n    'sensitize',\n    'sensually',\n    'sensuous',\n    'sepia',\n    'september',\n    'septic',\n    'septum',\n    'sequel',\n    'sequence',\n    'sequester',\n    'series',\n    'sermon',\n    'serotonin',\n    'serpent',\n    'serrated',\n    'serve',\n    'service',\n    'serving',\n    'sesame',\n    'sessions',\n    'setback',\n    'setting',\n    'settle',\n    'settling',\n    'setup',\n    'sevenfold',\n    'seventeen',\n    'seventh',\n    'seventy',\n    'severity',\n    'shabby',\n    'shack',\n    'shaded',\n    'shadily',\n    'shadiness',\n    'shading',\n    'shadow',\n    'shady',\n    'shaft',\n    'shakable',\n    'shakily',\n    'shakiness',\n    'shaking',\n    'shaky',\n    'shale',\n    'shallot',\n    'shallow',\n    'shame',\n    'shampoo',\n    'shamrock',\n    'shank',\n    'shanty',\n    'shape',\n    'shaping',\n    'share',\n    'sharpener',\n    'sharper',\n    'sharpie',\n    'sharply',\n    'sharpness',\n    'shawl',\n    'sheath',\n    'shed',\n    'sheep',\n    'sheet',\n    'shelf',\n    'shell',\n    'shelter',\n    'shelve',\n    'shelving',\n    'sherry',\n    'shield',\n    'shifter',\n    'shifting',\n    'shiftless',\n    'shifty',\n    'shimmer',\n    'shimmy',\n    'shindig',\n    'shine',\n    'shingle',\n    'shininess',\n    'shining',\n    'shiny',\n    'ship',\n    'shirt',\n    'shivering',\n    'shock',\n    'shone',\n    'shoplift',\n    'shopper',\n    'shopping',\n    'shoptalk',\n    'shore',\n    'shortage',\n    'shortcake',\n    'shortcut',\n    'shorten',\n    'shorter',\n    'shorthand',\n    'shortlist',\n    'shortly',\n    'shortness',\n    'shorts',\n    'shortwave',\n    'shorty',\n    'shout',\n    'shove',\n    'showbiz',\n    'showcase',\n    'showdown',\n    'shower',\n    'showgirl',\n    'showing',\n    'showman',\n    'shown',\n    'showoff',\n    'showpiece',\n    'showplace',\n    'showroom',\n    'showy',\n    'shrank',\n    'shrapnel',\n    'shredder',\n    'shredding',\n    'shrewdly',\n    'shriek',\n    'shrill',\n    'shrimp',\n    'shrine',\n    'shrink',\n    'shrivel',\n    'shrouded',\n    'shrubbery',\n    'shrubs',\n    'shrug',\n    'shrunk',\n    'shucking',\n    'shudder',\n    'shuffle',\n    'shuffling',\n    'shun',\n    'shush',\n    'shut',\n    'shy',\n    'siamese',\n    'siberian',\n    'sibling',\n    'siding',\n    'sierra',\n    'siesta',\n    'sift',\n    'sighing',\n    'silenced',\n    'silencer',\n    'silent',\n    'silica',\n    'silicon',\n    'silk',\n    'silliness',\n    'silly',\n    'silo',\n    'silt',\n    'silver',\n    'similarly',\n    'simile',\n    'simmering',\n    'simple',\n    'simplify',\n    'simply',\n    'sincere',\n    'sincerity',\n    'singer',\n    'singing',\n    'single',\n    'singular',\n    'sinister',\n    'sinless',\n    'sinner',\n    'sinuous',\n    'sip',\n    'siren',\n    'sister',\n    'sitcom',\n    'sitter',\n    'sitting',\n    'situated',\n    'situation',\n    'sixfold',\n    'sixteen',\n    'sixth',\n    'sixties',\n    'sixtieth',\n    'sixtyfold',\n    'sizable',\n    'sizably',\n    'size',\n    'sizing',\n    'sizzle',\n    'sizzling',\n    'skater',\n    'skating',\n    'skedaddle',\n    'skeletal',\n    'skeleton',\n    'skeptic',\n    'sketch',\n    'skewed',\n    'skewer',\n    'skid',\n    'skied',\n    'skier',\n    'skies',\n    'skiing',\n    'skilled',\n    'skillet',\n    'skillful',\n    'skimmed',\n    'skimmer',\n    'skimming',\n    'skimpily',\n    'skincare',\n    'skinhead',\n    'skinless',\n    'skinning',\n    'skinny',\n    'skintight',\n    'skipper',\n    'skipping',\n    'skirmish',\n    'skirt',\n    'skittle',\n    'skydiver',\n    'skylight',\n    'skyline',\n    'skype',\n    'skyrocket',\n    'skyward',\n    'slab',\n    'slacked',\n    'slacker',\n    'slacking',\n    'slackness',\n    'slacks',\n    'slain',\n    'slam',\n    'slander',\n    'slang',\n    'slapping',\n    'slapstick',\n    'slashed',\n    'slashing',\n    'slate',\n    'slather',\n    'slaw',\n    'sled',\n    'sleek',\n    'sleep',\n    'sleet',\n    'sleeve',\n    'slept',\n    'sliceable',\n    'sliced',\n    'slicer',\n    'slicing',\n    'slick',\n    'slider',\n    'slideshow',\n    'sliding',\n    'slighted',\n    'slighting',\n    'slightly',\n    'slimness',\n    'slimy',\n    'slinging',\n    'slingshot',\n    'slinky',\n    'slip',\n    'slit',\n    'sliver',\n    'slobbery',\n    'slogan',\n    'sloped',\n    'sloping',\n    'sloppily',\n    'sloppy',\n    'slot',\n    'slouching',\n    'slouchy',\n    'sludge',\n    'slug',\n    'slum',\n    'slurp',\n    'slush',\n    'sly',\n    'small',\n    'smartly',\n    'smartness',\n    'smasher',\n    'smashing',\n    'smashup',\n    'smell',\n    'smelting',\n    'smile',\n    'smilingly',\n    'smirk',\n    'smite',\n    'smith',\n    'smitten',\n    'smock',\n    'smog',\n    'smoked',\n    'smokeless',\n    'smokiness',\n    'smoking',\n    'smoky',\n    'smolder',\n    'smooth',\n    'smother',\n    'smudge',\n    'smudgy',\n    'smuggler',\n    'smuggling',\n    'smugly',\n    'smugness',\n    'snack',\n    'snagged',\n    'snaking',\n    'snap',\n    'snare',\n    'snarl',\n    'snazzy',\n    'sneak',\n    'sneer',\n    'sneeze',\n    'sneezing',\n    'snide',\n    'sniff',\n    'snippet',\n    'snipping',\n    'snitch',\n    'snooper',\n    'snooze',\n    'snore',\n    'snoring',\n    'snorkel',\n    'snort',\n    'snout',\n    'snowbird',\n    'snowboard',\n    'snowbound',\n    'snowcap',\n    'snowdrift',\n    'snowdrop',\n    'snowfall',\n    'snowfield',\n    'snowflake',\n    'snowiness',\n    'snowless',\n    'snowman',\n    'snowplow',\n    'snowshoe',\n    'snowstorm',\n    'snowsuit',\n    'snowy',\n    'snub',\n    'snuff',\n    'snuggle',\n    'snugly',\n    'snugness',\n    'speak',\n    'spearfish',\n    'spearhead',\n    'spearman',\n    'spearmint',\n    'species',\n    'specimen',\n    'specked',\n    'speckled',\n    'specks',\n    'spectacle',\n    'spectator',\n    'spectrum',\n    'speculate',\n    'speech',\n    'speed',\n    'spellbind',\n    'speller',\n    'spelling',\n    'spendable',\n    'spender',\n    'spending',\n    'spent',\n    'spew',\n    'sphere',\n    'spherical',\n    'sphinx',\n    'spider',\n    'spied',\n    'spiffy',\n    'spill',\n    'spilt',\n    'spinach',\n    'spinal',\n    'spindle',\n    'spinner',\n    'spinning',\n    'spinout',\n    'spinster',\n    'spiny',\n    'spiral',\n    'spirited',\n    'spiritism',\n    'spirits',\n    'spiritual',\n    'splashed',\n    'splashing',\n    'splashy',\n    'splatter',\n    'spleen',\n    'splendid',\n    'splendor',\n    'splice',\n    'splicing',\n    'splinter',\n    'splotchy',\n    'splurge',\n    'spoilage',\n    'spoiled',\n    'spoiler',\n    'spoiling',\n    'spoils',\n    'spoken',\n    'spokesman',\n    'sponge',\n    'spongy',\n    'sponsor',\n    'spoof',\n    'spookily',\n    'spooky',\n    'spool',\n    'spoon',\n    'spore',\n    'sporting',\n    'sports',\n    'sporty',\n    'spotless',\n    'spotlight',\n    'spotted',\n    'spotter',\n    'spotting',\n    'spotty',\n    'spousal',\n    'spouse',\n    'spout',\n    'sprain',\n    'sprang',\n    'sprawl',\n    'spray',\n    'spree',\n    'sprig',\n    'spring',\n    'sprinkled',\n    'sprinkler',\n    'sprint',\n    'sprite',\n    'sprout',\n    'spruce',\n    'sprung',\n    'spry',\n    'spud',\n    'spur',\n    'sputter',\n    'spyglass',\n    'squabble',\n    'squad',\n    'squall',\n    'squander',\n    'squash',\n    'squatted',\n    'squatter',\n    'squatting',\n    'squeak',\n    'squealer',\n    'squealing',\n    'squeamish',\n    'squeegee',\n    'squeeze',\n    'squeezing',\n    'squid',\n    'squiggle',\n    'squiggly',\n    'squint',\n    'squire',\n    'squirt',\n    'squishier',\n    'squishy',\n    'stability',\n    'stabilize',\n    'stable',\n    'stack',\n    'stadium',\n    'staff',\n    'stage',\n    'staging',\n    'stagnant',\n    'stagnate',\n    'stainable',\n    'stained',\n    'staining',\n    'stainless',\n    'stalemate',\n    'staleness',\n    'stalling',\n    'stallion',\n    'stamina',\n    'stammer',\n    'stamp',\n    'stand',\n    'stank',\n    'staple',\n    'stapling',\n    'starboard',\n    'starch',\n    'stardom',\n    'stardust',\n    'starfish',\n    'stargazer',\n    'staring',\n    'stark',\n    'starless',\n    'starlet',\n    'starlight',\n    'starlit',\n    'starring',\n    'starry',\n    'starship',\n    'starter',\n    'starting',\n    'startle',\n    'startling',\n    'startup',\n    'starved',\n    'starving',\n    'stash',\n    'state',\n    'static',\n    'statistic',\n    'statue',\n    'stature',\n    'status',\n    'statute',\n    'statutory',\n    'staunch',\n    'stays',\n    'steadfast',\n    'steadier',\n    'steadily',\n    'steadying',\n    'steam',\n    'steed',\n    'steep',\n    'steerable',\n    'steering',\n    'steersman',\n    'stegosaur',\n    'stellar',\n    'stem',\n    'stench',\n    'stencil',\n    'step',\n    'stereo',\n    'sterile',\n    'sterility',\n    'sterilize',\n    'sterling',\n    'sternness',\n    'sternum',\n    'stew',\n    'stick',\n    'stiffen',\n    'stiffly',\n    'stiffness',\n    'stifle',\n    'stifling',\n    'stillness',\n    'stilt',\n    'stimulant',\n    'stimulate',\n    'stimuli',\n    'stimulus',\n    'stinger',\n    'stingily',\n    'stinging',\n    'stingray',\n    'stingy',\n    'stinking',\n    'stinky',\n    'stipend',\n    'stipulate',\n    'stir',\n    'stitch',\n    'stock',\n    'stoic',\n    'stoke',\n    'stole',\n    'stomp',\n    'stonewall',\n    'stoneware',\n    'stonework',\n    'stoning',\n    'stony',\n    'stood',\n    'stooge',\n    'stool',\n    'stoop',\n    'stoplight',\n    'stoppable',\n    'stoppage',\n    'stopped',\n    'stopper',\n    'stopping',\n    'stopwatch',\n    'storable',\n    'storage',\n    'storeroom',\n    'storewide',\n    'storm',\n    'stout',\n    'stove',\n    'stowaway',\n    'stowing',\n    'straddle',\n    'straggler',\n    'strained',\n    'strainer',\n    'straining',\n    'strangely',\n    'stranger',\n    'strangle',\n    'strategic',\n    'strategy',\n    'stratus',\n    'straw',\n    'stray',\n    'streak',\n    'stream',\n    'street',\n    'strength',\n    'strenuous',\n    'strep',\n    'stress',\n    'stretch',\n    'strewn',\n    'stricken',\n    'strict',\n    'stride',\n    'strife',\n    'strike',\n    'striking',\n    'strive',\n    'striving',\n    'strobe',\n    'strode',\n    'stroller',\n    'strongbox',\n    'strongly',\n    'strongman',\n    'struck',\n    'structure',\n    'strudel',\n    'struggle',\n    'strum',\n    'strung',\n    'strut',\n    'stubbed',\n    'stubble',\n    'stubbly',\n    'stubborn',\n    'stucco',\n    'stuck',\n    'student',\n    'studied',\n    'studio',\n    'study',\n    'stuffed',\n    'stuffing',\n    'stuffy',\n    'stumble',\n    'stumbling',\n    'stump',\n    'stung',\n    'stunned',\n    'stunner',\n    'stunning',\n    'stunt',\n    'stupor',\n    'sturdily',\n    'sturdy',\n    'styling',\n    'stylishly',\n    'stylist',\n    'stylized',\n    'stylus',\n    'suave',\n    'subarctic',\n    'subatomic',\n    'subdivide',\n    'subdued',\n    'subduing',\n    'subfloor',\n    'subgroup',\n    'subheader',\n    'subject',\n    'sublease',\n    'sublet',\n    'sublevel',\n    'sublime',\n    'submarine',\n    'submerge',\n    'submersed',\n    'submitter',\n    'subpanel',\n    'subpar',\n    'subplot',\n    'subprime',\n    'subscribe',\n    'subscript',\n    'subsector',\n    'subside',\n    'subsiding',\n    'subsidize',\n    'subsidy',\n    'subsoil',\n    'subsonic',\n    'substance',\n    'subsystem',\n    'subtext',\n    'subtitle',\n    'subtly',\n    'subtotal',\n    'subtract',\n    'subtype',\n    'suburb',\n    'subway',\n    'subwoofer',\n    'subzero',\n    'succulent',\n    'such',\n    'suction',\n    'sudden',\n    'sudoku',\n    'suds',\n    'sufferer',\n    'suffering',\n    'suffice',\n    'suffix',\n    'suffocate',\n    'suffrage',\n    'sugar',\n    'suggest',\n    'suing',\n    'suitable',\n    'suitably',\n    'suitcase',\n    'suitor',\n    'sulfate',\n    'sulfide',\n    'sulfite',\n    'sulfur',\n    'sulk',\n    'sullen',\n    'sulphate',\n    'sulphuric',\n    'sultry',\n    'superbowl',\n    'superglue',\n    'superhero',\n    'superior',\n    'superjet',\n    'superman',\n    'supermom',\n    'supernova',\n    'supervise',\n    'supper',\n    'supplier',\n    'supply',\n    'support',\n    'supremacy',\n    'supreme',\n    'surcharge',\n    'surely',\n    'sureness',\n    'surface',\n    'surfacing',\n    'surfboard',\n    'surfer',\n    'surgery',\n    'surgical',\n    'surging',\n    'surname',\n    'surpass',\n    'surplus',\n    'surprise',\n    'surreal',\n    'surrender',\n    'surrogate',\n    'surround',\n    'survey',\n    'survival',\n    'survive',\n    'surviving',\n    'survivor',\n    'sushi',\n    'suspect',\n    'suspend',\n    'suspense',\n    'sustained',\n    'sustainer',\n    'swab',\n    'swaddling',\n    'swagger',\n    'swampland',\n    'swan',\n    'swapping',\n    'swarm',\n    'sway',\n    'swear',\n    'sweat',\n    'sweep',\n    'swell',\n    'swept',\n    'swerve',\n    'swifter',\n    'swiftly',\n    'swiftness',\n    'swimmable',\n    'swimmer',\n    'swimming',\n    'swimsuit',\n    'swimwear',\n    'swinger',\n    'swinging',\n    'swipe',\n    'swirl',\n    'switch',\n    'swivel',\n    'swizzle',\n    'swooned',\n    'swoop',\n    'swoosh',\n    'swore',\n    'sworn',\n    'swung',\n    'sycamore',\n    'sympathy',\n    'symphonic',\n    'symphony',\n    'symptom',\n    'synapse',\n    'syndrome',\n    'synergy',\n    'synopses',\n    'synopsis',\n    'synthesis',\n    'synthetic',\n    'syrup',\n    'system',\n    't-shirt',\n    'tabasco',\n    'tabby',\n    'tableful',\n    'tables',\n    'tablet',\n    'tableware',\n    'tabloid',\n    'tackiness',\n    'tacking',\n    'tackle',\n    'tackling',\n    'tacky',\n    'taco',\n    'tactful',\n    'tactical',\n    'tactics',\n    'tactile',\n    'tactless',\n    'tadpole',\n    'taekwondo',\n    'tag',\n    'tainted',\n    'take',\n    'taking',\n    'talcum',\n    'talisman',\n    'tall',\n    'talon',\n    'tamale',\n    'tameness',\n    'tamer',\n    'tamper',\n    'tank',\n    'tanned',\n    'tannery',\n    'tanning',\n    'tantrum',\n    'tapeless',\n    'tapered',\n    'tapering',\n    'tapestry',\n    'tapioca',\n    'tapping',\n    'taps',\n    'tarantula',\n    'target',\n    'tarmac',\n    'tarnish',\n    'tarot',\n    'tartar',\n    'tartly',\n    'tartness',\n    'task',\n    'tassel',\n    'taste',\n    'tastiness',\n    'tasting',\n    'tasty',\n    'tattered',\n    'tattle',\n    'tattling',\n    'tattoo',\n    'taunt',\n    'tavern',\n    'thank',\n    'that',\n    'thaw',\n    'theater',\n    'theatrics',\n    'thee',\n    'theft',\n    'theme',\n    'theology',\n    'theorize',\n    'thermal',\n    'thermos',\n    'thesaurus',\n    'these',\n    'thesis',\n    'thespian',\n    'thicken',\n    'thicket',\n    'thickness',\n    'thieving',\n    'thievish',\n    'thigh',\n    'thimble',\n    'thing',\n    'think',\n    'thinly',\n    'thinner',\n    'thinness',\n    'thinning',\n    'thirstily',\n    'thirsting',\n    'thirsty',\n    'thirteen',\n    'thirty',\n    'thong',\n    'thorn',\n    'those',\n    'thousand',\n    'thrash',\n    'thread',\n    'threaten',\n    'threefold',\n    'thrift',\n    'thrill',\n    'thrive',\n    'thriving',\n    'throat',\n    'throbbing',\n    'throng',\n    'throttle',\n    'throwaway',\n    'throwback',\n    'thrower',\n    'throwing',\n    'thud',\n    'thumb',\n    'thumping',\n    'thursday',\n    'thus',\n    'thwarting',\n    'thyself',\n    'tiara',\n    'tibia',\n    'tidal',\n    'tidbit',\n    'tidiness',\n    'tidings',\n    'tidy',\n    'tiger',\n    'tighten',\n    'tightly',\n    'tightness',\n    'tightrope',\n    'tightwad',\n    'tigress',\n    'tile',\n    'tiling',\n    'till',\n    'tilt',\n    'timid',\n    'timing',\n    'timothy',\n    'tinderbox',\n    'tinfoil',\n    'tingle',\n    'tingling',\n    'tingly',\n    'tinker',\n    'tinkling',\n    'tinsel',\n    'tinsmith',\n    'tint',\n    'tinwork',\n    'tiny',\n    'tipoff',\n    'tipped',\n    'tipper',\n    'tipping',\n    'tiptoeing',\n    'tiptop',\n    'tiring',\n    'tissue',\n    'trace',\n    'tracing',\n    'track',\n    'traction',\n    'tractor',\n    'trade',\n    'trading',\n    'tradition',\n    'traffic',\n    'tragedy',\n    'trailing',\n    'trailside',\n    'train',\n    'traitor',\n    'trance',\n    'tranquil',\n    'transfer',\n    'transform',\n    'translate',\n    'transpire',\n    'transport',\n    'transpose',\n    'trapdoor',\n    'trapeze',\n    'trapezoid',\n    'trapped',\n    'trapper',\n    'trapping',\n    'traps',\n    'trash',\n    'travel',\n    'traverse',\n    'travesty',\n    'tray',\n    'treachery',\n    'treading',\n    'treadmill',\n    'treason',\n    'treat',\n    'treble',\n    'tree',\n    'trekker',\n    'tremble',\n    'trembling',\n    'tremor',\n    'trench',\n    'trend',\n    'trespass',\n    'triage',\n    'trial',\n    'triangle',\n    'tribesman',\n    'tribunal',\n    'tribune',\n    'tributary',\n    'tribute',\n    'triceps',\n    'trickery',\n    'trickily',\n    'tricking',\n    'trickle',\n    'trickster',\n    'tricky',\n    'tricolor',\n    'tricycle',\n    'trident',\n    'tried',\n    'trifle',\n    'trifocals',\n    'trillion',\n    'trilogy',\n    'trimester',\n    'trimmer',\n    'trimming',\n    'trimness',\n    'trinity',\n    'trio',\n    'tripod',\n    'tripping',\n    'triumph',\n    'trivial',\n    'trodden',\n    'trolling',\n    'trombone',\n    'trophy',\n    'tropical',\n    'tropics',\n    'trouble',\n    'troubling',\n    'trough',\n    'trousers',\n    'trout',\n    'trowel',\n    'truce',\n    'truck',\n    'truffle',\n    'trump',\n    'trunks',\n    'trustable',\n    'trustee',\n    'trustful',\n    'trusting',\n    'trustless',\n    'truth',\n    'try',\n    'tubby',\n    'tubeless',\n    'tubular',\n    'tucking',\n    'tuesday',\n    'tug',\n    'tuition',\n    'tulip',\n    'tumble',\n    'tumbling',\n    'tummy',\n    'turban',\n    'turbine',\n    'turbofan',\n    'turbojet',\n    'turbulent',\n    'turf',\n    'turkey',\n    'turmoil',\n    'turret',\n    'turtle',\n    'tusk',\n    'tutor',\n    'tutu',\n    'tux',\n    'tweak',\n    'tweed',\n    'tweet',\n    'tweezers',\n    'twelve',\n    'twentieth',\n    'twenty',\n    'twerp',\n    'twice',\n    'twiddle',\n    'twiddling',\n    'twig',\n    'twilight',\n    'twine',\n    'twins',\n    'twirl',\n    'twistable',\n    'twisted',\n    'twister',\n    'twisting',\n    'twisty',\n    'twitch',\n    'twitter',\n    'tycoon',\n    'tying',\n    'tyke',\n    'udder',\n    'ultimate',\n    'ultimatum',\n    'ultra',\n    'umbilical',\n    'umbrella',\n    'umpire',\n    'unabashed',\n    'unable',\n    'unadorned',\n    'unadvised',\n    'unafraid',\n    'unaired',\n    'unaligned',\n    'unaltered',\n    'unarmored',\n    'unashamed',\n    'unaudited',\n    'unawake',\n    'unaware',\n    'unbaked',\n    'unbalance',\n    'unbeaten',\n    'unbend',\n    'unbent',\n    'unbiased',\n    'unbitten',\n    'unblended',\n    'unblessed',\n    'unblock',\n    'unbolted',\n    'unbounded',\n    'unboxed',\n    'unbraided',\n    'unbridle',\n    'unbroken',\n    'unbuckled',\n    'unbundle',\n    'unburned',\n    'unbutton',\n    'uncanny',\n    'uncapped',\n    'uncaring',\n    'uncertain',\n    'unchain',\n    'unchanged',\n    'uncharted',\n    'uncheck',\n    'uncivil',\n    'unclad',\n    'unclaimed',\n    'unclamped',\n    'unclasp',\n    'uncle',\n    'unclip',\n    'uncloak',\n    'unclog',\n    'unclothed',\n    'uncoated',\n    'uncoiled',\n    'uncolored',\n    'uncombed',\n    'uncommon',\n    'uncooked',\n    'uncork',\n    'uncorrupt',\n    'uncounted',\n    'uncouple',\n    'uncouth',\n    'uncover',\n    'uncross',\n    'uncrown',\n    'uncrushed',\n    'uncured',\n    'uncurious',\n    'uncurled',\n    'uncut',\n    'undamaged',\n    'undated',\n    'undaunted',\n    'undead',\n    'undecided',\n    'undefined',\n    'underage',\n    'underarm',\n    'undercoat',\n    'undercook',\n    'undercut',\n    'underdog',\n    'underdone',\n    'underfed',\n    'underfeed',\n    'underfoot',\n    'undergo',\n    'undergrad',\n    'underhand',\n    'underline',\n    'underling',\n    'undermine',\n    'undermost',\n    'underpaid',\n    'underpass',\n    'underpay',\n    'underrate',\n    'undertake',\n    'undertone',\n    'undertook',\n    'undertow',\n    'underuse',\n    'underwear',\n    'underwent',\n    'underwire',\n    'undesired',\n    'undiluted',\n    'undivided',\n    'undocked',\n    'undoing',\n    'undone',\n    'undrafted',\n    'undress',\n    'undrilled',\n    'undusted',\n    'undying',\n    'unearned',\n    'unearth',\n    'unease',\n    'uneasily',\n    'uneasy',\n    'uneatable',\n    'uneaten',\n    'unedited',\n    'unelected',\n    'unending',\n    'unengaged',\n    'unenvied',\n    'unequal',\n    'unethical',\n    'uneven',\n    'unexpired',\n    'unexposed',\n    'unfailing',\n    'unfair',\n    'unfasten',\n    'unfazed',\n    'unfeeling',\n    'unfiled',\n    'unfilled',\n    'unfitted',\n    'unfitting',\n    'unfixable',\n    'unfixed',\n    'unflawed',\n    'unfocused',\n    'unfold',\n    'unfounded',\n    'unframed',\n    'unfreeze',\n    'unfrosted',\n    'unfrozen',\n    'unfunded',\n    'unglazed',\n    'ungloved',\n    'unglue',\n    'ungodly',\n    'ungraded',\n    'ungreased',\n    'unguarded',\n    'unguided',\n    'unhappily',\n    'unhappy',\n    'unharmed',\n    'unhealthy',\n    'unheard',\n    'unhearing',\n    'unheated',\n    'unhelpful',\n    'unhidden',\n    'unhinge',\n    'unhitched',\n    'unholy',\n    'unhook',\n    'unicorn',\n    'unicycle',\n    'unified',\n    'unifier',\n    'uniformed',\n    'uniformly',\n    'unify',\n    'unimpeded',\n    'uninjured',\n    'uninstall',\n    'uninsured',\n    'uninvited',\n    'union',\n    'uniquely',\n    'unisexual',\n    'unison',\n    'unissued',\n    'unit',\n    'universal',\n    'universe',\n    'unjustly',\n    'unkempt',\n    'unkind',\n    'unknotted',\n    'unknowing',\n    'unknown',\n    'unlaced',\n    'unlatch',\n    'unlawful',\n    'unleaded',\n    'unlearned',\n    'unleash',\n    'unless',\n    'unleveled',\n    'unlighted',\n    'unlikable',\n    'unlimited',\n    'unlined',\n    'unlinked',\n    'unlisted',\n    'unlit',\n    'unlivable',\n    'unloaded',\n    'unloader',\n    'unlocked',\n    'unlocking',\n    'unlovable',\n    'unloved',\n    'unlovely',\n    'unloving',\n    'unluckily',\n    'unlucky',\n    'unmade',\n    'unmanaged',\n    'unmanned',\n    'unmapped',\n    'unmarked',\n    'unmasked',\n    'unmasking',\n    'unmatched',\n    'unmindful',\n    'unmixable',\n    'unmixed',\n    'unmolded',\n    'unmoral',\n    'unmovable',\n    'unmoved',\n    'unmoving',\n    'unnamable',\n    'unnamed',\n    'unnatural',\n    'unneeded',\n    'unnerve',\n    'unnerving',\n    'unnoticed',\n    'unopened',\n    'unopposed',\n    'unpack',\n    'unpadded',\n    'unpaid',\n    'unpainted',\n    'unpaired',\n    'unpaved',\n    'unpeeled',\n    'unpicked',\n    'unpiloted',\n    'unpinned',\n    'unplanned',\n    'unplanted',\n    'unpleased',\n    'unpledged',\n    'unplowed',\n    'unplug',\n    'unpopular',\n    'unproven',\n    'unquote',\n    'unranked',\n    'unrated',\n    'unraveled',\n    'unreached',\n    'unread',\n    'unreal',\n    'unreeling',\n    'unrefined',\n    'unrelated',\n    'unrented',\n    'unrest',\n    'unretired',\n    'unrevised',\n    'unrigged',\n    'unripe',\n    'unrivaled',\n    'unroasted',\n    'unrobed',\n    'unroll',\n    'unruffled',\n    'unruly',\n    'unrushed',\n    'unsaddle',\n    'unsafe',\n    'unsaid',\n    'unsalted',\n    'unsaved',\n    'unsavory',\n    'unscathed',\n    'unscented',\n    'unscrew',\n    'unsealed',\n    'unseated',\n    'unsecured',\n    'unseeing',\n    'unseemly',\n    'unseen',\n    'unselect',\n    'unselfish',\n    'unsent',\n    'unsettled',\n    'unshackle',\n    'unshaken',\n    'unshaved',\n    'unshaven',\n    'unsheathe',\n    'unshipped',\n    'unsightly',\n    'unsigned',\n    'unskilled',\n    'unsliced',\n    'unsmooth',\n    'unsnap',\n    'unsocial',\n    'unsoiled',\n    'unsold',\n    'unsolved',\n    'unsorted',\n    'unspoiled',\n    'unspoken',\n    'unstable',\n    'unstaffed',\n    'unstamped',\n    'unsteady',\n    'unsterile',\n    'unstirred',\n    'unstitch',\n    'unstopped',\n    'unstuck',\n    'unstuffed',\n    'unstylish',\n    'unsubtle',\n    'unsubtly',\n    'unsuited',\n    'unsure',\n    'unsworn',\n    'untagged',\n    'untainted',\n    'untaken',\n    'untamed',\n    'untangled',\n    'untapped',\n    'untaxed',\n    'unthawed',\n    'unthread',\n    'untidy',\n    'untie',\n    'until',\n    'untimed',\n    'untimely',\n    'untitled',\n    'untoasted',\n    'untold',\n    'untouched',\n    'untracked',\n    'untrained',\n    'untreated',\n    'untried',\n    'untrimmed',\n    'untrue',\n    'untruth',\n    'unturned',\n    'untwist',\n    'untying',\n    'unusable',\n    'unused',\n    'unusual',\n    'unvalued',\n    'unvaried',\n    'unvarying',\n    'unveiled',\n    'unveiling',\n    'unvented',\n    'unviable',\n    'unvisited',\n    'unvocal',\n    'unwanted',\n    'unwarlike',\n    'unwary',\n    'unwashed',\n    'unwatched',\n    'unweave',\n    'unwed',\n    'unwelcome',\n    'unwell',\n    'unwieldy',\n    'unwilling',\n    'unwind',\n    'unwired',\n    'unwitting',\n    'unwomanly',\n    'unworldly',\n    'unworn',\n    'unworried',\n    'unworthy',\n    'unwound',\n    'unwoven',\n    'unwrapped',\n    'unwritten',\n    'unzip',\n    'upbeat',\n    'upchuck',\n    'upcoming',\n    'upcountry',\n    'update',\n    'upfront',\n    'upgrade',\n    'upheaval',\n    'upheld',\n    'uphill',\n    'uphold',\n    'uplifted',\n    'uplifting',\n    'upload',\n    'upon',\n    'upper',\n    'upright',\n    'uprising',\n    'upriver',\n    'uproar',\n    'uproot',\n    'upscale',\n    'upside',\n    'upstage',\n    'upstairs',\n    'upstart',\n    'upstate',\n    'upstream',\n    'upstroke',\n    'upswing',\n    'uptake',\n    'uptight',\n    'uptown',\n    'upturned',\n    'upward',\n    'upwind',\n    'uranium',\n    'urban',\n    'urchin',\n    'urethane',\n    'urgency',\n    'urgent',\n    'urging',\n    'urologist',\n    'urology',\n    'usable',\n    'usage',\n    'useable',\n    'used',\n    'uselessly',\n    'user',\n    'usher',\n    'usual',\n    'utensil',\n    'utility',\n    'utilize',\n    'utmost',\n    'utopia',\n    'utter',\n    'vacancy',\n    'vacant',\n    'vacate',\n    'vacation',\n    'vagabond',\n    'vagrancy',\n    'vagrantly',\n    'vaguely',\n    'vagueness',\n    'valiant',\n    'valid',\n    'valium',\n    'valley',\n    'valuables',\n    'value',\n    'vanilla',\n    'vanish',\n    'vanity',\n    'vanquish',\n    'vantage',\n    'vaporizer',\n    'variable',\n    'variably',\n    'varied',\n    'variety',\n    'various',\n    'varmint',\n    'varnish',\n    'varsity',\n    'varying',\n    'vascular',\n    'vaseline',\n    'vastly',\n    'vastness',\n    'veal',\n    'vegan',\n    'veggie',\n    'vehicular',\n    'velcro',\n    'velocity',\n    'velvet',\n    'vendetta',\n    'vending',\n    'vendor',\n    'veneering',\n    'vengeful',\n    'venomous',\n    'ventricle',\n    'venture',\n    'venue',\n    'venus',\n    'verbalize',\n    'verbally',\n    'verbose',\n    'verdict',\n    'verify',\n    'verse',\n    'version',\n    'versus',\n    'vertebrae',\n    'vertical',\n    'vertigo',\n    'very',\n    'vessel',\n    'vest',\n    'veteran',\n    'veto',\n    'vexingly',\n    'viability',\n    'viable',\n    'vibes',\n    'vice',\n    'vicinity',\n    'victory',\n    'video',\n    'viewable',\n    'viewer',\n    'viewing',\n    'viewless',\n    'viewpoint',\n    'vigorous',\n    'village',\n    'villain',\n    'vindicate',\n    'vineyard',\n    'vintage',\n    'violate',\n    'violation',\n    'violator',\n    'violet',\n    'violin',\n    'viper',\n    'viral',\n    'virtual',\n    'virtuous',\n    'virus',\n    'visa',\n    'viscosity',\n    'viscous',\n    'viselike',\n    'visible',\n    'visibly',\n    'vision',\n    'visiting',\n    'visitor',\n    'visor',\n    'vista',\n    'vitality',\n    'vitalize',\n    'vitally',\n    'vitamins',\n    'vivacious',\n    'vividly',\n    'vividness',\n    'vixen',\n    'vocalist',\n    'vocalize',\n    'vocally',\n    'vocation',\n    'voice',\n    'voicing',\n    'void',\n    'volatile',\n    'volley',\n    'voltage',\n    'volumes',\n    'voter',\n    'voting',\n    'voucher',\n    'vowed',\n    'vowel',\n    'voyage',\n    'wackiness',\n    'wad',\n    'wafer',\n    'waffle',\n    'waged',\n    'wager',\n    'wages',\n    'waggle',\n    'wagon',\n    'wake',\n    'waking',\n    'walk',\n    'walmart',\n    'walnut',\n    'walrus',\n    'waltz',\n    'wand',\n    'wannabe',\n    'wanted',\n    'wanting',\n    'wasabi',\n    'washable',\n    'washbasin',\n    'washboard',\n    'washbowl',\n    'washcloth',\n    'washday',\n    'washed',\n    'washer',\n    'washhouse',\n    'washing',\n    'washout',\n    'washroom',\n    'washstand',\n    'washtub',\n    'wasp',\n    'wasting',\n    'watch',\n    'water',\n    'waviness',\n    'waving',\n    'wavy',\n    'whacking',\n    'whacky',\n    'wham',\n    'wharf',\n    'wheat',\n    'whenever',\n    'whiff',\n    'whimsical',\n    'whinny',\n    'whiny',\n    'whisking',\n    'whoever',\n    'whole',\n    'whomever',\n    'whoopee',\n    'whooping',\n    'whoops',\n    'why',\n    'wick',\n    'widely',\n    'widen',\n    'widget',\n    'widow',\n    'width',\n    'wieldable',\n    'wielder',\n    'wife',\n    'wifi',\n    'wikipedia',\n    'wildcard',\n    'wildcat',\n    'wilder',\n    'wildfire',\n    'wildfowl',\n    'wildland',\n    'wildlife',\n    'wildly',\n    'wildness',\n    'willed',\n    'willfully',\n    'willing',\n    'willow',\n    'willpower',\n    'wilt',\n    'wimp',\n    'wince',\n    'wincing',\n    'wind',\n    'wing',\n    'winking',\n    'winner',\n    'winnings',\n    'winter',\n    'wipe',\n    'wired',\n    'wireless',\n    'wiring',\n    'wiry',\n    'wisdom',\n    'wise',\n    'wish',\n    'wisplike',\n    'wispy',\n    'wistful',\n    'wizard',\n    'wobble',\n    'wobbling',\n    'wobbly',\n    'wok',\n    'wolf',\n    'wolverine',\n    'womanhood',\n    'womankind',\n    'womanless',\n    'womanlike',\n    'womanly',\n    'womb',\n    'woof',\n    'wooing',\n    'wool',\n    'woozy',\n    'word',\n    'work',\n    'worried',\n    'worrier',\n    'worrisome',\n    'worry',\n    'worsening',\n    'worshiper',\n    'worst',\n    'wound',\n    'woven',\n    'wow',\n    'wrangle',\n    'wrath',\n    'wreath',\n    'wreckage',\n    'wrecker',\n    'wrecking',\n    'wrench',\n    'wriggle',\n    'wriggly',\n    'wrinkle',\n    'wrinkly',\n    'wrist',\n    'writing',\n    'written',\n    'wrongdoer',\n    'wronged',\n    'wrongful',\n    'wrongly',\n    'wrongness',\n    'wrought',\n    'xbox',\n    'xerox',\n    'yahoo',\n    'yam',\n    'yanking',\n    'yapping',\n    'yard',\n    'yarn',\n    'yeah',\n    'yearbook',\n    'yearling',\n    'yearly',\n    'yearning',\n    'yeast',\n    'yelling',\n    'yelp',\n    'yen',\n    'yesterday',\n    'yiddish',\n    'yield',\n    'yin',\n    'yippee',\n    'yo-yo',\n    'yodel',\n    'yoga',\n    'yogurt',\n    'yonder',\n    'yoyo',\n    'yummy',\n    'zap',\n    'zealous',\n    'zebra',\n    'zen',\n    'zeppelin',\n    'zero',\n    'zestfully',\n    'zesty',\n    'zigzagged',\n    'zipfile',\n    'zipping',\n    'zippy',\n    'zips',\n    'zit',\n    'zodiac',\n    'zombie',\n    'zone',\n    'zoning',\n    'zookeeper',\n    'zoologist',\n    'zoology',\n    'zoom',\n];\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.newSecureWords = void 0;\nconst getSecureRandom_1 = require(\"../primitives/getSecureRandom\");\nconst wordlist_1 = require(\"./wordlist\");\nasync function newSecureWords(size = 6) {\n    let words = [];\n    for (let i = 0; i < size; i++) {\n        words.push(wordlist_1.wordlist[await (0, getSecureRandom_1.getSecureRandomNumber)(0, wordlist_1.wordlist.length)]);\n    }\n    return words;\n}\nexports.newSecureWords = newSecureWords;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.newSecurePassphrase = void 0;\nconst __1 = require(\"..\");\nasync function newSecurePassphrase(size = 6) {\n    return (await (0, __1.newSecureWords)(size)).join('-');\n}\nexports.newSecurePassphrase = newSecurePassphrase;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bitsToBytes = exports.bytesToBits = exports.lpad = void 0;\nfunction lpad(str, padString, length) {\n    while (str.length < length) {\n        str = padString + str;\n    }\n    return str;\n}\nexports.lpad = lpad;\nfunction bytesToBits(bytes) {\n    let res = '';\n    for (let i = 0; i < bytes.length; i++) {\n        let x = bytes.at(i);\n        res += lpad(x.toString(2), '0', 8);\n    }\n    return res;\n}\nexports.bytesToBits = bytesToBits;\nfunction bitsToBytes(src) {\n    if (src.length % 8 !== 0) {\n        throw Error('Uneven bits');\n    }\n    let res = [];\n    while (src.length > 0) {\n        res.push(parseInt(src.slice(0, 8), 2));\n        src = src.slice(8);\n    }\n    return Buffer.from(res);\n}\nexports.bitsToBytes = bitsToBytes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlist = void 0;\nconst EN = ['abandon', 'ability', 'able', 'about', 'above', 'absent', 'absorb', 'abstract', 'absurd', 'abuse', 'access', 'accident', 'account', 'accuse', 'achieve', 'acid', 'acoustic', 'acquire', 'across', 'act', 'action', 'actor', 'actress', 'actual', 'adapt', 'add', 'addict', 'address', 'adjust', 'admit', 'adult', 'advance', 'advice', 'aerobic', 'affair', 'afford', 'afraid', 'again', 'age', 'agent', 'agree', 'ahead', 'aim', 'air', 'airport', 'aisle', 'alarm', 'album', 'alcohol', 'alert', 'alien', 'all', 'alley', 'allow', 'almost', 'alone', 'alpha', 'already', 'also', 'alter', 'always', 'amateur', 'amazing', 'among', 'amount', 'amused', 'analyst', 'anchor', 'ancient', 'anger', 'angle', 'angry', 'animal', 'ankle', 'announce', 'annual', 'another', 'answer', 'antenna', 'antique', 'anxiety', 'any', 'apart', 'apology', 'appear', 'apple', 'approve', 'april', 'arch', 'arctic', 'area', 'arena', 'argue', 'arm', 'armed', 'armor', 'army', 'around', 'arrange', 'arrest', 'arrive', 'arrow', 'art', 'artefact', 'artist', 'artwork', 'ask', 'aspect', 'assault', 'asset', 'assist', 'assume', 'asthma', 'athlete', 'atom', 'attack', 'attend', 'attitude', 'attract', 'auction', 'audit', 'august', 'aunt', 'author', 'auto', 'autumn', 'average', 'avocado', 'avoid', 'awake', 'aware', 'away', 'awesome', 'awful', 'awkward', 'axis',\n    'baby', 'bachelor', 'bacon', 'badge', 'bag', 'balance', 'balcony', 'ball', 'bamboo', 'banana', 'banner', 'bar', 'barely', 'bargain', 'barrel', 'base', 'basic', 'basket', 'battle', 'beach', 'bean', 'beauty', 'because', 'become', 'beef', 'before', 'begin', 'behave', 'behind', 'believe', 'below', 'belt', 'bench', 'benefit', 'best', 'betray', 'better', 'between', 'beyond', 'bicycle', 'bid', 'bike', 'bind', 'biology', 'bird', 'birth', 'bitter', 'black', 'blade', 'blame', 'blanket', 'blast', 'bleak', 'bless', 'blind', 'blood', 'blossom', 'blouse', 'blue', 'blur', 'blush', 'board', 'boat', 'body', 'boil', 'bomb', 'bone', 'bonus', 'book', 'boost', 'border', 'boring', 'borrow', 'boss', 'bottom', 'bounce', 'box', 'boy', 'bracket', 'brain', 'brand', 'brass', 'brave', 'bread', 'breeze', 'brick', 'bridge', 'brief', 'bright', 'bring', 'brisk', 'broccoli', 'broken', 'bronze', 'broom', 'brother', 'brown', 'brush', 'bubble', 'buddy', 'budget', 'buffalo', 'build', 'bulb', 'bulk', 'bullet', 'bundle', 'bunker', 'burden', 'burger', 'burst', 'bus', 'business', 'busy', 'butter', 'buyer', 'buzz',\n    'cabbage', 'cabin', 'cable', 'cactus', 'cage', 'cake', 'call', 'calm', 'camera', 'camp', 'can', 'canal', 'cancel', 'candy', 'cannon', 'canoe', 'canvas', 'canyon', 'capable', 'capital', 'captain', 'car', 'carbon', 'card', 'cargo', 'carpet', 'carry', 'cart', 'case', 'cash', 'casino', 'castle', 'casual', 'cat', 'catalog', 'catch', 'category', 'cattle', 'caught', 'cause', 'caution', 'cave', 'ceiling', 'celery', 'cement', 'census', 'century', 'cereal', 'certain', 'chair', 'chalk', 'champion', 'change', 'chaos', 'chapter', 'charge', 'chase', 'chat', 'cheap', 'check', 'cheese', 'chef', 'cherry', 'chest', 'chicken', 'chief', 'child', 'chimney', 'choice', 'choose', 'chronic', 'chuckle', 'chunk', 'churn', 'cigar', 'cinnamon', 'circle', 'citizen', 'city', 'civil', 'claim', 'clap', 'clarify', 'claw', 'clay', 'clean', 'clerk', 'clever', 'click', 'client', 'cliff', 'climb', 'clinic', 'clip', 'clock', 'clog', 'close', 'cloth', 'cloud', 'clown', 'club', 'clump', 'cluster', 'clutch', 'coach', 'coast', 'coconut', 'code', 'coffee', 'coil', 'coin', 'collect', 'color', 'column', 'combine', 'come', 'comfort', 'comic', 'common', 'company', 'concert', 'conduct', 'confirm', 'congress', 'connect', 'consider', 'control', 'convince', 'cook', 'cool', 'copper', 'copy', 'coral', 'core', 'corn', 'correct', 'cost', 'cotton', 'couch', 'country', 'couple', 'course', 'cousin', 'cover', 'coyote', 'crack', 'cradle', 'craft', 'cram', 'crane', 'crash', 'crater', 'crawl', 'crazy', 'cream', 'credit', 'creek', 'crew', 'cricket', 'crime', 'crisp', 'critic', 'crop', 'cross', 'crouch', 'crowd', 'crucial', 'cruel', 'cruise', 'crumble', 'crunch', 'crush', 'cry', 'crystal', 'cube', 'culture', 'cup', 'cupboard', 'curious', 'current', 'curtain', 'curve', 'cushion', 'custom', 'cute', 'cycle',\n    'dad', 'damage', 'damp', 'dance', 'danger', 'daring', 'dash', 'daughter', 'dawn', 'day', 'deal', 'debate', 'debris', 'decade', 'december', 'decide', 'decline', 'decorate', 'decrease', 'deer', 'defense', 'define', 'defy', 'degree', 'delay', 'deliver', 'demand', 'demise', 'denial', 'dentist', 'deny', 'depart', 'depend', 'deposit', 'depth', 'deputy', 'derive', 'describe', 'desert', 'design', 'desk', 'despair', 'destroy', 'detail', 'detect', 'develop', 'device', 'devote', 'diagram', 'dial', 'diamond', 'diary', 'dice', 'diesel', 'diet', 'differ', 'digital', 'dignity', 'dilemma', 'dinner', 'dinosaur', 'direct', 'dirt', 'disagree', 'discover', 'disease', 'dish', 'dismiss', 'disorder', 'display', 'distance', 'divert', 'divide', 'divorce', 'dizzy', 'doctor', 'document', 'dog', 'doll', 'dolphin', 'domain', 'donate', 'donkey', 'donor', 'door', 'dose', 'double', 'dove', 'draft', 'dragon', 'drama', 'drastic', 'draw', 'dream', 'dress', 'drift', 'drill', 'drink', 'drip', 'drive', 'drop', 'drum', 'dry', 'duck', 'dumb', 'dune', 'during', 'dust', 'dutch', 'duty', 'dwarf', 'dynamic',\n    'eager', 'eagle', 'early', 'earn', 'earth', 'easily', 'east', 'easy', 'echo', 'ecology', 'economy', 'edge', 'edit', 'educate', 'effort', 'egg', 'eight', 'either', 'elbow', 'elder', 'electric', 'elegant', 'element', 'elephant', 'elevator', 'elite', 'else', 'embark', 'embody', 'embrace', 'emerge', 'emotion', 'employ', 'empower', 'empty', 'enable', 'enact', 'end', 'endless', 'endorse', 'enemy', 'energy', 'enforce', 'engage', 'engine', 'enhance', 'enjoy', 'enlist', 'enough', 'enrich', 'enroll', 'ensure', 'enter', 'entire', 'entry', 'envelope', 'episode', 'equal', 'equip', 'era', 'erase', 'erode', 'erosion', 'error', 'erupt', 'escape', 'essay', 'essence', 'estate', 'eternal', 'ethics', 'evidence', 'evil', 'evoke', 'evolve', 'exact', 'example', 'excess', 'exchange', 'excite', 'exclude', 'excuse', 'execute', 'exercise', 'exhaust', 'exhibit', 'exile', 'exist', 'exit', 'exotic', 'expand', 'expect', 'expire', 'explain', 'expose', 'express', 'extend', 'extra', 'eye', 'eyebrow',\n    'fabric', 'face', 'faculty', 'fade', 'faint', 'faith', 'fall', 'false', 'fame', 'family', 'famous', 'fan', 'fancy', 'fantasy', 'farm', 'fashion', 'fat', 'fatal', 'father', 'fatigue', 'fault', 'favorite', 'feature', 'february', 'federal', 'fee', 'feed', 'feel', 'female', 'fence', 'festival', 'fetch', 'fever', 'few', 'fiber', 'fiction', 'field', 'figure', 'file', 'film', 'filter', 'final', 'find', 'fine', 'finger', 'finish', 'fire', 'firm', 'first', 'fiscal', 'fish', 'fit', 'fitness', 'fix', 'flag', 'flame', 'flash', 'flat', 'flavor', 'flee', 'flight', 'flip', 'float', 'flock', 'floor', 'flower', 'fluid', 'flush', 'fly', 'foam', 'focus', 'fog', 'foil', 'fold', 'follow', 'food', 'foot', 'force', 'forest', 'forget', 'fork', 'fortune', 'forum', 'forward', 'fossil', 'foster', 'found', 'fox', 'fragile', 'frame', 'frequent', 'fresh', 'friend', 'fringe', 'frog', 'front', 'frost', 'frown', 'frozen', 'fruit', 'fuel', 'fun', 'funny', 'furnace', 'fury', 'future',\n    'gadget', 'gain', 'galaxy', 'gallery', 'game', 'gap', 'garage', 'garbage', 'garden', 'garlic', 'garment', 'gas', 'gasp', 'gate', 'gather', 'gauge', 'gaze', 'general', 'genius', 'genre', 'gentle', 'genuine', 'gesture', 'ghost', 'giant', 'gift', 'giggle', 'ginger', 'giraffe', 'girl', 'give', 'glad', 'glance', 'glare', 'glass', 'glide', 'glimpse', 'globe', 'gloom', 'glory', 'glove', 'glow', 'glue', 'goat', 'goddess', 'gold', 'good', 'goose', 'gorilla', 'gospel', 'gossip', 'govern', 'gown', 'grab', 'grace', 'grain', 'grant', 'grape', 'grass', 'gravity', 'great', 'green', 'grid', 'grief', 'grit', 'grocery', 'group', 'grow', 'grunt', 'guard', 'guess', 'guide', 'guilt', 'guitar', 'gun', 'gym',\n    'habit', 'hair', 'half', 'hammer', 'hamster', 'hand', 'happy', 'harbor', 'hard', 'harsh', 'harvest', 'hat', 'have', 'hawk', 'hazard', 'head', 'health', 'heart', 'heavy', 'hedgehog', 'height', 'hello', 'helmet', 'help', 'hen', 'hero', 'hidden', 'high', 'hill', 'hint', 'hip', 'hire', 'history', 'hobby', 'hockey', 'hold', 'hole', 'holiday', 'hollow', 'home', 'honey', 'hood', 'hope', 'horn', 'horror', 'horse', 'hospital', 'host', 'hotel', 'hour', 'hover', 'hub', 'huge', 'human', 'humble', 'humor', 'hundred', 'hungry', 'hunt', 'hurdle', 'hurry', 'hurt', 'husband', 'hybrid',\n    'ice', 'icon', 'idea', 'identify', 'idle', 'ignore', 'ill', 'illegal', 'illness', 'image', 'imitate', 'immense', 'immune', 'impact', 'impose', 'improve', 'impulse', 'inch', 'include', 'income', 'increase', 'index', 'indicate', 'indoor', 'industry', 'infant', 'inflict', 'inform', 'inhale', 'inherit', 'initial', 'inject', 'injury', 'inmate', 'inner', 'innocent', 'input', 'inquiry', 'insane', 'insect', 'inside', 'inspire', 'install', 'intact', 'interest', 'into', 'invest', 'invite', 'involve', 'iron', 'island', 'isolate', 'issue', 'item', 'ivory',\n    'jacket', 'jaguar', 'jar', 'jazz', 'jealous', 'jeans', 'jelly', 'jewel', 'job', 'join', 'joke', 'journey', 'joy', 'judge', 'juice', 'jump', 'jungle', 'junior', 'junk', 'just',\n    'kangaroo', 'keen', 'keep', 'ketchup', 'key', 'kick', 'kid', 'kidney', 'kind', 'kingdom', 'kiss', 'kit', 'kitchen', 'kite', 'kitten', 'kiwi', 'knee', 'knife', 'knock', 'know',\n    'lab', 'label', 'labor', 'ladder', 'lady', 'lake', 'lamp', 'language', 'laptop', 'large', 'later', 'latin', 'laugh', 'laundry', 'lava', 'law', 'lawn', 'lawsuit', 'layer', 'lazy', 'leader', 'leaf', 'learn', 'leave', 'lecture', 'left', 'leg', 'legal', 'legend', 'leisure', 'lemon', 'lend', 'length', 'lens', 'leopard', 'lesson', 'letter', 'level', 'liar', 'liberty', 'library', 'license', 'life', 'lift', 'light', 'like', 'limb', 'limit', 'link', 'lion', 'liquid', 'list', 'little', 'live', 'lizard', 'load', 'loan', 'lobster', 'local', 'lock', 'logic', 'lonely', 'long', 'loop', 'lottery', 'loud', 'lounge', 'love', 'loyal', 'lucky', 'luggage', 'lumber', 'lunar', 'lunch', 'luxury', 'lyrics',\n    'machine', 'mad', 'magic', 'magnet', 'maid', 'mail', 'main', 'major', 'make', 'mammal', 'man', 'manage', 'mandate', 'mango', 'mansion', 'manual', 'maple', 'marble', 'march', 'margin', 'marine', 'market', 'marriage', 'mask', 'mass', 'master', 'match', 'material', 'math', 'matrix', 'matter', 'maximum', 'maze', 'meadow', 'mean', 'measure', 'meat', 'mechanic', 'medal', 'media', 'melody', 'melt', 'member', 'memory', 'mention', 'menu', 'mercy', 'merge', 'merit', 'merry', 'mesh', 'message', 'metal', 'method', 'middle', 'midnight', 'milk', 'million', 'mimic', 'mind', 'minimum', 'minor', 'minute', 'miracle', 'mirror', 'misery', 'miss', 'mistake', 'mix', 'mixed', 'mixture', 'mobile', 'model', 'modify', 'mom', 'moment', 'monitor', 'monkey', 'monster', 'month', 'moon', 'moral', 'more', 'morning', 'mosquito', 'mother', 'motion', 'motor', 'mountain', 'mouse', 'move', 'movie', 'much', 'muffin', 'mule', 'multiply', 'muscle', 'museum', 'mushroom', 'music', 'must', 'mutual', 'myself', 'mystery', 'myth',\n    'naive', 'name', 'napkin', 'narrow', 'nasty', 'nation', 'nature', 'near', 'neck', 'need', 'negative', 'neglect', 'neither', 'nephew', 'nerve', 'nest', 'net', 'network', 'neutral', 'never', 'news', 'next', 'nice', 'night', 'noble', 'noise', 'nominee', 'noodle', 'normal', 'north', 'nose', 'notable', 'note', 'nothing', 'notice', 'novel', 'now', 'nuclear', 'number', 'nurse', 'nut',\n    'oak', 'obey', 'object', 'oblige', 'obscure', 'observe', 'obtain', 'obvious', 'occur', 'ocean', 'october', 'odor', 'off', 'offer', 'office', 'often', 'oil', 'okay', 'old', 'olive', 'olympic', 'omit', 'once', 'one', 'onion', 'online', 'only', 'open', 'opera', 'opinion', 'oppose', 'option', 'orange', 'orbit', 'orchard', 'order', 'ordinary', 'organ', 'orient', 'original', 'orphan', 'ostrich', 'other', 'outdoor', 'outer', 'output', 'outside', 'oval', 'oven', 'over', 'own', 'owner', 'oxygen', 'oyster', 'ozone',\n    'pact', 'paddle', 'page', 'pair', 'palace', 'palm', 'panda', 'panel', 'panic', 'panther', 'paper', 'parade', 'parent', 'park', 'parrot', 'party', 'pass', 'patch', 'path', 'patient', 'patrol', 'pattern', 'pause', 'pave', 'payment', 'peace', 'peanut', 'pear', 'peasant', 'pelican', 'pen', 'penalty', 'pencil', 'people', 'pepper', 'perfect', 'permit', 'person', 'pet', 'phone', 'photo', 'phrase', 'physical', 'piano', 'picnic', 'picture', 'piece', 'pig', 'pigeon', 'pill', 'pilot', 'pink', 'pioneer', 'pipe', 'pistol', 'pitch', 'pizza', 'place', 'planet', 'plastic', 'plate', 'play', 'please', 'pledge', 'pluck', 'plug', 'plunge', 'poem', 'poet', 'point', 'polar', 'pole', 'police', 'pond', 'pony', 'pool', 'popular', 'portion', 'position', 'possible', 'post', 'potato', 'pottery', 'poverty', 'powder', 'power', 'practice', 'praise', 'predict', 'prefer', 'prepare', 'present', 'pretty', 'prevent', 'price', 'pride', 'primary', 'print', 'priority', 'prison', 'private', 'prize', 'problem', 'process', 'produce', 'profit', 'program', 'project', 'promote', 'proof', 'property', 'prosper', 'protect', 'proud', 'provide', 'public', 'pudding', 'pull', 'pulp', 'pulse', 'pumpkin', 'punch', 'pupil', 'puppy', 'purchase', 'purity', 'purpose', 'purse', 'push', 'put', 'puzzle', 'pyramid',\n    'quality', 'quantum', 'quarter', 'question', 'quick', 'quit', 'quiz', 'quote',\n    'rabbit', 'raccoon', 'race', 'rack', 'radar', 'radio', 'rail', 'rain', 'raise', 'rally', 'ramp', 'ranch', 'random', 'range', 'rapid', 'rare', 'rate', 'rather', 'raven', 'raw', 'razor', 'ready', 'real', 'reason', 'rebel', 'rebuild', 'recall', 'receive', 'recipe', 'record', 'recycle', 'reduce', 'reflect', 'reform', 'refuse', 'region', 'regret', 'regular', 'reject', 'relax', 'release', 'relief', 'rely', 'remain', 'remember', 'remind', 'remove', 'render', 'renew', 'rent', 'reopen', 'repair', 'repeat', 'replace', 'report', 'require', 'rescue', 'resemble', 'resist', 'resource', 'response', 'result', 'retire', 'retreat', 'return', 'reunion', 'reveal', 'review', 'reward', 'rhythm', 'rib', 'ribbon', 'rice', 'rich', 'ride', 'ridge', 'rifle', 'right', 'rigid', 'ring', 'riot', 'ripple', 'risk', 'ritual', 'rival', 'river', 'road', 'roast', 'robot', 'robust', 'rocket', 'romance', 'roof', 'rookie', 'room', 'rose', 'rotate', 'rough', 'round', 'route', 'royal', 'rubber', 'rude', 'rug', 'rule', 'run', 'runway', 'rural',\n    'sad', 'saddle', 'sadness', 'safe', 'sail', 'salad', 'salmon', 'salon', 'salt', 'salute', 'same', 'sample', 'sand', 'satisfy', 'satoshi', 'sauce', 'sausage', 'save', 'say', 'scale', 'scan', 'scare', 'scatter', 'scene', 'scheme', 'school', 'science', 'scissors', 'scorpion', 'scout', 'scrap', 'screen', 'script', 'scrub', 'sea', 'search', 'season', 'seat', 'second', 'secret', 'section', 'security', 'seed', 'seek', 'segment', 'select', 'sell', 'seminar', 'senior', 'sense', 'sentence', 'series', 'service', 'session', 'settle', 'setup', 'seven', 'shadow', 'shaft', 'shallow', 'share', 'shed', 'shell', 'sheriff', 'shield', 'shift', 'shine', 'ship', 'shiver', 'shock', 'shoe', 'shoot', 'shop', 'short', 'shoulder', 'shove', 'shrimp', 'shrug', 'shuffle', 'shy', 'sibling', 'sick', 'side', 'siege', 'sight', 'sign', 'silent', 'silk', 'silly', 'silver', 'similar', 'simple', 'since', 'sing', 'siren', 'sister', 'situate', 'six', 'size', 'skate', 'sketch', 'ski', 'skill', 'skin', 'skirt', 'skull', 'slab', 'slam', 'sleep', 'slender', 'slice', 'slide', 'slight', 'slim', 'slogan', 'slot', 'slow', 'slush', 'small', 'smart', 'smile', 'smoke', 'smooth', 'snack', 'snake', 'snap', 'sniff', 'snow', 'soap', 'soccer', 'social', 'sock', 'soda', 'soft', 'solar', 'soldier', 'solid', 'solution', 'solve', 'someone', 'song', 'soon', 'sorry', 'sort', 'soul', 'sound', 'soup', 'source', 'south', 'space', 'spare', 'spatial', 'spawn', 'speak', 'special', 'speed', 'spell', 'spend', 'sphere', 'spice', 'spider', 'spike', 'spin', 'spirit', 'split', 'spoil', 'sponsor', 'spoon', 'sport', 'spot', 'spray', 'spread', 'spring', 'spy', 'square', 'squeeze', 'squirrel', 'stable', 'stadium', 'staff', 'stage', 'stairs', 'stamp', 'stand', 'start', 'state', 'stay', 'steak', 'steel', 'stem', 'step', 'stereo', 'stick', 'still', 'sting', 'stock', 'stomach', 'stone', 'stool', 'story', 'stove', 'strategy', 'street', 'strike', 'strong', 'struggle', 'student', 'stuff', 'stumble', 'style', 'subject', 'submit', 'subway', 'success', 'such', 'sudden', 'suffer', 'sugar', 'suggest', 'suit', 'summer', 'sun', 'sunny', 'sunset', 'super', 'supply', 'supreme', 'sure', 'surface', 'surge', 'surprise', 'surround', 'survey', 'suspect', 'sustain', 'swallow', 'swamp', 'swap', 'swarm', 'swear', 'sweet', 'swift', 'swim', 'swing', 'switch', 'sword', 'symbol', 'symptom', 'syrup', 'system',\n    'table', 'tackle', 'tag', 'tail', 'talent', 'talk', 'tank', 'tape', 'target', 'task', 'taste', 'tattoo', 'taxi', 'teach', 'team', 'tell', 'ten', 'tenant', 'tennis', 'tent', 'term', 'test', 'text', 'thank', 'that', 'theme', 'then', 'theory', 'there', 'they', 'thing', 'this', 'thought', 'three', 'thrive', 'throw', 'thumb', 'thunder', 'ticket', 'tide', 'tiger', 'tilt', 'timber', 'time', 'tiny', 'tip', 'tired', 'tissue', 'title', 'toast', 'tobacco', 'today', 'toddler', 'toe', 'together', 'toilet', 'token', 'tomato', 'tomorrow', 'tone', 'tongue', 'tonight', 'tool', 'tooth', 'top', 'topic', 'topple', 'torch', 'tornado', 'tortoise', 'toss', 'total', 'tourist', 'toward', 'tower', 'town', 'toy', 'track', 'trade', 'traffic', 'tragic', 'train', 'transfer', 'trap', 'trash', 'travel', 'tray', 'treat', 'tree', 'trend', 'trial', 'tribe', 'trick', 'trigger', 'trim', 'trip', 'trophy', 'trouble', 'truck', 'true', 'truly', 'trumpet', 'trust', 'truth', 'try', 'tube', 'tuition', 'tumble', 'tuna', 'tunnel', 'turkey', 'turn', 'turtle', 'twelve', 'twenty', 'twice', 'twin', 'twist', 'two', 'type', 'typical',\n    'ugly', 'umbrella', 'unable', 'unaware', 'uncle', 'uncover', 'under', 'undo', 'unfair', 'unfold', 'unhappy', 'uniform', 'unique', 'unit', 'universe', 'unknown', 'unlock', 'until', 'unusual', 'unveil', 'update', 'upgrade', 'uphold', 'upon', 'upper', 'upset', 'urban', 'urge', 'usage', 'use', 'used', 'useful', 'useless', 'usual', 'utility',\n    'vacant', 'vacuum', 'vague', 'valid', 'valley', 'valve', 'van', 'vanish', 'vapor', 'various', 'vast', 'vault', 'vehicle', 'velvet', 'vendor', 'venture', 'venue', 'verb', 'verify', 'version', 'very', 'vessel', 'veteran', 'viable', 'vibrant', 'vicious', 'victory', 'video', 'view', 'village', 'vintage', 'violin', 'virtual', 'virus', 'visa', 'visit', 'visual', 'vital', 'vivid', 'vocal', 'voice', 'void', 'volcano', 'volume', 'vote', 'voyage',\n    'wage', 'wagon', 'wait', 'walk', 'wall', 'walnut', 'want', 'warfare', 'warm', 'warrior', 'wash', 'wasp', 'waste', 'water', 'wave', 'way', 'wealth', 'weapon', 'wear', 'weasel', 'weather', 'web', 'wedding', 'weekend', 'weird', 'welcome', 'west', 'wet', 'whale', 'what', 'wheat', 'wheel', 'when', 'where', 'whip', 'whisper', 'wide', 'width', 'wife', 'wild', 'will', 'win', 'window', 'wine', 'wing', 'wink', 'winner', 'winter', 'wire', 'wisdom', 'wise', 'wish', 'witness', 'wolf', 'woman', 'wonder', 'wood', 'wool', 'word', 'work', 'world', 'worry', 'worth', 'wrap', 'wreck', 'wrestle', 'wrist', 'write', 'wrong',\n    'yard', 'year', 'yellow', 'you', 'young', 'youth',\n    'zebra', 'zero', 'zone', 'zoo'];\nexports.wordlist = EN;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mnemonicFromRandomSeed = exports.mnemonicIndexesToBytes = exports.bytesToMnemonics = exports.bytesToMnemonicIndexes = exports.mnemonicNew = exports.mnemonicValidate = exports.mnemonicToHDSeed = exports.mnemonicToWalletKey = exports.mnemonicToPrivateKey = exports.mnemonicToSeed = exports.mnemonicToEntropy = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst getSecureRandom_1 = require(\"../primitives/getSecureRandom\");\nconst hmac_sha512_1 = require(\"../primitives/hmac_sha512\");\nconst pbkdf2_sha512_1 = require(\"../primitives/pbkdf2_sha512\");\nconst binary_1 = require(\"../utils/binary\");\nconst wordlist_1 = require(\"./wordlist\");\nconst PBKDF_ITERATIONS = 100000;\nasync function isPasswordNeeded(mnemonicArray) {\n    const passlessEntropy = await mnemonicToEntropy(mnemonicArray);\n    return (await isPasswordSeed(passlessEntropy)) && !(await isBasicSeed(passlessEntropy));\n}\nfunction normalizeMnemonic(src) {\n    return src.map((v) => v.toLowerCase().trim());\n}\nasync function isBasicSeed(entropy) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L68\n    // bool Mnemonic::is_basic_seed() {\n    //   td::SecureString hash(64);\n    //   td::pbkdf2_sha512(as_slice(to_entropy()), \"TON seed version\", td::max(1, PBKDF_ITERATIONS / 256),\n    //                     hash.as_mutable_slice());\n    //   return hash.as_slice()[0] == 0;\n    // }\n    const seed = await (0, pbkdf2_sha512_1.pbkdf2_sha512)(entropy, 'TON seed version', Math.max(1, Math.floor(PBKDF_ITERATIONS / 256)), 64);\n    return seed[0] == 0;\n}\nasync function isPasswordSeed(entropy) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L75\n    // bool Mnemonic::is_password_seed() {\n    //   td::SecureString hash(64);\n    //   td::pbkdf2_sha512(as_slice(to_entropy()), \"TON fast seed version\", 1, hash.as_mutable_slice());\n    //   return hash.as_slice()[0] == 1;\n    // }\n    const seed = await (0, pbkdf2_sha512_1.pbkdf2_sha512)(entropy, 'TON fast seed version', 1, 64);\n    return seed[0] == 1;\n}\nasync function mnemonicToEntropy(mnemonicArray, password) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L52\n    // td::SecureString Mnemonic::to_entropy() const {\n    //   td::SecureString res(64);\n    //   td::hmac_sha512(join(words_), password_, res.as_mutable_slice());\n    //   return res;\n    // }\n    return await (0, hmac_sha512_1.hmac_sha512)(mnemonicArray.join(' '), password && password.length > 0 ? password : '');\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\nasync function mnemonicToSeed(mnemonicArray, seed, password) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L58\n    // td::SecureString Mnemonic::to_seed() const {\n    //   td::SecureString hash(64);\n    //   td::pbkdf2_sha512(as_slice(to_entropy()), \"TON default seed\", PBKDF_ITERATIONS, hash.as_mutable_slice());\n    //   return hash;\n    // }\n    const entropy = await mnemonicToEntropy(mnemonicArray, password);\n    return await (0, pbkdf2_sha512_1.pbkdf2_sha512)(entropy, seed, PBKDF_ITERATIONS, 64);\n}\nexports.mnemonicToSeed = mnemonicToSeed;\n/**\n * Extract private key from mnemonic\n * @param mnemonicArray mnemonic array\n * @param password mnemonic password\n * @returns Key Pair\n */\nasync function mnemonicToPrivateKey(mnemonicArray, password) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L64\n    // td::Ed25519::PrivateKey Mnemonic::to_private_key() const {\n    //   return td::Ed25519::PrivateKey(td::SecureString(as_slice(to_seed()).substr(0, td::Ed25519::PrivateKey::LENGTH)));\n    // }\n    mnemonicArray = normalizeMnemonic(mnemonicArray);\n    const seed = (await mnemonicToSeed(mnemonicArray, 'TON default seed', password));\n    let keyPair = tweetnacl_1.default.sign.keyPair.fromSeed(seed.slice(0, 32));\n    return {\n        publicKey: Buffer.from(keyPair.publicKey),\n        secretKey: Buffer.from(keyPair.secretKey)\n    };\n}\nexports.mnemonicToPrivateKey = mnemonicToPrivateKey;\n/**\n * Convert mnemonic to wallet key pair\n * @param mnemonicArray mnemonic array\n * @param password mnemonic password\n * @returns Key Pair\n */\nasync function mnemonicToWalletKey(mnemonicArray, password) {\n    let seedPk = await mnemonicToPrivateKey(mnemonicArray, password);\n    let seedSecret = seedPk.secretKey.slice(0, 32);\n    const keyPair = tweetnacl_1.default.sign.keyPair.fromSeed(seedSecret);\n    return {\n        publicKey: Buffer.from(keyPair.publicKey),\n        secretKey: Buffer.from(keyPair.secretKey)\n    };\n}\nexports.mnemonicToWalletKey = mnemonicToWalletKey;\n/**\n * Convert mnemonics to HD seed\n * @param mnemonicArray mnemonic array\n * @param password mnemonic password\n * @returns 64 byte seed\n */\nasync function mnemonicToHDSeed(mnemonicArray, password) {\n    mnemonicArray = normalizeMnemonic(mnemonicArray);\n    return (await mnemonicToSeed(mnemonicArray, 'TON HD Keys seed', password));\n}\nexports.mnemonicToHDSeed = mnemonicToHDSeed;\n/**\n * Validate Mnemonic\n * @param mnemonicArray mnemonic array\n * @param password mnemonic password\n * @returns true for valid mnemonic\n */\nasync function mnemonicValidate(mnemonicArray, password) {\n    // Normalize\n    mnemonicArray = normalizeMnemonic(mnemonicArray);\n    // Validate mnemonic words\n    for (let word of mnemonicArray) {\n        if (wordlist_1.wordlist.indexOf(word) < 0) {\n            return false;\n        }\n    }\n    // Check password\n    if (password && password.length > 0) {\n        if (!await isPasswordNeeded(mnemonicArray)) {\n            return false;\n        }\n    }\n    // Validate seed\n    return await isBasicSeed(await mnemonicToEntropy(mnemonicArray, password));\n}\nexports.mnemonicValidate = mnemonicValidate;\n/**\n * Generate new Mnemonic\n * @param wordsCount number of words to generate\n * @param password mnemonic password\n * @returns\n */\nasync function mnemonicNew(wordsCount = 24, password) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L159\n    let mnemonicArray = [];\n    while (true) {\n        // Regenerate new mnemonics\n        mnemonicArray = [];\n        for (let i = 0; i < wordsCount; i++) {\n            let ind = await (0, getSecureRandom_1.getSecureRandomNumber)(0, wordlist_1.wordlist.length);\n            mnemonicArray.push(wordlist_1.wordlist[ind]);\n        }\n        // Chek password conformance\n        if (password && password.length > 0) {\n            if (!await isPasswordNeeded(mnemonicArray)) {\n                continue;\n            }\n        }\n        // Check if basic seed correct\n        if (!(await isBasicSeed(await mnemonicToEntropy(mnemonicArray, password)))) {\n            continue;\n        }\n        break;\n    }\n    return mnemonicArray;\n}\nexports.mnemonicNew = mnemonicNew;\n/**\n * Converts bytes to mnemonics array (could be invalid for TON)\n * @param src source buffer\n * @param wordsCount number of words\n */\nfunction bytesToMnemonicIndexes(src, wordsCount) {\n    let bits = (0, binary_1.bytesToBits)(src);\n    let indexes = [];\n    for (let i = 0; i < wordsCount; i++) {\n        let sl = bits.slice(i * 11, i * 11 + 11);\n        indexes.push(parseInt(sl, 2));\n    }\n    return indexes;\n}\nexports.bytesToMnemonicIndexes = bytesToMnemonicIndexes;\nfunction bytesToMnemonics(src, wordsCount) {\n    let mnemonics = bytesToMnemonicIndexes(src, wordsCount);\n    let res = [];\n    for (let m of mnemonics) {\n        res.push(wordlist_1.wordlist[m]);\n    }\n    return res;\n}\nexports.bytesToMnemonics = bytesToMnemonics;\n/**\n * Converts mnemonics indexes to buffer with zero padding in the end\n * @param src source indexes\n * @returns Buffer\n */\nfunction mnemonicIndexesToBytes(src) {\n    let res = '';\n    for (let s of src) {\n        if (!Number.isSafeInteger(s)) {\n            throw Error('Invalid input');\n        }\n        if (s < 0 || s >= 2028) {\n            throw Error('Invalid input');\n        }\n        res += (0, binary_1.lpad)(s.toString(2), '0', 11);\n    }\n    while (res.length % 8 !== 0) {\n        res = res + '0';\n    }\n    return (0, binary_1.bitsToBytes)(res);\n}\nexports.mnemonicIndexesToBytes = mnemonicIndexesToBytes;\n/**\n * Generates deterministically mnemonics\n * @param seed\n * @param wordsCount\n * @param password\n */\nasync function mnemonicFromRandomSeed(seed, wordsCount = 24, password) {\n    const bytesLength = Math.ceil(wordsCount * 11 / 8);\n    let currentSeed = seed;\n    while (true) {\n        // Create entropy\n        let entropy = await (0, pbkdf2_sha512_1.pbkdf2_sha512)(currentSeed, 'TON mnemonic seed', Math.max(1, Math.floor(PBKDF_ITERATIONS / 256)), bytesLength);\n        // Create mnemonics\n        let mnemonics = bytesToMnemonics(entropy, wordsCount);\n        // Check if mnemonics are valid\n        if (await mnemonicValidate(mnemonics, password)) {\n            return mnemonics;\n        }\n        currentSeed = entropy;\n    }\n}\nexports.mnemonicFromRandomSeed = mnemonicFromRandomSeed;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openBox = exports.sealBox = exports.signVerify = exports.sign = exports.keyPairFromSeed = exports.keyPairFromSecretKey = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nfunction keyPairFromSecretKey(secretKey) {\n    let res = tweetnacl_1.default.sign.keyPair.fromSecretKey(new Uint8Array(secretKey));\n    return {\n        publicKey: Buffer.from(res.publicKey),\n        secretKey: Buffer.from(res.secretKey),\n    };\n}\nexports.keyPairFromSecretKey = keyPairFromSecretKey;\nfunction keyPairFromSeed(secretKey) {\n    let res = tweetnacl_1.default.sign.keyPair.fromSeed(new Uint8Array(secretKey));\n    return {\n        publicKey: Buffer.from(res.publicKey),\n        secretKey: Buffer.from(res.secretKey),\n    };\n}\nexports.keyPairFromSeed = keyPairFromSeed;\nfunction sign(data, secretKey) {\n    return Buffer.from(tweetnacl_1.default.sign.detached(new Uint8Array(data), new Uint8Array(secretKey)));\n}\nexports.sign = sign;\nfunction signVerify(data, signature, publicKey) {\n    return tweetnacl_1.default.sign.detached.verify(new Uint8Array(data), new Uint8Array(signature), new Uint8Array(publicKey));\n}\nexports.signVerify = signVerify;\nfunction sealBox(data, nonce, key) {\n    return Buffer.from(tweetnacl_1.default.secretbox(data, nonce, key));\n}\nexports.sealBox = sealBox;\nfunction openBox(data, nonce, key) {\n    let res = tweetnacl_1.default.secretbox.open(data, nonce, key);\n    if (!res) {\n        return null;\n    }\n    return Buffer.from(res);\n}\nexports.openBox = openBox;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveEd25519Path = exports.deriveED25519HardenedKey = exports.getED25519MasterKeyFromSeed = void 0;\nconst hmac_sha512_1 = require(\"../primitives/hmac_sha512\");\nconst ED25519_CURVE = 'ed25519 seed';\nconst HARDENED_OFFSET = 0x80000000;\nasync function getED25519MasterKeyFromSeed(seed) {\n    const I = await (0, hmac_sha512_1.hmac_sha512)(ED25519_CURVE, seed);\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n}\nexports.getED25519MasterKeyFromSeed = getED25519MasterKeyFromSeed;\n;\nasync function deriveED25519HardenedKey(parent, index) {\n    if (index >= HARDENED_OFFSET) {\n        throw Error('Key index must be less than offset');\n    }\n    // Key Derive Path: 0x00 + parent.key + index;\n    const indexBuffer = Buffer.alloc(4);\n    indexBuffer.writeUInt32BE(index + HARDENED_OFFSET, 0);\n    const data = Buffer.concat([Buffer.alloc(1, 0), parent.key, indexBuffer]);\n    // Derive key\n    const I = await (0, hmac_sha512_1.hmac_sha512)(parent.chainCode, data);\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n}\nexports.deriveED25519HardenedKey = deriveED25519HardenedKey;\n;\nasync function deriveEd25519Path(seed, path) {\n    let state = await getED25519MasterKeyFromSeed(seed);\n    let remaining = [...path];\n    while (remaining.length > 0) {\n        let index = remaining[0];\n        remaining = remaining.slice(1);\n        state = await deriveED25519HardenedKey(state, index);\n    }\n    return state.key;\n}\nexports.deriveEd25519Path = deriveEd25519Path;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveSymmetricPath = exports.deriveSymmetricHardenedKey = exports.getSymmetricMasterKeyFromSeed = void 0;\nconst hmac_sha512_1 = require(\"../primitives/hmac_sha512\");\nconst SYMMETRIC_SEED = 'Symmetric key seed';\nasync function getSymmetricMasterKeyFromSeed(seed) {\n    const I = await (0, hmac_sha512_1.hmac_sha512)(SYMMETRIC_SEED, seed);\n    const IL = I.slice(32);\n    const IR = I.slice(0, 32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n}\nexports.getSymmetricMasterKeyFromSeed = getSymmetricMasterKeyFromSeed;\n;\nasync function deriveSymmetricHardenedKey(parent, offset) {\n    // Prepare data\n    const data = Buffer.concat([Buffer.alloc(1, 0), Buffer.from(offset)]);\n    // Derive key\n    const I = await (0, hmac_sha512_1.hmac_sha512)(parent.chainCode, data);\n    const IL = I.slice(32);\n    const IR = I.slice(0, 32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n}\nexports.deriveSymmetricHardenedKey = deriveSymmetricHardenedKey;\nasync function deriveSymmetricPath(seed, path) {\n    let state = await getSymmetricMasterKeyFromSeed(seed);\n    let remaining = [...path];\n    while (remaining.length > 0) {\n        let index = remaining[0];\n        remaining = remaining.slice(1);\n        state = await deriveSymmetricHardenedKey(state, index);\n    }\n    return state.key;\n}\nexports.deriveSymmetricPath = deriveSymmetricPath;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveMnemonicsPath = exports.deriveMnemonicHardenedKey = exports.getMnemonicsMasterKeyFromSeed = void 0;\nconst mnemonic_1 = require(\"../mnemonic/mnemonic\");\nconst hmac_sha512_1 = require(\"../primitives/hmac_sha512\");\nconst HARDENED_OFFSET = 0x80000000;\nconst MNEMONICS_SEED = 'TON Mnemonics HD seed';\nasync function getMnemonicsMasterKeyFromSeed(seed) {\n    const I = await (0, hmac_sha512_1.hmac_sha512)(MNEMONICS_SEED, seed);\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n}\nexports.getMnemonicsMasterKeyFromSeed = getMnemonicsMasterKeyFromSeed;\n;\nasync function deriveMnemonicHardenedKey(parent, index) {\n    if (index >= HARDENED_OFFSET) {\n        throw Error('Key index must be less than offset');\n    }\n    // Key Derive Path: 0x00 + parent.key + index;\n    const indexBuffer = Buffer.alloc(4);\n    indexBuffer.writeUInt32BE(index + HARDENED_OFFSET, 0);\n    const data = Buffer.concat([Buffer.alloc(1, 0), parent.key, indexBuffer]);\n    // Derive key\n    const I = await (0, hmac_sha512_1.hmac_sha512)(parent.chainCode, data);\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return {\n        key: IL,\n        chainCode: IR,\n    };\n}\nexports.deriveMnemonicHardenedKey = deriveMnemonicHardenedKey;\nasync function deriveMnemonicsPath(seed, path, wordsCount = 24, password) {\n    let state = await getMnemonicsMasterKeyFromSeed(seed);\n    let remaining = [...path];\n    while (remaining.length > 0) {\n        let index = remaining[0];\n        remaining = remaining.slice(1);\n        state = await deriveMnemonicHardenedKey(state, index);\n    }\n    return await (0, mnemonic_1.mnemonicFromRandomSeed)(state.key, wordsCount, password);\n}\nexports.deriveMnemonicsPath = deriveMnemonicsPath;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMnemonicsMasterKeyFromSeed = exports.deriveMnemonicHardenedKey = exports.deriveMnemonicsPath = exports.deriveSymmetricPath = exports.deriveSymmetricHardenedKey = exports.getSymmetricMasterKeyFromSeed = exports.deriveEd25519Path = exports.deriveED25519HardenedKey = exports.getED25519MasterKeyFromSeed = exports.signVerify = exports.sign = exports.keyPairFromSecretKey = exports.keyPairFromSeed = exports.openBox = exports.sealBox = exports.mnemonicWordList = exports.mnemonicToHDSeed = exports.mnemonicToSeed = exports.mnemonicToWalletKey = exports.mnemonicToPrivateKey = exports.mnemonicValidate = exports.mnemonicNew = exports.newSecurePassphrase = exports.newSecureWords = exports.getSecureRandomNumber = exports.getSecureRandomWords = exports.getSecureRandomBytes = exports.hmac_sha512 = exports.pbkdf2_sha512 = exports.sha512_sync = exports.sha512 = exports.sha256_sync = exports.sha256 = void 0;\nvar sha256_1 = require(\"./primitives/sha256\");\nObject.defineProperty(exports, \"sha256\", { enumerable: true, get: function () { return sha256_1.sha256; } });\nObject.defineProperty(exports, \"sha256_sync\", { enumerable: true, get: function () { return sha256_1.sha256_sync; } });\nvar sha512_1 = require(\"./primitives/sha512\");\nObject.defineProperty(exports, \"sha512\", { enumerable: true, get: function () { return sha512_1.sha512; } });\nObject.defineProperty(exports, \"sha512_sync\", { enumerable: true, get: function () { return sha512_1.sha512_sync; } });\nvar pbkdf2_sha512_1 = require(\"./primitives/pbkdf2_sha512\");\nObject.defineProperty(exports, \"pbkdf2_sha512\", { enumerable: true, get: function () { return pbkdf2_sha512_1.pbkdf2_sha512; } });\nvar hmac_sha512_1 = require(\"./primitives/hmac_sha512\");\nObject.defineProperty(exports, \"hmac_sha512\", { enumerable: true, get: function () { return hmac_sha512_1.hmac_sha512; } });\nvar getSecureRandom_1 = require(\"./primitives/getSecureRandom\");\nObject.defineProperty(exports, \"getSecureRandomBytes\", { enumerable: true, get: function () { return getSecureRandom_1.getSecureRandomBytes; } });\nObject.defineProperty(exports, \"getSecureRandomWords\", { enumerable: true, get: function () { return getSecureRandom_1.getSecureRandomWords; } });\nObject.defineProperty(exports, \"getSecureRandomNumber\", { enumerable: true, get: function () { return getSecureRandom_1.getSecureRandomNumber; } });\nvar newSecureWords_1 = require(\"./passwords/newSecureWords\");\nObject.defineProperty(exports, \"newSecureWords\", { enumerable: true, get: function () { return newSecureWords_1.newSecureWords; } });\nvar newSecurePassphrase_1 = require(\"./passwords/newSecurePassphrase\");\nObject.defineProperty(exports, \"newSecurePassphrase\", { enumerable: true, get: function () { return newSecurePassphrase_1.newSecurePassphrase; } });\nvar mnemonic_1 = require(\"./mnemonic/mnemonic\");\nObject.defineProperty(exports, \"mnemonicNew\", { enumerable: true, get: function () { return mnemonic_1.mnemonicNew; } });\nObject.defineProperty(exports, \"mnemonicValidate\", { enumerable: true, get: function () { return mnemonic_1.mnemonicValidate; } });\nObject.defineProperty(exports, \"mnemonicToPrivateKey\", { enumerable: true, get: function () { return mnemonic_1.mnemonicToPrivateKey; } });\nObject.defineProperty(exports, \"mnemonicToWalletKey\", { enumerable: true, get: function () { return mnemonic_1.mnemonicToWalletKey; } });\nObject.defineProperty(exports, \"mnemonicToSeed\", { enumerable: true, get: function () { return mnemonic_1.mnemonicToSeed; } });\nObject.defineProperty(exports, \"mnemonicToHDSeed\", { enumerable: true, get: function () { return mnemonic_1.mnemonicToHDSeed; } });\nvar wordlist_1 = require(\"./mnemonic/wordlist\");\nObject.defineProperty(exports, \"mnemonicWordList\", { enumerable: true, get: function () { return wordlist_1.wordlist; } });\nvar nacl_1 = require(\"./primitives/nacl\");\nObject.defineProperty(exports, \"sealBox\", { enumerable: true, get: function () { return nacl_1.sealBox; } });\nObject.defineProperty(exports, \"openBox\", { enumerable: true, get: function () { return nacl_1.openBox; } });\nvar nacl_2 = require(\"./primitives/nacl\");\nObject.defineProperty(exports, \"keyPairFromSeed\", { enumerable: true, get: function () { return nacl_2.keyPairFromSeed; } });\nObject.defineProperty(exports, \"keyPairFromSecretKey\", { enumerable: true, get: function () { return nacl_2.keyPairFromSecretKey; } });\nObject.defineProperty(exports, \"sign\", { enumerable: true, get: function () { return nacl_2.sign; } });\nObject.defineProperty(exports, \"signVerify\", { enumerable: true, get: function () { return nacl_2.signVerify; } });\nvar ed25519_1 = require(\"./hd/ed25519\");\nObject.defineProperty(exports, \"getED25519MasterKeyFromSeed\", { enumerable: true, get: function () { return ed25519_1.getED25519MasterKeyFromSeed; } });\nObject.defineProperty(exports, \"deriveED25519HardenedKey\", { enumerable: true, get: function () { return ed25519_1.deriveED25519HardenedKey; } });\nObject.defineProperty(exports, \"deriveEd25519Path\", { enumerable: true, get: function () { return ed25519_1.deriveEd25519Path; } });\nvar symmetric_1 = require(\"./hd/symmetric\");\nObject.defineProperty(exports, \"getSymmetricMasterKeyFromSeed\", { enumerable: true, get: function () { return symmetric_1.getSymmetricMasterKeyFromSeed; } });\nObject.defineProperty(exports, \"deriveSymmetricHardenedKey\", { enumerable: true, get: function () { return symmetric_1.deriveSymmetricHardenedKey; } });\nObject.defineProperty(exports, \"deriveSymmetricPath\", { enumerable: true, get: function () { return symmetric_1.deriveSymmetricPath; } });\nvar mnemonics_1 = require(\"./hd/mnemonics\");\nObject.defineProperty(exports, \"deriveMnemonicsPath\", { enumerable: true, get: function () { return mnemonics_1.deriveMnemonicsPath; } });\nObject.defineProperty(exports, \"deriveMnemonicHardenedKey\", { enumerable: true, get: function () { return mnemonics_1.deriveMnemonicHardenedKey; } });\nObject.defineProperty(exports, \"getMnemonicsMasterKeyFromSeed\", { enumerable: true, get: function () { return mnemonics_1.getMnemonicsMasterKeyFromSeed; } });\n", null, null, null, null, null, null, null, null, null, null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.backoff = void 0;\nconst teslabot_1 = require(\"teslabot\");\nexports.backoff = (0, teslabot_1.createBackoff)({\n    maxFailureCount: 5,\n    onError: (e, i) => i > 3 && console.warn(e)\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUrlSafe = void 0;\nfunction toUrlSafe(src) {\n    while (src.indexOf('/') >= 0) {\n        src = src.replace('/', '_');\n    }\n    while (src.indexOf('+') >= 0) {\n        src = src.replace('+', '-');\n    }\n    while (src.indexOf('=') >= 0) {\n        src = src.replace('=', '');\n    }\n    return src;\n}\nexports.toUrlSafe = toUrlSafe;\n", "\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _BitString_instances, _BitString_length, _BitString_cursor, _BitString_buffer, _BitString_checkRange, _a, _b;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BitString = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst symbol_inspect_1 = __importDefault(require(\"symbol.inspect\"));\nconst __1 = require(\"..\");\nclass BitString {\n    constructor(buffer, length, cursor) {\n        _BitString_instances.add(this);\n        _BitString_length.set(this, void 0);\n        _BitString_cursor.set(this, void 0);\n        _BitString_buffer.set(this, void 0);\n        this[_a] = () => {\n            let offset = 0;\n            let end = __classPrivateFieldGet(this, _BitString_cursor, \"f\");\n            return {\n                next: () => {\n                    if (offset < end) {\n                        let v = this.get(offset);\n                        offset++;\n                        return {\n                            done: false,\n                            value: v\n                        };\n                    }\n                    else {\n                        return {\n                            done: true\n                        };\n                    }\n                }\n            };\n        };\n        this.get = (n) => {\n            __classPrivateFieldGet(this, _BitString_instances, \"m\", _BitString_checkRange).call(this, n);\n            return (__classPrivateFieldGet(this, _BitString_buffer, \"f\")[(n / 8) | 0] & (1 << (7 - (n % 8)))) > 0;\n        };\n        this.on = (n) => {\n            __classPrivateFieldGet(this, _BitString_instances, \"m\", _BitString_checkRange).call(this, n);\n            __classPrivateFieldGet(this, _BitString_buffer, \"f\")[(n / 8) | 0] |= 1 << (7 - (n % 8));\n        };\n        this.off = (n) => {\n            __classPrivateFieldGet(this, _BitString_instances, \"m\", _BitString_checkRange).call(this, n);\n            __classPrivateFieldGet(this, _BitString_buffer, \"f\")[(n / 8) | 0] &= ~(1 << (7 - (n % 8)));\n        };\n        this.toggle = (n) => {\n            __classPrivateFieldGet(this, _BitString_instances, \"m\", _BitString_checkRange).call(this, n);\n            __classPrivateFieldGet(this, _BitString_buffer, \"f\")[(n / 8) | 0] ^= 1 << (7 - (n % 8));\n        };\n        this.writeBit = (value) => {\n            var _c;\n            if (value === true || value > 0) {\n                this.on(__classPrivateFieldGet(this, _BitString_cursor, \"f\"));\n            }\n            else {\n                this.off(__classPrivateFieldGet(this, _BitString_cursor, \"f\"));\n            }\n            __classPrivateFieldSet(this, _BitString_cursor, (_c = __classPrivateFieldGet(this, _BitString_cursor, \"f\"), _c++, _c), \"f\");\n        };\n        this.writeUint = (value, bitLength) => {\n            let v = new bn_js_1.default(value);\n            if (bitLength == 0 || (value.toString(2).length > bitLength)) {\n                if (v.isZero()) {\n                    return;\n                }\n                throw Error(`bitLength is too small for a value ${v.toString()}. Got ${bitLength}, expected >= ${value.toString(2).length}`);\n            }\n            const s = v.toString(2, bitLength);\n            for (let i = 0; i < bitLength; i++) {\n                this.writeBit(s[i] === '1');\n            }\n        };\n        this.writeInt = (value, bitLength) => {\n            let v = new bn_js_1.default(value);\n            if (bitLength == 1) {\n                if (v.eq(new bn_js_1.default(-1))) {\n                    this.writeBit(true);\n                    return;\n                }\n                if (v.isZero()) {\n                    this.writeBit(false);\n                    return;\n                }\n                throw Error(`bitlength is too small for a value ${v}`);\n            }\n            else {\n                if (v.isNeg()) {\n                    this.writeBit(true);\n                    const b = new bn_js_1.default(2);\n                    const nb = b.pow(new bn_js_1.default(bitLength - 1));\n                    this.writeUint(nb.add(v), bitLength - 1);\n                }\n                else {\n                    this.writeBit(false);\n                    this.writeUint(v, bitLength - 1);\n                }\n            }\n        };\n        this.writeUint8 = (value) => {\n            this.writeUint(value, 8);\n        };\n        this.writeBuffer = (buffer) => {\n            for (let i = 0; i < buffer.length; i++) {\n                this.writeUint8(buffer[i]);\n            }\n        };\n        this.writeCoins = (amount) => {\n            if (amount == 0) {\n                this.writeUint(0, 4);\n            }\n            else {\n                amount = new bn_js_1.default(amount);\n                const l = Math.ceil((amount.toString(16).length) / 2);\n                this.writeUint(l, 4);\n                this.writeUint(amount, l * 8);\n            }\n        };\n        this.writeAddress = (address) => {\n            if (address === null) {\n                this.writeUint(0, 2);\n            }\n            else {\n                this.writeUint(2, 2);\n                this.writeUint(0, 1);\n                this.writeInt(address.workChain, 8);\n                this.writeBuffer(address.hash);\n            }\n        };\n        this.writeBitString = (value) => {\n            for (let v of value) {\n                this.writeBit(v);\n            }\n        };\n        this[_b] = () => this.toFiftHex();\n        __classPrivateFieldSet(this, _BitString_buffer, buffer, \"f\");\n        __classPrivateFieldSet(this, _BitString_length, length, \"f\");\n        __classPrivateFieldSet(this, _BitString_cursor, cursor, \"f\");\n    }\n    static alloc(length) {\n        return new BitString(Buffer.alloc(Math.ceil(length / 8), 0), length, 0);\n    }\n    get available() {\n        return this.length - this.cursor;\n    }\n    get length() {\n        return __classPrivateFieldGet(this, _BitString_length, \"f\");\n    }\n    get cursor() {\n        return __classPrivateFieldGet(this, _BitString_cursor, \"f\");\n    }\n    get buffer() {\n        return __classPrivateFieldGet(this, _BitString_buffer, \"f\");\n    }\n    writeBitArray(value) {\n        for (let v of value) {\n            this.writeBit(v);\n        }\n    }\n    clone() {\n        let buf = Buffer.alloc(__classPrivateFieldGet(this, _BitString_buffer, \"f\").length);\n        __classPrivateFieldGet(this, _BitString_buffer, \"f\").copy(buf);\n        return new BitString(buf, __classPrivateFieldGet(this, _BitString_length, \"f\"), __classPrivateFieldGet(this, _BitString_cursor, \"f\"));\n    }\n    toString() {\n        let res = '';\n        for (let v of this) {\n            if (v) {\n                res = res + '1';\n            }\n            else {\n                res = res + '0';\n            }\n        }\n        return res;\n    }\n    toFiftHex() {\n        if (this.cursor % 4 === 0) {\n            const s = __classPrivateFieldGet(this, _BitString_buffer, \"f\").slice(0, Math.ceil(this.cursor / 8)).toString('hex').toUpperCase();\n            if (this.cursor % 8 === 0) {\n                return s;\n            }\n            else {\n                return s.substr(0, s.length - 1);\n            }\n        }\n        else {\n            const temp = this.clone();\n            temp.writeBit(1);\n            while (temp.cursor % 4 !== 0) {\n                temp.writeBit(0);\n            }\n            const hex = temp.toFiftHex().toUpperCase();\n            return hex + '_';\n        }\n    }\n    setTopUppedArray(array, fullfilledBytes = true) {\n        __classPrivateFieldSet(this, _BitString_length, array.length * 8, \"f\");\n        __classPrivateFieldSet(this, _BitString_buffer, Buffer.alloc(array.length), \"f\");\n        array.copy(__classPrivateFieldGet(this, _BitString_buffer, \"f\"));\n        __classPrivateFieldSet(this, _BitString_cursor, this.length, \"f\");\n        if (fullfilledBytes || !this.length) {\n            return;\n        }\n        else {\n            let foundEndBit = false;\n            for (let c = 0; c < 7; c++) {\n                __classPrivateFieldSet(this, _BitString_cursor, __classPrivateFieldGet(this, _BitString_cursor, \"f\") - 1, \"f\");\n                if (this.get(this.cursor)) {\n                    foundEndBit = true;\n                    this.off(this.cursor);\n                    break;\n                }\n            }\n            if (!foundEndBit) {\n                throw new Error(\"Incorrect TopUppedArray\");\n            }\n        }\n    }\n    getTopUppedArray() {\n        const ret = this.clone();\n        let tu = Math.ceil(ret.cursor / 8) * 8 - ret.cursor;\n        if (tu > 0) {\n            tu = tu - 1;\n            ret.writeBit(true);\n            while (tu > 0) {\n                tu = tu - 1;\n                ret.writeBit(false);\n            }\n        }\n        __classPrivateFieldSet(ret, _BitString_buffer, __classPrivateFieldGet(ret, _BitString_buffer, \"f\").slice(0, Math.ceil(ret.cursor / 8)), \"f\");\n        return __classPrivateFieldGet(ret, _BitString_buffer, \"f\");\n    }\n    equals(src) {\n        if (src.cursor !== this.cursor) {\n            return false;\n        }\n        if (src.length !== this.length) {\n            return false;\n        }\n        let sr = new __1.BitStringReader(src);\n        let tr = new __1.BitStringReader(this);\n        for (let i = 0; i < src.cursor; i++) {\n            if (sr.readBit() !== tr.readBit()) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nexports.BitString = BitString;\n_BitString_length = new WeakMap(), _BitString_cursor = new WeakMap(), _BitString_buffer = new WeakMap(), _BitString_instances = new WeakSet(), _a = Symbol.iterator, _b = symbol_inspect_1.default, _BitString_checkRange = function _BitString_checkRange(n) {\n    if (n > this.length) {\n        throw Error('Invalid index: ' + n);\n    }\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BitStringReader = void 0;\nconst bn_js_1 = require(\"bn.js\");\nconst __1 = require(\"..\");\nclass BitStringReader {\n    constructor(string) {\n        this.offset = 0;\n        let r = Buffer.alloc(string.buffer.length);\n        string.buffer.copy(r);\n        this.buffer = r;\n        this.length = string.cursor;\n    }\n    get currentOffset() {\n        return this.offset;\n    }\n    get remaining() {\n        return this.length - this.offset;\n    }\n    skip(bits) {\n        for (let i = 0; i < bits; i++) {\n            this.readBit();\n        }\n    }\n    readUint(bits) {\n        if (bits == 0) {\n            return new bn_js_1.BN(0);\n        }\n        let res = '';\n        for (let i = 0; i < bits; i++) {\n            res += this.readBit() ? '1' : '0';\n        }\n        return new bn_js_1.BN(res, 2);\n    }\n    readUintNumber(bits) {\n        return this.readUint(bits).toNumber();\n    }\n    readInt(bits) {\n        if (bits === 0) {\n            return new bn_js_1.BN(0);\n        }\n        if (bits === 1) {\n            if (this.readBit() /* isNegative */) {\n                return new bn_js_1.BN(-1);\n            }\n            else {\n                return new bn_js_1.BN(0);\n            }\n        }\n        if (this.readBit() /* isNegative */) {\n            let base = this.readUint(bits - 1);\n            const b = new bn_js_1.BN(2);\n            const nb = b.pow(new bn_js_1.BN(bits - 1));\n            return base.sub(nb);\n        }\n        else {\n            return this.readUint(bits - 1);\n        }\n    }\n    readIntNumber(bits) {\n        return this.readInt(bits).toNumber();\n    }\n    readBuffer(size) {\n        let res = [];\n        for (let i = 0; i < size; i++) {\n            res.push(this.readUintNumber(8));\n        }\n        return Buffer.from(res);\n    }\n    readBit() {\n        let r = this.getBit(this.offset);\n        this.offset++;\n        return r;\n    }\n    readCoins() {\n        let bytes = this.readUintNumber(4);\n        if (bytes === 0) {\n            return new bn_js_1.BN(0);\n        }\n        return new bn_js_1.BN(this.readBuffer(bytes).toString('hex'), 'hex');\n    }\n    readVarUInt(headerBits) {\n        let bytes = this.readUintNumber(headerBits);\n        if (bytes === 0) {\n            return new bn_js_1.BN(0);\n        }\n        return new bn_js_1.BN(this.readBuffer(bytes).toString('hex'), 'hex');\n    }\n    readVarUIntNumber(headerBits) {\n        return this.readVarUInt(headerBits).toNumber();\n    }\n    readUnaryLength() {\n        let res = 0;\n        while (this.readBit()) {\n            res++;\n        }\n        return res;\n    }\n    readRemaining() {\n        let res = __1.BitString.alloc(1023);\n        while (this.offset < this.length) {\n            res.writeBit(this.readBit());\n        }\n        return res;\n    }\n    readAddress() {\n        let type = this.readUintNumber(2);\n        if (type === 0) {\n            return null;\n        }\n        if (type !== 2) {\n            throw Error('Only STD address supported');\n        }\n        if (this.readUintNumber(1) !== 0) {\n            throw Error('Only STD address supported');\n        }\n        const wc = this.readIntNumber(8);\n        const hash = this.readBuffer(32);\n        return new __1.Address(wc, hash);\n    }\n    getBit(n) {\n        if (n >= this.length || n < 0) {\n            throw Error('Out of range');\n        }\n        return (this.buffer[(n / 8) | 0] & (1 << (7 - (n % 8)))) > 0;\n    }\n}\nexports.BitStringReader = BitStringReader;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = exports.sha256_fallback = exports.sha256_sync = void 0;\nconst jssha_1 = __importDefault(require(\"jssha\"));\nconst ton_crypto_primitives_1 = require(\"ton-crypto-primitives\");\nfunction sha256_sync(source) {\n    let src;\n    if (typeof source === 'string') {\n        src = Buffer.from(source, 'utf-8').toString('hex');\n    }\n    else {\n        src = source.toString('hex');\n    }\n    let hasher = new jssha_1.default('SHA-256', 'HEX');\n    hasher.update(src);\n    let res = hasher.getHash('HEX');\n    return Buffer.from(res, 'hex');\n}\nexports.sha256_sync = sha256_sync;\nasync function sha256_fallback(source) {\n    return sha256_sync(source);\n}\nexports.sha256_fallback = sha256_fallback;\nfunction sha256(source) {\n    return (0, ton_crypto_primitives_1.sha256)(source);\n}\nexports.sha256 = sha256;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha512 = exports.sha512_fallback = exports.sha512_sync = void 0;\nconst jssha_1 = __importDefault(require(\"jssha\"));\nconst ton_crypto_primitives_1 = require(\"ton-crypto-primitives\");\nfunction sha512_sync(source) {\n    let src;\n    if (typeof source === 'string') {\n        src = Buffer.from(source, 'utf-8').toString('hex');\n    }\n    else {\n        src = source.toString('hex');\n    }\n    let hasher = new jssha_1.default('SHA-512', 'HEX');\n    hasher.update(src);\n    let res = hasher.getHash('HEX');\n    return Buffer.from(res, 'hex');\n}\nexports.sha512_sync = sha512_sync;\nasync function sha512_fallback(source) {\n    return sha512_sync(source);\n}\nexports.sha512_fallback = sha512_fallback;\nasync function sha512(source) {\n    return (0, ton_crypto_primitives_1.sha512)(source);\n}\nexports.sha512 = sha512;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pbkdf2_sha512 = void 0;\nconst ton_crypto_primitives_1 = require(\"ton-crypto-primitives\");\nfunction pbkdf2_sha512(key, salt, iterations, keyLen) {\n    return (0, ton_crypto_primitives_1.pbkdf2_sha512)(key, salt, iterations, keyLen);\n}\nexports.pbkdf2_sha512 = pbkdf2_sha512;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac_sha512 = exports.hmac_sha512_fallback = void 0;\nconst jssha_1 = __importDefault(require(\"jssha\"));\nconst ton_crypto_primitives_1 = require(\"ton-crypto-primitives\");\nasync function hmac_sha512_fallback(key, data) {\n    let keyBuffer = typeof key === 'string' ? Buffer.from(key, 'utf-8') : key;\n    let dataBuffer = typeof data === 'string' ? Buffer.from(data, 'utf-8') : data;\n    const shaObj = new jssha_1.default(\"SHA-512\", \"HEX\", {\n        hmacKey: { value: keyBuffer.toString('hex'), format: \"HEX\" },\n    });\n    shaObj.update(dataBuffer.toString('hex'));\n    const hmac = shaObj.getHash(\"HEX\");\n    return Buffer.from(hmac, 'hex');\n}\nexports.hmac_sha512_fallback = hmac_sha512_fallback;\nfunction hmac_sha512(key, data) {\n    return (0, ton_crypto_primitives_1.hmac_sha512)(key, data);\n}\nexports.hmac_sha512 = hmac_sha512;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSecureRandomNumber = exports.getSecureRandomWords = exports.getSecureRandomBytes = void 0;\nconst ton_crypto_primitives_1 = require(\"ton-crypto-primitives\");\nasync function getSecureRandomBytes(size) {\n    return (0, ton_crypto_primitives_1.getSecureRandomBytes)(size);\n}\nexports.getSecureRandomBytes = getSecureRandomBytes;\nasync function getSecureRandomWords(size) {\n    return getSecureRandomWords(size);\n}\nexports.getSecureRandomWords = getSecureRandomWords;\nasync function getSecureRandomNumber(min, max) {\n    let range = max - min;\n    var bitsNeeded = Math.ceil(Math.log2(range));\n    if (bitsNeeded > 53) {\n        throw new Error('Range is too large');\n    }\n    var bytesNeeded = Math.ceil(bitsNeeded / 8);\n    var mask = Math.pow(2, bitsNeeded) - 1;\n    while (true) {\n        let res = await getSecureRandomBytes(bitsNeeded);\n        let power = (bytesNeeded - 1) * 8;\n        let numberValue = 0;\n        for (var i = 0; i < bytesNeeded; i++) {\n            numberValue += res[i] * Math.pow(2, power);\n            power -= 8;\n        }\n        numberValue = numberValue & mask; // Truncate\n        if (numberValue >= range) {\n            continue;\n        }\n        return min + numberValue;\n    }\n}\nexports.getSecureRandomNumber = getSecureRandomNumber;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlist = void 0;\nconst EN = ['abandon', 'ability', 'able', 'about', 'above', 'absent', 'absorb', 'abstract', 'absurd', 'abuse', 'access', 'accident', 'account', 'accuse', 'achieve', 'acid', 'acoustic', 'acquire', 'across', 'act', 'action', 'actor', 'actress', 'actual', 'adapt', 'add', 'addict', 'address', 'adjust', 'admit', 'adult', 'advance', 'advice', 'aerobic', 'affair', 'afford', 'afraid', 'again', 'age', 'agent', 'agree', 'ahead', 'aim', 'air', 'airport', 'aisle', 'alarm', 'album', 'alcohol', 'alert', 'alien', 'all', 'alley', 'allow', 'almost', 'alone', 'alpha', 'already', 'also', 'alter', 'always', 'amateur', 'amazing', 'among', 'amount', 'amused', 'analyst', 'anchor', 'ancient', 'anger', 'angle', 'angry', 'animal', 'ankle', 'announce', 'annual', 'another', 'answer', 'antenna', 'antique', 'anxiety', 'any', 'apart', 'apology', 'appear', 'apple', 'approve', 'april', 'arch', 'arctic', 'area', 'arena', 'argue', 'arm', 'armed', 'armor', 'army', 'around', 'arrange', 'arrest', 'arrive', 'arrow', 'art', 'artefact', 'artist', 'artwork', 'ask', 'aspect', 'assault', 'asset', 'assist', 'assume', 'asthma', 'athlete', 'atom', 'attack', 'attend', 'attitude', 'attract', 'auction', 'audit', 'august', 'aunt', 'author', 'auto', 'autumn', 'average', 'avocado', 'avoid', 'awake', 'aware', 'away', 'awesome', 'awful', 'awkward', 'axis',\n    'baby', 'bachelor', 'bacon', 'badge', 'bag', 'balance', 'balcony', 'ball', 'bamboo', 'banana', 'banner', 'bar', 'barely', 'bargain', 'barrel', 'base', 'basic', 'basket', 'battle', 'beach', 'bean', 'beauty', 'because', 'become', 'beef', 'before', 'begin', 'behave', 'behind', 'believe', 'below', 'belt', 'bench', 'benefit', 'best', 'betray', 'better', 'between', 'beyond', 'bicycle', 'bid', 'bike', 'bind', 'biology', 'bird', 'birth', 'bitter', 'black', 'blade', 'blame', 'blanket', 'blast', 'bleak', 'bless', 'blind', 'blood', 'blossom', 'blouse', 'blue', 'blur', 'blush', 'board', 'boat', 'body', 'boil', 'bomb', 'bone', 'bonus', 'book', 'boost', 'border', 'boring', 'borrow', 'boss', 'bottom', 'bounce', 'box', 'boy', 'bracket', 'brain', 'brand', 'brass', 'brave', 'bread', 'breeze', 'brick', 'bridge', 'brief', 'bright', 'bring', 'brisk', 'broccoli', 'broken', 'bronze', 'broom', 'brother', 'brown', 'brush', 'bubble', 'buddy', 'budget', 'buffalo', 'build', 'bulb', 'bulk', 'bullet', 'bundle', 'bunker', 'burden', 'burger', 'burst', 'bus', 'business', 'busy', 'butter', 'buyer', 'buzz',\n    'cabbage', 'cabin', 'cable', 'cactus', 'cage', 'cake', 'call', 'calm', 'camera', 'camp', 'can', 'canal', 'cancel', 'candy', 'cannon', 'canoe', 'canvas', 'canyon', 'capable', 'capital', 'captain', 'car', 'carbon', 'card', 'cargo', 'carpet', 'carry', 'cart', 'case', 'cash', 'casino', 'castle', 'casual', 'cat', 'catalog', 'catch', 'category', 'cattle', 'caught', 'cause', 'caution', 'cave', 'ceiling', 'celery', 'cement', 'census', 'century', 'cereal', 'certain', 'chair', 'chalk', 'champion', 'change', 'chaos', 'chapter', 'charge', 'chase', 'chat', 'cheap', 'check', 'cheese', 'chef', 'cherry', 'chest', 'chicken', 'chief', 'child', 'chimney', 'choice', 'choose', 'chronic', 'chuckle', 'chunk', 'churn', 'cigar', 'cinnamon', 'circle', 'citizen', 'city', 'civil', 'claim', 'clap', 'clarify', 'claw', 'clay', 'clean', 'clerk', 'clever', 'click', 'client', 'cliff', 'climb', 'clinic', 'clip', 'clock', 'clog', 'close', 'cloth', 'cloud', 'clown', 'club', 'clump', 'cluster', 'clutch', 'coach', 'coast', 'coconut', 'code', 'coffee', 'coil', 'coin', 'collect', 'color', 'column', 'combine', 'come', 'comfort', 'comic', 'common', 'company', 'concert', 'conduct', 'confirm', 'congress', 'connect', 'consider', 'control', 'convince', 'cook', 'cool', 'copper', 'copy', 'coral', 'core', 'corn', 'correct', 'cost', 'cotton', 'couch', 'country', 'couple', 'course', 'cousin', 'cover', 'coyote', 'crack', 'cradle', 'craft', 'cram', 'crane', 'crash', 'crater', 'crawl', 'crazy', 'cream', 'credit', 'creek', 'crew', 'cricket', 'crime', 'crisp', 'critic', 'crop', 'cross', 'crouch', 'crowd', 'crucial', 'cruel', 'cruise', 'crumble', 'crunch', 'crush', 'cry', 'crystal', 'cube', 'culture', 'cup', 'cupboard', 'curious', 'current', 'curtain', 'curve', 'cushion', 'custom', 'cute', 'cycle',\n    'dad', 'damage', 'damp', 'dance', 'danger', 'daring', 'dash', 'daughter', 'dawn', 'day', 'deal', 'debate', 'debris', 'decade', 'december', 'decide', 'decline', 'decorate', 'decrease', 'deer', 'defense', 'define', 'defy', 'degree', 'delay', 'deliver', 'demand', 'demise', 'denial', 'dentist', 'deny', 'depart', 'depend', 'deposit', 'depth', 'deputy', 'derive', 'describe', 'desert', 'design', 'desk', 'despair', 'destroy', 'detail', 'detect', 'develop', 'device', 'devote', 'diagram', 'dial', 'diamond', 'diary', 'dice', 'diesel', 'diet', 'differ', 'digital', 'dignity', 'dilemma', 'dinner', 'dinosaur', 'direct', 'dirt', 'disagree', 'discover', 'disease', 'dish', 'dismiss', 'disorder', 'display', 'distance', 'divert', 'divide', 'divorce', 'dizzy', 'doctor', 'document', 'dog', 'doll', 'dolphin', 'domain', 'donate', 'donkey', 'donor', 'door', 'dose', 'double', 'dove', 'draft', 'dragon', 'drama', 'drastic', 'draw', 'dream', 'dress', 'drift', 'drill', 'drink', 'drip', 'drive', 'drop', 'drum', 'dry', 'duck', 'dumb', 'dune', 'during', 'dust', 'dutch', 'duty', 'dwarf', 'dynamic',\n    'eager', 'eagle', 'early', 'earn', 'earth', 'easily', 'east', 'easy', 'echo', 'ecology', 'economy', 'edge', 'edit', 'educate', 'effort', 'egg', 'eight', 'either', 'elbow', 'elder', 'electric', 'elegant', 'element', 'elephant', 'elevator', 'elite', 'else', 'embark', 'embody', 'embrace', 'emerge', 'emotion', 'employ', 'empower', 'empty', 'enable', 'enact', 'end', 'endless', 'endorse', 'enemy', 'energy', 'enforce', 'engage', 'engine', 'enhance', 'enjoy', 'enlist', 'enough', 'enrich', 'enroll', 'ensure', 'enter', 'entire', 'entry', 'envelope', 'episode', 'equal', 'equip', 'era', 'erase', 'erode', 'erosion', 'error', 'erupt', 'escape', 'essay', 'essence', 'estate', 'eternal', 'ethics', 'evidence', 'evil', 'evoke', 'evolve', 'exact', 'example', 'excess', 'exchange', 'excite', 'exclude', 'excuse', 'execute', 'exercise', 'exhaust', 'exhibit', 'exile', 'exist', 'exit', 'exotic', 'expand', 'expect', 'expire', 'explain', 'expose', 'express', 'extend', 'extra', 'eye', 'eyebrow',\n    'fabric', 'face', 'faculty', 'fade', 'faint', 'faith', 'fall', 'false', 'fame', 'family', 'famous', 'fan', 'fancy', 'fantasy', 'farm', 'fashion', 'fat', 'fatal', 'father', 'fatigue', 'fault', 'favorite', 'feature', 'february', 'federal', 'fee', 'feed', 'feel', 'female', 'fence', 'festival', 'fetch', 'fever', 'few', 'fiber', 'fiction', 'field', 'figure', 'file', 'film', 'filter', 'final', 'find', 'fine', 'finger', 'finish', 'fire', 'firm', 'first', 'fiscal', 'fish', 'fit', 'fitness', 'fix', 'flag', 'flame', 'flash', 'flat', 'flavor', 'flee', 'flight', 'flip', 'float', 'flock', 'floor', 'flower', 'fluid', 'flush', 'fly', 'foam', 'focus', 'fog', 'foil', 'fold', 'follow', 'food', 'foot', 'force', 'forest', 'forget', 'fork', 'fortune', 'forum', 'forward', 'fossil', 'foster', 'found', 'fox', 'fragile', 'frame', 'frequent', 'fresh', 'friend', 'fringe', 'frog', 'front', 'frost', 'frown', 'frozen', 'fruit', 'fuel', 'fun', 'funny', 'furnace', 'fury', 'future',\n    'gadget', 'gain', 'galaxy', 'gallery', 'game', 'gap', 'garage', 'garbage', 'garden', 'garlic', 'garment', 'gas', 'gasp', 'gate', 'gather', 'gauge', 'gaze', 'general', 'genius', 'genre', 'gentle', 'genuine', 'gesture', 'ghost', 'giant', 'gift', 'giggle', 'ginger', 'giraffe', 'girl', 'give', 'glad', 'glance', 'glare', 'glass', 'glide', 'glimpse', 'globe', 'gloom', 'glory', 'glove', 'glow', 'glue', 'goat', 'goddess', 'gold', 'good', 'goose', 'gorilla', 'gospel', 'gossip', 'govern', 'gown', 'grab', 'grace', 'grain', 'grant', 'grape', 'grass', 'gravity', 'great', 'green', 'grid', 'grief', 'grit', 'grocery', 'group', 'grow', 'grunt', 'guard', 'guess', 'guide', 'guilt', 'guitar', 'gun', 'gym',\n    'habit', 'hair', 'half', 'hammer', 'hamster', 'hand', 'happy', 'harbor', 'hard', 'harsh', 'harvest', 'hat', 'have', 'hawk', 'hazard', 'head', 'health', 'heart', 'heavy', 'hedgehog', 'height', 'hello', 'helmet', 'help', 'hen', 'hero', 'hidden', 'high', 'hill', 'hint', 'hip', 'hire', 'history', 'hobby', 'hockey', 'hold', 'hole', 'holiday', 'hollow', 'home', 'honey', 'hood', 'hope', 'horn', 'horror', 'horse', 'hospital', 'host', 'hotel', 'hour', 'hover', 'hub', 'huge', 'human', 'humble', 'humor', 'hundred', 'hungry', 'hunt', 'hurdle', 'hurry', 'hurt', 'husband', 'hybrid',\n    'ice', 'icon', 'idea', 'identify', 'idle', 'ignore', 'ill', 'illegal', 'illness', 'image', 'imitate', 'immense', 'immune', 'impact', 'impose', 'improve', 'impulse', 'inch', 'include', 'income', 'increase', 'index', 'indicate', 'indoor', 'industry', 'infant', 'inflict', 'inform', 'inhale', 'inherit', 'initial', 'inject', 'injury', 'inmate', 'inner', 'innocent', 'input', 'inquiry', 'insane', 'insect', 'inside', 'inspire', 'install', 'intact', 'interest', 'into', 'invest', 'invite', 'involve', 'iron', 'island', 'isolate', 'issue', 'item', 'ivory',\n    'jacket', 'jaguar', 'jar', 'jazz', 'jealous', 'jeans', 'jelly', 'jewel', 'job', 'join', 'joke', 'journey', 'joy', 'judge', 'juice', 'jump', 'jungle', 'junior', 'junk', 'just',\n    'kangaroo', 'keen', 'keep', 'ketchup', 'key', 'kick', 'kid', 'kidney', 'kind', 'kingdom', 'kiss', 'kit', 'kitchen', 'kite', 'kitten', 'kiwi', 'knee', 'knife', 'knock', 'know',\n    'lab', 'label', 'labor', 'ladder', 'lady', 'lake', 'lamp', 'language', 'laptop', 'large', 'later', 'latin', 'laugh', 'laundry', 'lava', 'law', 'lawn', 'lawsuit', 'layer', 'lazy', 'leader', 'leaf', 'learn', 'leave', 'lecture', 'left', 'leg', 'legal', 'legend', 'leisure', 'lemon', 'lend', 'length', 'lens', 'leopard', 'lesson', 'letter', 'level', 'liar', 'liberty', 'library', 'license', 'life', 'lift', 'light', 'like', 'limb', 'limit', 'link', 'lion', 'liquid', 'list', 'little', 'live', 'lizard', 'load', 'loan', 'lobster', 'local', 'lock', 'logic', 'lonely', 'long', 'loop', 'lottery', 'loud', 'lounge', 'love', 'loyal', 'lucky', 'luggage', 'lumber', 'lunar', 'lunch', 'luxury', 'lyrics',\n    'machine', 'mad', 'magic', 'magnet', 'maid', 'mail', 'main', 'major', 'make', 'mammal', 'man', 'manage', 'mandate', 'mango', 'mansion', 'manual', 'maple', 'marble', 'march', 'margin', 'marine', 'market', 'marriage', 'mask', 'mass', 'master', 'match', 'material', 'math', 'matrix', 'matter', 'maximum', 'maze', 'meadow', 'mean', 'measure', 'meat', 'mechanic', 'medal', 'media', 'melody', 'melt', 'member', 'memory', 'mention', 'menu', 'mercy', 'merge', 'merit', 'merry', 'mesh', 'message', 'metal', 'method', 'middle', 'midnight', 'milk', 'million', 'mimic', 'mind', 'minimum', 'minor', 'minute', 'miracle', 'mirror', 'misery', 'miss', 'mistake', 'mix', 'mixed', 'mixture', 'mobile', 'model', 'modify', 'mom', 'moment', 'monitor', 'monkey', 'monster', 'month', 'moon', 'moral', 'more', 'morning', 'mosquito', 'mother', 'motion', 'motor', 'mountain', 'mouse', 'move', 'movie', 'much', 'muffin', 'mule', 'multiply', 'muscle', 'museum', 'mushroom', 'music', 'must', 'mutual', 'myself', 'mystery', 'myth',\n    'naive', 'name', 'napkin', 'narrow', 'nasty', 'nation', 'nature', 'near', 'neck', 'need', 'negative', 'neglect', 'neither', 'nephew', 'nerve', 'nest', 'net', 'network', 'neutral', 'never', 'news', 'next', 'nice', 'night', 'noble', 'noise', 'nominee', 'noodle', 'normal', 'north', 'nose', 'notable', 'note', 'nothing', 'notice', 'novel', 'now', 'nuclear', 'number', 'nurse', 'nut',\n    'oak', 'obey', 'object', 'oblige', 'obscure', 'observe', 'obtain', 'obvious', 'occur', 'ocean', 'october', 'odor', 'off', 'offer', 'office', 'often', 'oil', 'okay', 'old', 'olive', 'olympic', 'omit', 'once', 'one', 'onion', 'online', 'only', 'open', 'opera', 'opinion', 'oppose', 'option', 'orange', 'orbit', 'orchard', 'order', 'ordinary', 'organ', 'orient', 'original', 'orphan', 'ostrich', 'other', 'outdoor', 'outer', 'output', 'outside', 'oval', 'oven', 'over', 'own', 'owner', 'oxygen', 'oyster', 'ozone',\n    'pact', 'paddle', 'page', 'pair', 'palace', 'palm', 'panda', 'panel', 'panic', 'panther', 'paper', 'parade', 'parent', 'park', 'parrot', 'party', 'pass', 'patch', 'path', 'patient', 'patrol', 'pattern', 'pause', 'pave', 'payment', 'peace', 'peanut', 'pear', 'peasant', 'pelican', 'pen', 'penalty', 'pencil', 'people', 'pepper', 'perfect', 'permit', 'person', 'pet', 'phone', 'photo', 'phrase', 'physical', 'piano', 'picnic', 'picture', 'piece', 'pig', 'pigeon', 'pill', 'pilot', 'pink', 'pioneer', 'pipe', 'pistol', 'pitch', 'pizza', 'place', 'planet', 'plastic', 'plate', 'play', 'please', 'pledge', 'pluck', 'plug', 'plunge', 'poem', 'poet', 'point', 'polar', 'pole', 'police', 'pond', 'pony', 'pool', 'popular', 'portion', 'position', 'possible', 'post', 'potato', 'pottery', 'poverty', 'powder', 'power', 'practice', 'praise', 'predict', 'prefer', 'prepare', 'present', 'pretty', 'prevent', 'price', 'pride', 'primary', 'print', 'priority', 'prison', 'private', 'prize', 'problem', 'process', 'produce', 'profit', 'program', 'project', 'promote', 'proof', 'property', 'prosper', 'protect', 'proud', 'provide', 'public', 'pudding', 'pull', 'pulp', 'pulse', 'pumpkin', 'punch', 'pupil', 'puppy', 'purchase', 'purity', 'purpose', 'purse', 'push', 'put', 'puzzle', 'pyramid',\n    'quality', 'quantum', 'quarter', 'question', 'quick', 'quit', 'quiz', 'quote',\n    'rabbit', 'raccoon', 'race', 'rack', 'radar', 'radio', 'rail', 'rain', 'raise', 'rally', 'ramp', 'ranch', 'random', 'range', 'rapid', 'rare', 'rate', 'rather', 'raven', 'raw', 'razor', 'ready', 'real', 'reason', 'rebel', 'rebuild', 'recall', 'receive', 'recipe', 'record', 'recycle', 'reduce', 'reflect', 'reform', 'refuse', 'region', 'regret', 'regular', 'reject', 'relax', 'release', 'relief', 'rely', 'remain', 'remember', 'remind', 'remove', 'render', 'renew', 'rent', 'reopen', 'repair', 'repeat', 'replace', 'report', 'require', 'rescue', 'resemble', 'resist', 'resource', 'response', 'result', 'retire', 'retreat', 'return', 'reunion', 'reveal', 'review', 'reward', 'rhythm', 'rib', 'ribbon', 'rice', 'rich', 'ride', 'ridge', 'rifle', 'right', 'rigid', 'ring', 'riot', 'ripple', 'risk', 'ritual', 'rival', 'river', 'road', 'roast', 'robot', 'robust', 'rocket', 'romance', 'roof', 'rookie', 'room', 'rose', 'rotate', 'rough', 'round', 'route', 'royal', 'rubber', 'rude', 'rug', 'rule', 'run', 'runway', 'rural',\n    'sad', 'saddle', 'sadness', 'safe', 'sail', 'salad', 'salmon', 'salon', 'salt', 'salute', 'same', 'sample', 'sand', 'satisfy', 'satoshi', 'sauce', 'sausage', 'save', 'say', 'scale', 'scan', 'scare', 'scatter', 'scene', 'scheme', 'school', 'science', 'scissors', 'scorpion', 'scout', 'scrap', 'screen', 'script', 'scrub', 'sea', 'search', 'season', 'seat', 'second', 'secret', 'section', 'security', 'seed', 'seek', 'segment', 'select', 'sell', 'seminar', 'senior', 'sense', 'sentence', 'series', 'service', 'session', 'settle', 'setup', 'seven', 'shadow', 'shaft', 'shallow', 'share', 'shed', 'shell', 'sheriff', 'shield', 'shift', 'shine', 'ship', 'shiver', 'shock', 'shoe', 'shoot', 'shop', 'short', 'shoulder', 'shove', 'shrimp', 'shrug', 'shuffle', 'shy', 'sibling', 'sick', 'side', 'siege', 'sight', 'sign', 'silent', 'silk', 'silly', 'silver', 'similar', 'simple', 'since', 'sing', 'siren', 'sister', 'situate', 'six', 'size', 'skate', 'sketch', 'ski', 'skill', 'skin', 'skirt', 'skull', 'slab', 'slam', 'sleep', 'slender', 'slice', 'slide', 'slight', 'slim', 'slogan', 'slot', 'slow', 'slush', 'small', 'smart', 'smile', 'smoke', 'smooth', 'snack', 'snake', 'snap', 'sniff', 'snow', 'soap', 'soccer', 'social', 'sock', 'soda', 'soft', 'solar', 'soldier', 'solid', 'solution', 'solve', 'someone', 'song', 'soon', 'sorry', 'sort', 'soul', 'sound', 'soup', 'source', 'south', 'space', 'spare', 'spatial', 'spawn', 'speak', 'special', 'speed', 'spell', 'spend', 'sphere', 'spice', 'spider', 'spike', 'spin', 'spirit', 'split', 'spoil', 'sponsor', 'spoon', 'sport', 'spot', 'spray', 'spread', 'spring', 'spy', 'square', 'squeeze', 'squirrel', 'stable', 'stadium', 'staff', 'stage', 'stairs', 'stamp', 'stand', 'start', 'state', 'stay', 'steak', 'steel', 'stem', 'step', 'stereo', 'stick', 'still', 'sting', 'stock', 'stomach', 'stone', 'stool', 'story', 'stove', 'strategy', 'street', 'strike', 'strong', 'struggle', 'student', 'stuff', 'stumble', 'style', 'subject', 'submit', 'subway', 'success', 'such', 'sudden', 'suffer', 'sugar', 'suggest', 'suit', 'summer', 'sun', 'sunny', 'sunset', 'super', 'supply', 'supreme', 'sure', 'surface', 'surge', 'surprise', 'surround', 'survey', 'suspect', 'sustain', 'swallow', 'swamp', 'swap', 'swarm', 'swear', 'sweet', 'swift', 'swim', 'swing', 'switch', 'sword', 'symbol', 'symptom', 'syrup', 'system',\n    'table', 'tackle', 'tag', 'tail', 'talent', 'talk', 'tank', 'tape', 'target', 'task', 'taste', 'tattoo', 'taxi', 'teach', 'team', 'tell', 'ten', 'tenant', 'tennis', 'tent', 'term', 'test', 'text', 'thank', 'that', 'theme', 'then', 'theory', 'there', 'they', 'thing', 'this', 'thought', 'three', 'thrive', 'throw', 'thumb', 'thunder', 'ticket', 'tide', 'tiger', 'tilt', 'timber', 'time', 'tiny', 'tip', 'tired', 'tissue', 'title', 'toast', 'tobacco', 'today', 'toddler', 'toe', 'together', 'toilet', 'token', 'tomato', 'tomorrow', 'tone', 'tongue', 'tonight', 'tool', 'tooth', 'top', 'topic', 'topple', 'torch', 'tornado', 'tortoise', 'toss', 'total', 'tourist', 'toward', 'tower', 'town', 'toy', 'track', 'trade', 'traffic', 'tragic', 'train', 'transfer', 'trap', 'trash', 'travel', 'tray', 'treat', 'tree', 'trend', 'trial', 'tribe', 'trick', 'trigger', 'trim', 'trip', 'trophy', 'trouble', 'truck', 'true', 'truly', 'trumpet', 'trust', 'truth', 'try', 'tube', 'tuition', 'tumble', 'tuna', 'tunnel', 'turkey', 'turn', 'turtle', 'twelve', 'twenty', 'twice', 'twin', 'twist', 'two', 'type', 'typical',\n    'ugly', 'umbrella', 'unable', 'unaware', 'uncle', 'uncover', 'under', 'undo', 'unfair', 'unfold', 'unhappy', 'uniform', 'unique', 'unit', 'universe', 'unknown', 'unlock', 'until', 'unusual', 'unveil', 'update', 'upgrade', 'uphold', 'upon', 'upper', 'upset', 'urban', 'urge', 'usage', 'use', 'used', 'useful', 'useless', 'usual', 'utility',\n    'vacant', 'vacuum', 'vague', 'valid', 'valley', 'valve', 'van', 'vanish', 'vapor', 'various', 'vast', 'vault', 'vehicle', 'velvet', 'vendor', 'venture', 'venue', 'verb', 'verify', 'version', 'very', 'vessel', 'veteran', 'viable', 'vibrant', 'vicious', 'victory', 'video', 'view', 'village', 'vintage', 'violin', 'virtual', 'virus', 'visa', 'visit', 'visual', 'vital', 'vivid', 'vocal', 'voice', 'void', 'volcano', 'volume', 'vote', 'voyage',\n    'wage', 'wagon', 'wait', 'walk', 'wall', 'walnut', 'want', 'warfare', 'warm', 'warrior', 'wash', 'wasp', 'waste', 'water', 'wave', 'way', 'wealth', 'weapon', 'wear', 'weasel', 'weather', 'web', 'wedding', 'weekend', 'weird', 'welcome', 'west', 'wet', 'whale', 'what', 'wheat', 'wheel', 'when', 'where', 'whip', 'whisper', 'wide', 'width', 'wife', 'wild', 'will', 'win', 'window', 'wine', 'wing', 'wink', 'winner', 'winter', 'wire', 'wisdom', 'wise', 'wish', 'witness', 'wolf', 'woman', 'wonder', 'wood', 'wool', 'word', 'work', 'world', 'worry', 'worth', 'wrap', 'wreck', 'wrestle', 'wrist', 'write', 'wrong',\n    'yard', 'year', 'yellow', 'you', 'young', 'youth',\n    'zebra', 'zero', 'zone', 'zoo'];\nexports.wordlist = EN;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mnemonicNew = exports.mnemonicValidate = exports.mnemonicToWalletKey = exports.mnemonicToPrivateKey = exports.mnemonicToSeed = exports.mnemonicToEntropy = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst getSecureRandom_1 = require(\"../primitives/getSecureRandom\");\nconst hmac_sha512_1 = require(\"../primitives/hmac_sha512\");\nconst pbkdf2_sha512_1 = require(\"../primitives/pbkdf2_sha512\");\nconst wordlist_1 = require(\"./wordlist\");\nconst PBKDF_ITERATIONS = 100000;\nasync function isPasswordNeeded(mnemonicArray) {\n    const passlessEntropy = await mnemonicToEntropy(mnemonicArray);\n    return (await isPasswordSeed(passlessEntropy)) && !(await isBasicSeed(passlessEntropy));\n}\nfunction normalizeMnemonic(src) {\n    return src.map((v) => v.toLowerCase().trim());\n}\nasync function isBasicSeed(entropy) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L68\n    // bool Mnemonic::is_basic_seed() {\n    //   td::SecureString hash(64);\n    //   td::pbkdf2_sha512(as_slice(to_entropy()), \"TON seed version\", td::max(1, PBKDF_ITERATIONS / 256),\n    //                     hash.as_mutable_slice());\n    //   return hash.as_slice()[0] == 0;\n    // }\n    const seed = await (0, pbkdf2_sha512_1.pbkdf2_sha512)(entropy, 'TON seed version', Math.max(1, Math.floor(PBKDF_ITERATIONS / 256)), 64);\n    return seed[0] == 0;\n}\nasync function isPasswordSeed(entropy) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L75\n    // bool Mnemonic::is_password_seed() {\n    //   td::SecureString hash(64);\n    //   td::pbkdf2_sha512(as_slice(to_entropy()), \"TON fast seed version\", 1, hash.as_mutable_slice());\n    //   return hash.as_slice()[0] == 1;\n    // }\n    const seed = await (0, pbkdf2_sha512_1.pbkdf2_sha512)(entropy, 'TON fast seed version', 1, 64);\n    return seed[0] == 1;\n}\nasync function mnemonicToEntropy(mnemonicArray, password) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L52\n    // td::SecureString Mnemonic::to_entropy() const {\n    //   td::SecureString res(64);\n    //   td::hmac_sha512(join(words_), password_, res.as_mutable_slice());\n    //   return res;\n    // }\n    return await (0, hmac_sha512_1.hmac_sha512)(mnemonicArray.join(' '), password && password.length > 0 ? password : '');\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\nasync function mnemonicToSeed(mnemonicArray, seed, password) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L58\n    // td::SecureString Mnemonic::to_seed() const {\n    //   td::SecureString hash(64);\n    //   td::pbkdf2_sha512(as_slice(to_entropy()), \"TON default seed\", PBKDF_ITERATIONS, hash.as_mutable_slice());\n    //   return hash;\n    // }\n    const entropy = await mnemonicToEntropy(mnemonicArray, password);\n    const res = await (0, pbkdf2_sha512_1.pbkdf2_sha512)(entropy, seed, PBKDF_ITERATIONS, 64);\n    return res.slice(0, 32);\n}\nexports.mnemonicToSeed = mnemonicToSeed;\n/**\n * Extract private key from mnemonic\n * @param mnemonicArray mnemonic array\n * @param password mnemonic password\n * @returns Key Pair\n */\nasync function mnemonicToPrivateKey(mnemonicArray, password) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L64\n    // td::Ed25519::PrivateKey Mnemonic::to_private_key() const {\n    //   return td::Ed25519::PrivateKey(td::SecureString(as_slice(to_seed()).substr(0, td::Ed25519::PrivateKey::LENGTH)));\n    // }\n    mnemonicArray = normalizeMnemonic(mnemonicArray);\n    const seed = (await mnemonicToSeed(mnemonicArray, 'TON default seed', password));\n    let keyPair = tweetnacl_1.default.sign.keyPair.fromSeed(seed);\n    return {\n        publicKey: Buffer.from(keyPair.publicKey),\n        secretKey: Buffer.from(keyPair.secretKey)\n    };\n}\nexports.mnemonicToPrivateKey = mnemonicToPrivateKey;\n/**\n * Convert mnemonic to wallet key pair\n * @param mnemonicArray mnemonic array\n * @param password mnemonic password\n * @returns Key Pair\n */\nasync function mnemonicToWalletKey(mnemonicArray, password) {\n    let seedPk = await mnemonicToPrivateKey(mnemonicArray, password);\n    let seedSecret = seedPk.secretKey.slice(0, 32);\n    const keyPair = tweetnacl_1.default.sign.keyPair.fromSeed(seedSecret);\n    return {\n        publicKey: Buffer.from(keyPair.publicKey),\n        secretKey: Buffer.from(keyPair.secretKey)\n    };\n}\nexports.mnemonicToWalletKey = mnemonicToWalletKey;\n/**\n * Validate Mnemonic\n * @param mnemonicArray mnemonic array\n * @param password mnemonic password\n * @returns true for valid mnemonic\n */\nasync function mnemonicValidate(mnemonicArray, password) {\n    // Normalize\n    mnemonicArray = normalizeMnemonic(mnemonicArray);\n    // Validate mnemonic words\n    for (let word of mnemonicArray) {\n        if (wordlist_1.wordlist.indexOf(word) < 0) {\n            return false;\n        }\n    }\n    // Check password\n    if (password && password.length > 0) {\n        if (!await isPasswordNeeded(mnemonicArray)) {\n            return false;\n        }\n    }\n    // Validate seed\n    return await isBasicSeed(await mnemonicToEntropy(mnemonicArray, password));\n}\nexports.mnemonicValidate = mnemonicValidate;\n/**\n * Generate new Mnemonic\n * @param wordsCount number of words to generate\n * @param password mnemonic password\n * @returns\n */\nasync function mnemonicNew(wordsCount = 24, password) {\n    // https://github.com/ton-blockchain/ton/blob/24dc184a2ea67f9c47042b4104bbb4d82289fac1/tonlib/tonlib/keys/Mnemonic.cpp#L159\n    let mnemonicArray = [];\n    while (true) {\n        // Regenerate new mnemonics\n        mnemonicArray = [];\n        for (let i = 0; i < wordsCount; i++) {\n            let ind = await (0, getSecureRandom_1.getSecureRandomNumber)(0, wordlist_1.wordlist.length);\n            mnemonicArray.push(wordlist_1.wordlist[ind]);\n        }\n        // Chek password conformance\n        if (password && password.length > 0) {\n            if (!await isPasswordNeeded(mnemonicArray)) {\n                continue;\n            }\n        }\n        // Check if basic seed correct\n        if (!(await isBasicSeed(await mnemonicToEntropy(mnemonicArray, password)))) {\n            continue;\n        }\n        break;\n    }\n    return mnemonicArray;\n}\nexports.mnemonicNew = mnemonicNew;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.openBox = exports.sealBox = exports.signVerify = exports.sign = exports.keyPairFromSeed = exports.keyPairFromSecretKey = void 0;\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nfunction keyPairFromSecretKey(secretKey) {\n    let res = tweetnacl_1.default.sign.keyPair.fromSecretKey(new Uint8Array(secretKey));\n    return {\n        publicKey: Buffer.from(res.publicKey),\n        secretKey: Buffer.from(res.secretKey),\n    };\n}\nexports.keyPairFromSecretKey = keyPairFromSecretKey;\nfunction keyPairFromSeed(secretKey) {\n    let res = tweetnacl_1.default.sign.keyPair.fromSeed(new Uint8Array(secretKey));\n    return {\n        publicKey: Buffer.from(res.publicKey),\n        secretKey: Buffer.from(res.secretKey),\n    };\n}\nexports.keyPairFromSeed = keyPairFromSeed;\nfunction sign(data, secretKey) {\n    return Buffer.from(tweetnacl_1.default.sign.detached(new Uint8Array(data), new Uint8Array(secretKey)));\n}\nexports.sign = sign;\nfunction signVerify(data, signature, publicKey) {\n    return tweetnacl_1.default.sign.detached.verify(new Uint8Array(data), new Uint8Array(signature), new Uint8Array(publicKey));\n}\nexports.signVerify = signVerify;\nfunction sealBox(data, nonce, key) {\n    return Buffer.from(tweetnacl_1.default.secretbox(data, nonce, key));\n}\nexports.sealBox = sealBox;\nfunction openBox(data, nonce, key) {\n    let res = tweetnacl_1.default.secretbox.open(data, nonce, key);\n    if (!res) {\n        return null;\n    }\n    return Buffer.from(res);\n}\nexports.openBox = openBox;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlist = void 0;\n// Source https://www.eff.org/dice\nexports.wordlist = [\n    'abacus',\n    'abdomen',\n    'abdominal',\n    'abide',\n    'abiding',\n    'ability',\n    'ablaze',\n    'able',\n    'abnormal',\n    'abrasion',\n    'abrasive',\n    'abreast',\n    'abridge',\n    'abroad',\n    'abruptly',\n    'absence',\n    'absentee',\n    'absently',\n    'absinthe',\n    'absolute',\n    'absolve',\n    'abstain',\n    'abstract',\n    'absurd',\n    'accent',\n    'acclaim',\n    'acclimate',\n    'accompany',\n    'account',\n    'accuracy',\n    'accurate',\n    'accustom',\n    'acetone',\n    'achiness',\n    'aching',\n    'acid',\n    'acorn',\n    'acquaint',\n    'acquire',\n    'acre',\n    'acrobat',\n    'acronym',\n    'acting',\n    'action',\n    'activate',\n    'activator',\n    'active',\n    'activism',\n    'activist',\n    'activity',\n    'actress',\n    'acts',\n    'acutely',\n    'acuteness',\n    'aeration',\n    'aerobics',\n    'aerosol',\n    'aerospace',\n    'afar',\n    'affair',\n    'affected',\n    'affecting',\n    'affection',\n    'affidavit',\n    'affiliate',\n    'affirm',\n    'affix',\n    'afflicted',\n    'affluent',\n    'afford',\n    'affront',\n    'aflame',\n    'afloat',\n    'aflutter',\n    'afoot',\n    'afraid',\n    'afterglow',\n    'afterlife',\n    'aftermath',\n    'aftermost',\n    'afternoon',\n    'aged',\n    'ageless',\n    'agency',\n    'agenda',\n    'agent',\n    'aggregate',\n    'aghast',\n    'agile',\n    'agility',\n    'aging',\n    'agnostic',\n    'agonize',\n    'agonizing',\n    'agony',\n    'agreeable',\n    'agreeably',\n    'agreed',\n    'agreeing',\n    'agreement',\n    'aground',\n    'ahead',\n    'ahoy',\n    'aide',\n    'aids',\n    'aim',\n    'ajar',\n    'alabaster',\n    'alarm',\n    'albatross',\n    'album',\n    'alfalfa',\n    'algebra',\n    'algorithm',\n    'alias',\n    'alibi',\n    'alienable',\n    'alienate',\n    'aliens',\n    'alike',\n    'alive',\n    'alkaline',\n    'alkalize',\n    'almanac',\n    'almighty',\n    'almost',\n    'aloe',\n    'aloft',\n    'aloha',\n    'alone',\n    'alongside',\n    'aloof',\n    'alphabet',\n    'alright',\n    'although',\n    'altitude',\n    'alto',\n    'aluminum',\n    'alumni',\n    'always',\n    'amaretto',\n    'amaze',\n    'amazingly',\n    'amber',\n    'ambiance',\n    'ambiguity',\n    'ambiguous',\n    'ambition',\n    'ambitious',\n    'ambulance',\n    'ambush',\n    'amendable',\n    'amendment',\n    'amends',\n    'amenity',\n    'amiable',\n    'amicably',\n    'amid',\n    'amigo',\n    'amino',\n    'amiss',\n    'ammonia',\n    'ammonium',\n    'amnesty',\n    'amniotic',\n    'among',\n    'amount',\n    'amperage',\n    'ample',\n    'amplifier',\n    'amplify',\n    'amply',\n    'amuck',\n    'amulet',\n    'amusable',\n    'amused',\n    'amusement',\n    'amuser',\n    'amusing',\n    'anaconda',\n    'anaerobic',\n    'anagram',\n    'anatomist',\n    'anatomy',\n    'anchor',\n    'anchovy',\n    'ancient',\n    'android',\n    'anemia',\n    'anemic',\n    'aneurism',\n    'anew',\n    'angelfish',\n    'angelic',\n    'anger',\n    'angled',\n    'angler',\n    'angles',\n    'angling',\n    'angrily',\n    'angriness',\n    'anguished',\n    'angular',\n    'animal',\n    'animate',\n    'animating',\n    'animation',\n    'animator',\n    'anime',\n    'animosity',\n    'ankle',\n    'annex',\n    'annotate',\n    'announcer',\n    'annoying',\n    'annually',\n    'annuity',\n    'anointer',\n    'another',\n    'answering',\n    'antacid',\n    'antarctic',\n    'anteater',\n    'antelope',\n    'antennae',\n    'anthem',\n    'anthill',\n    'anthology',\n    'antibody',\n    'antics',\n    'antidote',\n    'antihero',\n    'antiquely',\n    'antiques',\n    'antiquity',\n    'antirust',\n    'antitoxic',\n    'antitrust',\n    'antiviral',\n    'antivirus',\n    'antler',\n    'antonym',\n    'antsy',\n    'anvil',\n    'anybody',\n    'anyhow',\n    'anymore',\n    'anyone',\n    'anyplace',\n    'anything',\n    'anytime',\n    'anyway',\n    'anywhere',\n    'aorta',\n    'apache',\n    'apostle',\n    'appealing',\n    'appear',\n    'appease',\n    'appeasing',\n    'appendage',\n    'appendix',\n    'appetite',\n    'appetizer',\n    'applaud',\n    'applause',\n    'apple',\n    'appliance',\n    'applicant',\n    'applied',\n    'apply',\n    'appointee',\n    'appraisal',\n    'appraiser',\n    'apprehend',\n    'approach',\n    'approval',\n    'approve',\n    'apricot',\n    'april',\n    'apron',\n    'aptitude',\n    'aptly',\n    'aqua',\n    'aqueduct',\n    'arbitrary',\n    'arbitrate',\n    'ardently',\n    'area',\n    'arena',\n    'arguable',\n    'arguably',\n    'argue',\n    'arise',\n    'armadillo',\n    'armband',\n    'armchair',\n    'armed',\n    'armful',\n    'armhole',\n    'arming',\n    'armless',\n    'armoire',\n    'armored',\n    'armory',\n    'armrest',\n    'army',\n    'aroma',\n    'arose',\n    'around',\n    'arousal',\n    'arrange',\n    'array',\n    'arrest',\n    'arrival',\n    'arrive',\n    'arrogance',\n    'arrogant',\n    'arson',\n    'art',\n    'ascend',\n    'ascension',\n    'ascent',\n    'ascertain',\n    'ashamed',\n    'ashen',\n    'ashes',\n    'ashy',\n    'aside',\n    'askew',\n    'asleep',\n    'asparagus',\n    'aspect',\n    'aspirate',\n    'aspire',\n    'aspirin',\n    'astonish',\n    'astound',\n    'astride',\n    'astrology',\n    'astronaut',\n    'astronomy',\n    'astute',\n    'atlantic',\n    'atlas',\n    'atom',\n    'atonable',\n    'atop',\n    'atrium',\n    'atrocious',\n    'atrophy',\n    'attach',\n    'attain',\n    'attempt',\n    'attendant',\n    'attendee',\n    'attention',\n    'attentive',\n    'attest',\n    'attic',\n    'attire',\n    'attitude',\n    'attractor',\n    'attribute',\n    'atypical',\n    'auction',\n    'audacious',\n    'audacity',\n    'audible',\n    'audibly',\n    'audience',\n    'audio',\n    'audition',\n    'augmented',\n    'august',\n    'authentic',\n    'author',\n    'autism',\n    'autistic',\n    'autograph',\n    'automaker',\n    'automated',\n    'automatic',\n    'autopilot',\n    'available',\n    'avalanche',\n    'avatar',\n    'avenge',\n    'avenging',\n    'avenue',\n    'average',\n    'aversion',\n    'avert',\n    'aviation',\n    'aviator',\n    'avid',\n    'avoid',\n    'await',\n    'awaken',\n    'award',\n    'aware',\n    'awhile',\n    'awkward',\n    'awning',\n    'awoke',\n    'awry',\n    'axis',\n    'babble',\n    'babbling',\n    'babied',\n    'baboon',\n    'backache',\n    'backboard',\n    'backboned',\n    'backdrop',\n    'backed',\n    'backer',\n    'backfield',\n    'backfire',\n    'backhand',\n    'backing',\n    'backlands',\n    'backlash',\n    'backless',\n    'backlight',\n    'backlit',\n    'backlog',\n    'backpack',\n    'backpedal',\n    'backrest',\n    'backroom',\n    'backshift',\n    'backside',\n    'backslid',\n    'backspace',\n    'backspin',\n    'backstab',\n    'backstage',\n    'backtalk',\n    'backtrack',\n    'backup',\n    'backward',\n    'backwash',\n    'backwater',\n    'backyard',\n    'bacon',\n    'bacteria',\n    'bacterium',\n    'badass',\n    'badge',\n    'badland',\n    'badly',\n    'badness',\n    'baffle',\n    'baffling',\n    'bagel',\n    'bagful',\n    'baggage',\n    'bagged',\n    'baggie',\n    'bagginess',\n    'bagging',\n    'baggy',\n    'bagpipe',\n    'baguette',\n    'baked',\n    'bakery',\n    'bakeshop',\n    'baking',\n    'balance',\n    'balancing',\n    'balcony',\n    'balmy',\n    'balsamic',\n    'bamboo',\n    'banana',\n    'banish',\n    'banister',\n    'banjo',\n    'bankable',\n    'bankbook',\n    'banked',\n    'banker',\n    'banking',\n    'banknote',\n    'bankroll',\n    'banner',\n    'bannister',\n    'banshee',\n    'banter',\n    'barbecue',\n    'barbed',\n    'barbell',\n    'barber',\n    'barcode',\n    'barge',\n    'bargraph',\n    'barista',\n    'baritone',\n    'barley',\n    'barmaid',\n    'barman',\n    'barn',\n    'barometer',\n    'barrack',\n    'barracuda',\n    'barrel',\n    'barrette',\n    'barricade',\n    'barrier',\n    'barstool',\n    'bartender',\n    'barterer',\n    'bash',\n    'basically',\n    'basics',\n    'basil',\n    'basin',\n    'basis',\n    'basket',\n    'batboy',\n    'batch',\n    'bath',\n    'baton',\n    'bats',\n    'battalion',\n    'battered',\n    'battering',\n    'battery',\n    'batting',\n    'battle',\n    'bauble',\n    'bazooka',\n    'blabber',\n    'bladder',\n    'blade',\n    'blah',\n    'blame',\n    'blaming',\n    'blanching',\n    'blandness',\n    'blank',\n    'blaspheme',\n    'blasphemy',\n    'blast',\n    'blatancy',\n    'blatantly',\n    'blazer',\n    'blazing',\n    'bleach',\n    'bleak',\n    'bleep',\n    'blemish',\n    'blend',\n    'bless',\n    'blighted',\n    'blimp',\n    'bling',\n    'blinked',\n    'blinker',\n    'blinking',\n    'blinks',\n    'blip',\n    'blissful',\n    'blitz',\n    'blizzard',\n    'bloated',\n    'bloating',\n    'blob',\n    'blog',\n    'bloomers',\n    'blooming',\n    'blooper',\n    'blot',\n    'blouse',\n    'blubber',\n    'bluff',\n    'bluish',\n    'blunderer',\n    'blunt',\n    'blurb',\n    'blurred',\n    'blurry',\n    'blurt',\n    'blush',\n    'blustery',\n    'boaster',\n    'boastful',\n    'boasting',\n    'boat',\n    'bobbed',\n    'bobbing',\n    'bobble',\n    'bobcat',\n    'bobsled',\n    'bobtail',\n    'bodacious',\n    'body',\n    'bogged',\n    'boggle',\n    'bogus',\n    'boil',\n    'bok',\n    'bolster',\n    'bolt',\n    'bonanza',\n    'bonded',\n    'bonding',\n    'bondless',\n    'boned',\n    'bonehead',\n    'boneless',\n    'bonelike',\n    'boney',\n    'bonfire',\n    'bonnet',\n    'bonsai',\n    'bonus',\n    'bony',\n    'boogeyman',\n    'boogieman',\n    'book',\n    'boondocks',\n    'booted',\n    'booth',\n    'bootie',\n    'booting',\n    'bootlace',\n    'bootleg',\n    'boots',\n    'boozy',\n    'borax',\n    'boring',\n    'borough',\n    'borrower',\n    'borrowing',\n    'boss',\n    'botanical',\n    'botanist',\n    'botany',\n    'botch',\n    'both',\n    'bottle',\n    'bottling',\n    'bottom',\n    'bounce',\n    'bouncing',\n    'bouncy',\n    'bounding',\n    'boundless',\n    'bountiful',\n    'bovine',\n    'boxcar',\n    'boxer',\n    'boxing',\n    'boxlike',\n    'boxy',\n    'breach',\n    'breath',\n    'breeches',\n    'breeching',\n    'breeder',\n    'breeding',\n    'breeze',\n    'breezy',\n    'brethren',\n    'brewery',\n    'brewing',\n    'briar',\n    'bribe',\n    'brick',\n    'bride',\n    'bridged',\n    'brigade',\n    'bright',\n    'brilliant',\n    'brim',\n    'bring',\n    'brink',\n    'brisket',\n    'briskly',\n    'briskness',\n    'bristle',\n    'brittle',\n    'broadband',\n    'broadcast',\n    'broaden',\n    'broadly',\n    'broadness',\n    'broadside',\n    'broadways',\n    'broiler',\n    'broiling',\n    'broken',\n    'broker',\n    'bronchial',\n    'bronco',\n    'bronze',\n    'bronzing',\n    'brook',\n    'broom',\n    'brought',\n    'browbeat',\n    'brownnose',\n    'browse',\n    'browsing',\n    'bruising',\n    'brunch',\n    'brunette',\n    'brunt',\n    'brush',\n    'brussels',\n    'brute',\n    'brutishly',\n    'bubble',\n    'bubbling',\n    'bubbly',\n    'buccaneer',\n    'bucked',\n    'bucket',\n    'buckle',\n    'buckshot',\n    'buckskin',\n    'bucktooth',\n    'buckwheat',\n    'buddhism',\n    'buddhist',\n    'budding',\n    'buddy',\n    'budget',\n    'buffalo',\n    'buffed',\n    'buffer',\n    'buffing',\n    'buffoon',\n    'buggy',\n    'bulb',\n    'bulge',\n    'bulginess',\n    'bulgur',\n    'bulk',\n    'bulldog',\n    'bulldozer',\n    'bullfight',\n    'bullfrog',\n    'bullhorn',\n    'bullion',\n    'bullish',\n    'bullpen',\n    'bullring',\n    'bullseye',\n    'bullwhip',\n    'bully',\n    'bunch',\n    'bundle',\n    'bungee',\n    'bunion',\n    'bunkbed',\n    'bunkhouse',\n    'bunkmate',\n    'bunny',\n    'bunt',\n    'busboy',\n    'bush',\n    'busily',\n    'busload',\n    'bust',\n    'busybody',\n    'buzz',\n    'cabana',\n    'cabbage',\n    'cabbie',\n    'cabdriver',\n    'cable',\n    'caboose',\n    'cache',\n    'cackle',\n    'cacti',\n    'cactus',\n    'caddie',\n    'caddy',\n    'cadet',\n    'cadillac',\n    'cadmium',\n    'cage',\n    'cahoots',\n    'cake',\n    'calamari',\n    'calamity',\n    'calcium',\n    'calculate',\n    'calculus',\n    'caliber',\n    'calibrate',\n    'calm',\n    'caloric',\n    'calorie',\n    'calzone',\n    'camcorder',\n    'cameo',\n    'camera',\n    'camisole',\n    'camper',\n    'campfire',\n    'camping',\n    'campsite',\n    'campus',\n    'canal',\n    'canary',\n    'cancel',\n    'candied',\n    'candle',\n    'candy',\n    'cane',\n    'canine',\n    'canister',\n    'cannabis',\n    'canned',\n    'canning',\n    'cannon',\n    'cannot',\n    'canola',\n    'canon',\n    'canopener',\n    'canopy',\n    'canteen',\n    'canyon',\n    'capable',\n    'capably',\n    'capacity',\n    'cape',\n    'capillary',\n    'capital',\n    'capitol',\n    'capped',\n    'capricorn',\n    'capsize',\n    'capsule',\n    'caption',\n    'captivate',\n    'captive',\n    'captivity',\n    'capture',\n    'caramel',\n    'carat',\n    'caravan',\n    'carbon',\n    'cardboard',\n    'carded',\n    'cardiac',\n    'cardigan',\n    'cardinal',\n    'cardstock',\n    'carefully',\n    'caregiver',\n    'careless',\n    'caress',\n    'caretaker',\n    'cargo',\n    'caring',\n    'carless',\n    'carload',\n    'carmaker',\n    'carnage',\n    'carnation',\n    'carnival',\n    'carnivore',\n    'carol',\n    'carpenter',\n    'carpentry',\n    'carpool',\n    'carport',\n    'carried',\n    'carrot',\n    'carrousel',\n    'carry',\n    'cartel',\n    'cartload',\n    'carton',\n    'cartoon',\n    'cartridge',\n    'cartwheel',\n    'carve',\n    'carving',\n    'carwash',\n    'cascade',\n    'case',\n    'cash',\n    'casing',\n    'casino',\n    'casket',\n    'cassette',\n    'casually',\n    'casualty',\n    'catacomb',\n    'catalog',\n    'catalyst',\n    'catalyze',\n    'catapult',\n    'cataract',\n    'catatonic',\n    'catcall',\n    'catchable',\n    'catcher',\n    'catching',\n    'catchy',\n    'caterer',\n    'catering',\n    'catfight',\n    'catfish',\n    'cathedral',\n    'cathouse',\n    'catlike',\n    'catnap',\n    'catnip',\n    'catsup',\n    'cattail',\n    'cattishly',\n    'cattle',\n    'catty',\n    'catwalk',\n    'caucasian',\n    'caucus',\n    'causal',\n    'causation',\n    'cause',\n    'causing',\n    'cauterize',\n    'caution',\n    'cautious',\n    'cavalier',\n    'cavalry',\n    'caviar',\n    'cavity',\n    'cedar',\n    'celery',\n    'celestial',\n    'celibacy',\n    'celibate',\n    'celtic',\n    'cement',\n    'census',\n    'ceramics',\n    'ceremony',\n    'certainly',\n    'certainty',\n    'certified',\n    'certify',\n    'cesarean',\n    'cesspool',\n    'chafe',\n    'chaffing',\n    'chain',\n    'chair',\n    'chalice',\n    'challenge',\n    'chamber',\n    'chamomile',\n    'champion',\n    'chance',\n    'change',\n    'channel',\n    'chant',\n    'chaos',\n    'chaperone',\n    'chaplain',\n    'chapped',\n    'chaps',\n    'chapter',\n    'character',\n    'charbroil',\n    'charcoal',\n    'charger',\n    'charging',\n    'chariot',\n    'charity',\n    'charm',\n    'charred',\n    'charter',\n    'charting',\n    'chase',\n    'chasing',\n    'chaste',\n    'chastise',\n    'chastity',\n    'chatroom',\n    'chatter',\n    'chatting',\n    'chatty',\n    'cheating',\n    'cheddar',\n    'cheek',\n    'cheer',\n    'cheese',\n    'cheesy',\n    'chef',\n    'chemicals',\n    'chemist',\n    'chemo',\n    'cherisher',\n    'cherub',\n    'chess',\n    'chest',\n    'chevron',\n    'chevy',\n    'chewable',\n    'chewer',\n    'chewing',\n    'chewy',\n    'chief',\n    'chihuahua',\n    'childcare',\n    'childhood',\n    'childish',\n    'childless',\n    'childlike',\n    'chili',\n    'chill',\n    'chimp',\n    'chip',\n    'chirping',\n    'chirpy',\n    'chitchat',\n    'chivalry',\n    'chive',\n    'chloride',\n    'chlorine',\n    'choice',\n    'chokehold',\n    'choking',\n    'chomp',\n    'chooser',\n    'choosing',\n    'choosy',\n    'chop',\n    'chosen',\n    'chowder',\n    'chowtime',\n    'chrome',\n    'chubby',\n    'chuck',\n    'chug',\n    'chummy',\n    'chump',\n    'chunk',\n    'churn',\n    'chute',\n    'cider',\n    'cilantro',\n    'cinch',\n    'cinema',\n    'cinnamon',\n    'circle',\n    'circling',\n    'circular',\n    'circulate',\n    'circus',\n    'citable',\n    'citadel',\n    'citation',\n    'citizen',\n    'citric',\n    'citrus',\n    'city',\n    'civic',\n    'civil',\n    'clad',\n    'claim',\n    'clambake',\n    'clammy',\n    'clamor',\n    'clamp',\n    'clamshell',\n    'clang',\n    'clanking',\n    'clapped',\n    'clapper',\n    'clapping',\n    'clarify',\n    'clarinet',\n    'clarity',\n    'clash',\n    'clasp',\n    'class',\n    'clatter',\n    'clause',\n    'clavicle',\n    'claw',\n    'clay',\n    'clean',\n    'clear',\n    'cleat',\n    'cleaver',\n    'cleft',\n    'clench',\n    'clergyman',\n    'clerical',\n    'clerk',\n    'clever',\n    'clicker',\n    'client',\n    'climate',\n    'climatic',\n    'cling',\n    'clinic',\n    'clinking',\n    'clip',\n    'clique',\n    'cloak',\n    'clobber',\n    'clock',\n    'clone',\n    'cloning',\n    'closable',\n    'closure',\n    'clothes',\n    'clothing',\n    'cloud',\n    'clover',\n    'clubbed',\n    'clubbing',\n    'clubhouse',\n    'clump',\n    'clumsily',\n    'clumsy',\n    'clunky',\n    'clustered',\n    'clutch',\n    'clutter',\n    'coach',\n    'coagulant',\n    'coastal',\n    'coaster',\n    'coasting',\n    'coastland',\n    'coastline',\n    'coat',\n    'coauthor',\n    'cobalt',\n    'cobbler',\n    'cobweb',\n    'cocoa',\n    'coconut',\n    'cod',\n    'coeditor',\n    'coerce',\n    'coexist',\n    'coffee',\n    'cofounder',\n    'cognition',\n    'cognitive',\n    'cogwheel',\n    'coherence',\n    'coherent',\n    'cohesive',\n    'coil',\n    'coke',\n    'cola',\n    'cold',\n    'coleslaw',\n    'coliseum',\n    'collage',\n    'collapse',\n    'collar',\n    'collected',\n    'collector',\n    'collide',\n    'collie',\n    'collision',\n    'colonial',\n    'colonist',\n    'colonize',\n    'colony',\n    'colossal',\n    'colt',\n    'coma',\n    'come',\n    'comfort',\n    'comfy',\n    'comic',\n    'coming',\n    'comma',\n    'commence',\n    'commend',\n    'comment',\n    'commerce',\n    'commode',\n    'commodity',\n    'commodore',\n    'common',\n    'commotion',\n    'commute',\n    'commuting',\n    'compacted',\n    'compacter',\n    'compactly',\n    'compactor',\n    'companion',\n    'company',\n    'compare',\n    'compel',\n    'compile',\n    'comply',\n    'component',\n    'composed',\n    'composer',\n    'composite',\n    'compost',\n    'composure',\n    'compound',\n    'compress',\n    'comprised',\n    'computer',\n    'computing',\n    'comrade',\n    'concave',\n    'conceal',\n    'conceded',\n    'concept',\n    'concerned',\n    'concert',\n    'conch',\n    'concierge',\n    'concise',\n    'conclude',\n    'concrete',\n    'concur',\n    'condense',\n    'condiment',\n    'condition',\n    'condone',\n    'conducive',\n    'conductor',\n    'conduit',\n    'cone',\n    'confess',\n    'confetti',\n    'confidant',\n    'confident',\n    'confider',\n    'confiding',\n    'configure',\n    'confined',\n    'confining',\n    'confirm',\n    'conflict',\n    'conform',\n    'confound',\n    'confront',\n    'confused',\n    'confusing',\n    'confusion',\n    'congenial',\n    'congested',\n    'congrats',\n    'congress',\n    'conical',\n    'conjoined',\n    'conjure',\n    'conjuror',\n    'connected',\n    'connector',\n    'consensus',\n    'consent',\n    'console',\n    'consoling',\n    'consonant',\n    'constable',\n    'constant',\n    'constrain',\n    'constrict',\n    'construct',\n    'consult',\n    'consumer',\n    'consuming',\n    'contact',\n    'container',\n    'contempt',\n    'contend',\n    'contented',\n    'contently',\n    'contents',\n    'contest',\n    'context',\n    'contort',\n    'contour',\n    'contrite',\n    'control',\n    'contusion',\n    'convene',\n    'convent',\n    'copartner',\n    'cope',\n    'copied',\n    'copier',\n    'copilot',\n    'coping',\n    'copious',\n    'copper',\n    'copy',\n    'coral',\n    'cork',\n    'cornball',\n    'cornbread',\n    'corncob',\n    'cornea',\n    'corned',\n    'corner',\n    'cornfield',\n    'cornflake',\n    'cornhusk',\n    'cornmeal',\n    'cornstalk',\n    'corny',\n    'coronary',\n    'coroner',\n    'corporal',\n    'corporate',\n    'corral',\n    'correct',\n    'corridor',\n    'corrode',\n    'corroding',\n    'corrosive',\n    'corsage',\n    'corset',\n    'cortex',\n    'cosigner',\n    'cosmetics',\n    'cosmic',\n    'cosmos',\n    'cosponsor',\n    'cost',\n    'cottage',\n    'cotton',\n    'couch',\n    'cough',\n    'could',\n    'countable',\n    'countdown',\n    'counting',\n    'countless',\n    'country',\n    'county',\n    'courier',\n    'covenant',\n    'cover',\n    'coveted',\n    'coveting',\n    'coyness',\n    'cozily',\n    'coziness',\n    'cozy',\n    'crabbing',\n    'crabgrass',\n    'crablike',\n    'crabmeat',\n    'cradle',\n    'cradling',\n    'crafter',\n    'craftily',\n    'craftsman',\n    'craftwork',\n    'crafty',\n    'cramp',\n    'cranberry',\n    'crane',\n    'cranial',\n    'cranium',\n    'crank',\n    'crate',\n    'crave',\n    'craving',\n    'crawfish',\n    'crawlers',\n    'crawling',\n    'crayfish',\n    'crayon',\n    'crazed',\n    'crazily',\n    'craziness',\n    'crazy',\n    'creamed',\n    'creamer',\n    'creamlike',\n    'crease',\n    'creasing',\n    'creatable',\n    'create',\n    'creation',\n    'creative',\n    'creature',\n    'credible',\n    'credibly',\n    'credit',\n    'creed',\n    'creme',\n    'creole',\n    'crepe',\n    'crept',\n    'crescent',\n    'crested',\n    'cresting',\n    'crestless',\n    'crevice',\n    'crewless',\n    'crewman',\n    'crewmate',\n    'crib',\n    'cricket',\n    'cried',\n    'crier',\n    'crimp',\n    'crimson',\n    'cringe',\n    'cringing',\n    'crinkle',\n    'crinkly',\n    'crisped',\n    'crisping',\n    'crisply',\n    'crispness',\n    'crispy',\n    'criteria',\n    'critter',\n    'croak',\n    'crock',\n    'crook',\n    'croon',\n    'crop',\n    'cross',\n    'crouch',\n    'crouton',\n    'crowbar',\n    'crowd',\n    'crown',\n    'crucial',\n    'crudely',\n    'crudeness',\n    'cruelly',\n    'cruelness',\n    'cruelty',\n    'crumb',\n    'crummiest',\n    'crummy',\n    'crumpet',\n    'crumpled',\n    'cruncher',\n    'crunching',\n    'crunchy',\n    'crusader',\n    'crushable',\n    'crushed',\n    'crusher',\n    'crushing',\n    'crust',\n    'crux',\n    'crying',\n    'cryptic',\n    'crystal',\n    'cubbyhole',\n    'cube',\n    'cubical',\n    'cubicle',\n    'cucumber',\n    'cuddle',\n    'cuddly',\n    'cufflink',\n    'culinary',\n    'culminate',\n    'culpable',\n    'culprit',\n    'cultivate',\n    'cultural',\n    'culture',\n    'cupbearer',\n    'cupcake',\n    'cupid',\n    'cupped',\n    'cupping',\n    'curable',\n    'curator',\n    'curdle',\n    'cure',\n    'curfew',\n    'curing',\n    'curled',\n    'curler',\n    'curliness',\n    'curling',\n    'curly',\n    'curry',\n    'curse',\n    'cursive',\n    'cursor',\n    'curtain',\n    'curtly',\n    'curtsy',\n    'curvature',\n    'curve',\n    'curvy',\n    'cushy',\n    'cusp',\n    'cussed',\n    'custard',\n    'custodian',\n    'custody',\n    'customary',\n    'customer',\n    'customize',\n    'customs',\n    'cut',\n    'cycle',\n    'cyclic',\n    'cycling',\n    'cyclist',\n    'cylinder',\n    'cymbal',\n    'cytoplasm',\n    'cytoplast',\n    'dab',\n    'dad',\n    'daffodil',\n    'dagger',\n    'daily',\n    'daintily',\n    'dainty',\n    'dairy',\n    'daisy',\n    'dallying',\n    'dance',\n    'dancing',\n    'dandelion',\n    'dander',\n    'dandruff',\n    'dandy',\n    'danger',\n    'dangle',\n    'dangling',\n    'daredevil',\n    'dares',\n    'daringly',\n    'darkened',\n    'darkening',\n    'darkish',\n    'darkness',\n    'darkroom',\n    'darling',\n    'darn',\n    'dart',\n    'darwinism',\n    'dash',\n    'dastardly',\n    'data',\n    'datebook',\n    'dating',\n    'daughter',\n    'daunting',\n    'dawdler',\n    'dawn',\n    'daybed',\n    'daybreak',\n    'daycare',\n    'daydream',\n    'daylight',\n    'daylong',\n    'dayroom',\n    'daytime',\n    'dazzler',\n    'dazzling',\n    'deacon',\n    'deafening',\n    'deafness',\n    'dealer',\n    'dealing',\n    'dealmaker',\n    'dealt',\n    'dean',\n    'debatable',\n    'debate',\n    'debating',\n    'debit',\n    'debrief',\n    'debtless',\n    'debtor',\n    'debug',\n    'debunk',\n    'decade',\n    'decaf',\n    'decal',\n    'decathlon',\n    'decay',\n    'deceased',\n    'deceit',\n    'deceiver',\n    'deceiving',\n    'december',\n    'decency',\n    'decent',\n    'deception',\n    'deceptive',\n    'decibel',\n    'decidable',\n    'decimal',\n    'decimeter',\n    'decipher',\n    'deck',\n    'declared',\n    'decline',\n    'decode',\n    'decompose',\n    'decorated',\n    'decorator',\n    'decoy',\n    'decrease',\n    'decree',\n    'dedicate',\n    'dedicator',\n    'deduce',\n    'deduct',\n    'deed',\n    'deem',\n    'deepen',\n    'deeply',\n    'deepness',\n    'deface',\n    'defacing',\n    'defame',\n    'default',\n    'defeat',\n    'defection',\n    'defective',\n    'defendant',\n    'defender',\n    'defense',\n    'defensive',\n    'deferral',\n    'deferred',\n    'defiance',\n    'defiant',\n    'defile',\n    'defiling',\n    'define',\n    'definite',\n    'deflate',\n    'deflation',\n    'deflator',\n    'deflected',\n    'deflector',\n    'defog',\n    'deforest',\n    'defraud',\n    'defrost',\n    'deftly',\n    'defuse',\n    'defy',\n    'degraded',\n    'degrading',\n    'degrease',\n    'degree',\n    'dehydrate',\n    'deity',\n    'dejected',\n    'delay',\n    'delegate',\n    'delegator',\n    'delete',\n    'deletion',\n    'delicacy',\n    'delicate',\n    'delicious',\n    'delighted',\n    'delirious',\n    'delirium',\n    'deliverer',\n    'delivery',\n    'delouse',\n    'delta',\n    'deluge',\n    'delusion',\n    'deluxe',\n    'demanding',\n    'demeaning',\n    'demeanor',\n    'demise',\n    'democracy',\n    'democrat',\n    'demote',\n    'demotion',\n    'demystify',\n    'denatured',\n    'deniable',\n    'denial',\n    'denim',\n    'denote',\n    'dense',\n    'density',\n    'dental',\n    'dentist',\n    'denture',\n    'deny',\n    'deodorant',\n    'deodorize',\n    'departed',\n    'departure',\n    'depict',\n    'deplete',\n    'depletion',\n    'deplored',\n    'deploy',\n    'deport',\n    'depose',\n    'depraved',\n    'depravity',\n    'deprecate',\n    'depress',\n    'deprive',\n    'depth',\n    'deputize',\n    'deputy',\n    'derail',\n    'deranged',\n    'derby',\n    'derived',\n    'desecrate',\n    'deserve',\n    'deserving',\n    'designate',\n    'designed',\n    'designer',\n    'designing',\n    'deskbound',\n    'desktop',\n    'deskwork',\n    'desolate',\n    'despair',\n    'despise',\n    'despite',\n    'destiny',\n    'destitute',\n    'destruct',\n    'detached',\n    'detail',\n    'detection',\n    'detective',\n    'detector',\n    'detention',\n    'detergent',\n    'detest',\n    'detonate',\n    'detonator',\n    'detoxify',\n    'detract',\n    'deuce',\n    'devalue',\n    'deviancy',\n    'deviant',\n    'deviate',\n    'deviation',\n    'deviator',\n    'device',\n    'devious',\n    'devotedly',\n    'devotee',\n    'devotion',\n    'devourer',\n    'devouring',\n    'devoutly',\n    'dexterity',\n    'dexterous',\n    'diabetes',\n    'diabetic',\n    'diabolic',\n    'diagnoses',\n    'diagnosis',\n    'diagram',\n    'dial',\n    'diameter',\n    'diaper',\n    'diaphragm',\n    'diary',\n    'dice',\n    'dicing',\n    'dictate',\n    'dictation',\n    'dictator',\n    'difficult',\n    'diffused',\n    'diffuser',\n    'diffusion',\n    'diffusive',\n    'dig',\n    'dilation',\n    'diligence',\n    'diligent',\n    'dill',\n    'dilute',\n    'dime',\n    'diminish',\n    'dimly',\n    'dimmed',\n    'dimmer',\n    'dimness',\n    'dimple',\n    'diner',\n    'dingbat',\n    'dinghy',\n    'dinginess',\n    'dingo',\n    'dingy',\n    'dining',\n    'dinner',\n    'diocese',\n    'dioxide',\n    'diploma',\n    'dipped',\n    'dipper',\n    'dipping',\n    'directed',\n    'direction',\n    'directive',\n    'directly',\n    'directory',\n    'direness',\n    'dirtiness',\n    'disabled',\n    'disagree',\n    'disallow',\n    'disarm',\n    'disarray',\n    'disaster',\n    'disband',\n    'disbelief',\n    'disburse',\n    'discard',\n    'discern',\n    'discharge',\n    'disclose',\n    'discolor',\n    'discount',\n    'discourse',\n    'discover',\n    'discuss',\n    'disdain',\n    'disengage',\n    'disfigure',\n    'disgrace',\n    'dish',\n    'disinfect',\n    'disjoin',\n    'disk',\n    'dislike',\n    'disliking',\n    'dislocate',\n    'dislodge',\n    'disloyal',\n    'dismantle',\n    'dismay',\n    'dismiss',\n    'dismount',\n    'disobey',\n    'disorder',\n    'disown',\n    'disparate',\n    'disparity',\n    'dispatch',\n    'dispense',\n    'dispersal',\n    'dispersed',\n    'disperser',\n    'displace',\n    'display',\n    'displease',\n    'disposal',\n    'dispose',\n    'disprove',\n    'dispute',\n    'disregard',\n    'disrupt',\n    'dissuade',\n    'distance',\n    'distant',\n    'distaste',\n    'distill',\n    'distinct',\n    'distort',\n    'distract',\n    'distress',\n    'district',\n    'distrust',\n    'ditch',\n    'ditto',\n    'ditzy',\n    'dividable',\n    'divided',\n    'dividend',\n    'dividers',\n    'dividing',\n    'divinely',\n    'diving',\n    'divinity',\n    'divisible',\n    'divisibly',\n    'division',\n    'divisive',\n    'divorcee',\n    'dizziness',\n    'dizzy',\n    'doable',\n    'docile',\n    'dock',\n    'doctrine',\n    'document',\n    'dodge',\n    'dodgy',\n    'doily',\n    'doing',\n    'dole',\n    'dollar',\n    'dollhouse',\n    'dollop',\n    'dolly',\n    'dolphin',\n    'domain',\n    'domelike',\n    'domestic',\n    'dominion',\n    'dominoes',\n    'donated',\n    'donation',\n    'donator',\n    'donor',\n    'donut',\n    'doodle',\n    'doorbell',\n    'doorframe',\n    'doorknob',\n    'doorman',\n    'doormat',\n    'doornail',\n    'doorpost',\n    'doorstep',\n    'doorstop',\n    'doorway',\n    'doozy',\n    'dork',\n    'dormitory',\n    'dorsal',\n    'dosage',\n    'dose',\n    'dotted',\n    'doubling',\n    'douche',\n    'dove',\n    'down',\n    'dowry',\n    'doze',\n    'drab',\n    'dragging',\n    'dragonfly',\n    'dragonish',\n    'dragster',\n    'drainable',\n    'drainage',\n    'drained',\n    'drainer',\n    'drainpipe',\n    'dramatic',\n    'dramatize',\n    'drank',\n    'drapery',\n    'drastic',\n    'draw',\n    'dreaded',\n    'dreadful',\n    'dreadlock',\n    'dreamboat',\n    'dreamily',\n    'dreamland',\n    'dreamless',\n    'dreamlike',\n    'dreamt',\n    'dreamy',\n    'drearily',\n    'dreary',\n    'drench',\n    'dress',\n    'drew',\n    'dribble',\n    'dried',\n    'drier',\n    'drift',\n    'driller',\n    'drilling',\n    'drinkable',\n    'drinking',\n    'dripping',\n    'drippy',\n    'drivable',\n    'driven',\n    'driver',\n    'driveway',\n    'driving',\n    'drizzle',\n    'drizzly',\n    'drone',\n    'drool',\n    'droop',\n    'drop-down',\n    'dropbox',\n    'dropkick',\n    'droplet',\n    'dropout',\n    'dropper',\n    'drove',\n    'drown',\n    'drowsily',\n    'drudge',\n    'drum',\n    'dry',\n    'dubbed',\n    'dubiously',\n    'duchess',\n    'duckbill',\n    'ducking',\n    'duckling',\n    'ducktail',\n    'ducky',\n    'duct',\n    'dude',\n    'duffel',\n    'dugout',\n    'duh',\n    'duke',\n    'duller',\n    'dullness',\n    'duly',\n    'dumping',\n    'dumpling',\n    'dumpster',\n    'duo',\n    'dupe',\n    'duplex',\n    'duplicate',\n    'duplicity',\n    'durable',\n    'durably',\n    'duration',\n    'duress',\n    'during',\n    'dusk',\n    'dust',\n    'dutiful',\n    'duty',\n    'duvet',\n    'dwarf',\n    'dweeb',\n    'dwelled',\n    'dweller',\n    'dwelling',\n    'dwindle',\n    'dwindling',\n    'dynamic',\n    'dynamite',\n    'dynasty',\n    'dyslexia',\n    'dyslexic',\n    'each',\n    'eagle',\n    'earache',\n    'eardrum',\n    'earflap',\n    'earful',\n    'earlobe',\n    'early',\n    'earmark',\n    'earmuff',\n    'earphone',\n    'earpiece',\n    'earplugs',\n    'earring',\n    'earshot',\n    'earthen',\n    'earthlike',\n    'earthling',\n    'earthly',\n    'earthworm',\n    'earthy',\n    'earwig',\n    'easeful',\n    'easel',\n    'easiest',\n    'easily',\n    'easiness',\n    'easing',\n    'eastbound',\n    'eastcoast',\n    'easter',\n    'eastward',\n    'eatable',\n    'eaten',\n    'eatery',\n    'eating',\n    'eats',\n    'ebay',\n    'ebony',\n    'ebook',\n    'ecard',\n    'eccentric',\n    'echo',\n    'eclair',\n    'eclipse',\n    'ecologist',\n    'ecology',\n    'economic',\n    'economist',\n    'economy',\n    'ecosphere',\n    'ecosystem',\n    'edge',\n    'edginess',\n    'edging',\n    'edgy',\n    'edition',\n    'editor',\n    'educated',\n    'education',\n    'educator',\n    'eel',\n    'effective',\n    'effects',\n    'efficient',\n    'effort',\n    'eggbeater',\n    'egging',\n    'eggnog',\n    'eggplant',\n    'eggshell',\n    'egomaniac',\n    'egotism',\n    'egotistic',\n    'either',\n    'eject',\n    'elaborate',\n    'elastic',\n    'elated',\n    'elbow',\n    'eldercare',\n    'elderly',\n    'eldest',\n    'electable',\n    'election',\n    'elective',\n    'elephant',\n    'elevate',\n    'elevating',\n    'elevation',\n    'elevator',\n    'eleven',\n    'elf',\n    'eligible',\n    'eligibly',\n    'eliminate',\n    'elite',\n    'elitism',\n    'elixir',\n    'elk',\n    'ellipse',\n    'elliptic',\n    'elm',\n    'elongated',\n    'elope',\n    'eloquence',\n    'eloquent',\n    'elsewhere',\n    'elude',\n    'elusive',\n    'elves',\n    'email',\n    'embargo',\n    'embark',\n    'embassy',\n    'embattled',\n    'embellish',\n    'ember',\n    'embezzle',\n    'emblaze',\n    'emblem',\n    'embody',\n    'embolism',\n    'emboss',\n    'embroider',\n    'emcee',\n    'emerald',\n    'emergency',\n    'emission',\n    'emit',\n    'emote',\n    'emoticon',\n    'emotion',\n    'empathic',\n    'empathy',\n    'emperor',\n    'emphases',\n    'emphasis',\n    'emphasize',\n    'emphatic',\n    'empirical',\n    'employed',\n    'employee',\n    'employer',\n    'emporium',\n    'empower',\n    'emptier',\n    'emptiness',\n    'empty',\n    'emu',\n    'enable',\n    'enactment',\n    'enamel',\n    'enchanted',\n    'enchilada',\n    'encircle',\n    'enclose',\n    'enclosure',\n    'encode',\n    'encore',\n    'encounter',\n    'encourage',\n    'encroach',\n    'encrust',\n    'encrypt',\n    'endanger',\n    'endeared',\n    'endearing',\n    'ended',\n    'ending',\n    'endless',\n    'endnote',\n    'endocrine',\n    'endorphin',\n    'endorse',\n    'endowment',\n    'endpoint',\n    'endurable',\n    'endurance',\n    'enduring',\n    'energetic',\n    'energize',\n    'energy',\n    'enforced',\n    'enforcer',\n    'engaged',\n    'engaging',\n    'engine',\n    'engorge',\n    'engraved',\n    'engraver',\n    'engraving',\n    'engross',\n    'engulf',\n    'enhance',\n    'enigmatic',\n    'enjoyable',\n    'enjoyably',\n    'enjoyer',\n    'enjoying',\n    'enjoyment',\n    'enlarged',\n    'enlarging',\n    'enlighten',\n    'enlisted',\n    'enquirer',\n    'enrage',\n    'enrich',\n    'enroll',\n    'enslave',\n    'ensnare',\n    'ensure',\n    'entail',\n    'entangled',\n    'entering',\n    'entertain',\n    'enticing',\n    'entire',\n    'entitle',\n    'entity',\n    'entomb',\n    'entourage',\n    'entrap',\n    'entree',\n    'entrench',\n    'entrust',\n    'entryway',\n    'entwine',\n    'enunciate',\n    'envelope',\n    'enviable',\n    'enviably',\n    'envious',\n    'envision',\n    'envoy',\n    'envy',\n    'enzyme',\n    'epic',\n    'epidemic',\n    'epidermal',\n    'epidermis',\n    'epidural',\n    'epilepsy',\n    'epileptic',\n    'epilogue',\n    'epiphany',\n    'episode',\n    'equal',\n    'equate',\n    'equation',\n    'equator',\n    'equinox',\n    'equipment',\n    'equity',\n    'equivocal',\n    'eradicate',\n    'erasable',\n    'erased',\n    'eraser',\n    'erasure',\n    'ergonomic',\n    'errand',\n    'errant',\n    'erratic',\n    'error',\n    'erupt',\n    'escalate',\n    'escalator',\n    'escapable',\n    'escapade',\n    'escapist',\n    'escargot',\n    'eskimo',\n    'esophagus',\n    'espionage',\n    'espresso',\n    'esquire',\n    'essay',\n    'essence',\n    'essential',\n    'establish',\n    'estate',\n    'esteemed',\n    'estimate',\n    'estimator',\n    'estranged',\n    'estrogen',\n    'etching',\n    'eternal',\n    'eternity',\n    'ethanol',\n    'ether',\n    'ethically',\n    'ethics',\n    'euphemism',\n    'evacuate',\n    'evacuee',\n    'evade',\n    'evaluate',\n    'evaluator',\n    'evaporate',\n    'evasion',\n    'evasive',\n    'even',\n    'everglade',\n    'evergreen',\n    'everybody',\n    'everyday',\n    'everyone',\n    'evict',\n    'evidence',\n    'evident',\n    'evil',\n    'evoke',\n    'evolution',\n    'evolve',\n    'exact',\n    'exalted',\n    'example',\n    'excavate',\n    'excavator',\n    'exceeding',\n    'exception',\n    'excess',\n    'exchange',\n    'excitable',\n    'exciting',\n    'exclaim',\n    'exclude',\n    'excluding',\n    'exclusion',\n    'exclusive',\n    'excretion',\n    'excretory',\n    'excursion',\n    'excusable',\n    'excusably',\n    'excuse',\n    'exemplary',\n    'exemplify',\n    'exemption',\n    'exerciser',\n    'exert',\n    'exes',\n    'exfoliate',\n    'exhale',\n    'exhaust',\n    'exhume',\n    'exile',\n    'existing',\n    'exit',\n    'exodus',\n    'exonerate',\n    'exorcism',\n    'exorcist',\n    'expand',\n    'expanse',\n    'expansion',\n    'expansive',\n    'expectant',\n    'expedited',\n    'expediter',\n    'expel',\n    'expend',\n    'expenses',\n    'expensive',\n    'expert',\n    'expire',\n    'expiring',\n    'explain',\n    'expletive',\n    'explicit',\n    'explode',\n    'exploit',\n    'explore',\n    'exploring',\n    'exponent',\n    'exporter',\n    'exposable',\n    'expose',\n    'exposure',\n    'express',\n    'expulsion',\n    'exquisite',\n    'extended',\n    'extending',\n    'extent',\n    'extenuate',\n    'exterior',\n    'external',\n    'extinct',\n    'extortion',\n    'extradite',\n    'extras',\n    'extrovert',\n    'extrude',\n    'extruding',\n    'exuberant',\n    'fable',\n    'fabric',\n    'fabulous',\n    'facebook',\n    'facecloth',\n    'facedown',\n    'faceless',\n    'facelift',\n    'faceplate',\n    'faceted',\n    'facial',\n    'facility',\n    'facing',\n    'facsimile',\n    'faction',\n    'factoid',\n    'factor',\n    'factsheet',\n    'factual',\n    'faculty',\n    'fade',\n    'fading',\n    'failing',\n    'falcon',\n    'fall',\n    'false',\n    'falsify',\n    'fame',\n    'familiar',\n    'family',\n    'famine',\n    'famished',\n    'fanatic',\n    'fancied',\n    'fanciness',\n    'fancy',\n    'fanfare',\n    'fang',\n    'fanning',\n    'fantasize',\n    'fantastic',\n    'fantasy',\n    'fascism',\n    'fastball',\n    'faster',\n    'fasting',\n    'fastness',\n    'faucet',\n    'favorable',\n    'favorably',\n    'favored',\n    'favoring',\n    'favorite',\n    'fax',\n    'feast',\n    'federal',\n    'fedora',\n    'feeble',\n    'feed',\n    'feel',\n    'feisty',\n    'feline',\n    'felt-tip',\n    'feminine',\n    'feminism',\n    'feminist',\n    'feminize',\n    'femur',\n    'fence',\n    'fencing',\n    'fender',\n    'ferment',\n    'fernlike',\n    'ferocious',\n    'ferocity',\n    'ferret',\n    'ferris',\n    'ferry',\n    'fervor',\n    'fester',\n    'festival',\n    'festive',\n    'festivity',\n    'fetal',\n    'fetch',\n    'fever',\n    'fiber',\n    'fiction',\n    'fiddle',\n    'fiddling',\n    'fidelity',\n    'fidgeting',\n    'fidgety',\n    'fifteen',\n    'fifth',\n    'fiftieth',\n    'fifty',\n    'figment',\n    'figure',\n    'figurine',\n    'filing',\n    'filled',\n    'filler',\n    'filling',\n    'film',\n    'filter',\n    'filth',\n    'filtrate',\n    'finale',\n    'finalist',\n    'finalize',\n    'finally',\n    'finance',\n    'financial',\n    'finch',\n    'fineness',\n    'finer',\n    'finicky',\n    'finished',\n    'finisher',\n    'finishing',\n    'finite',\n    'finless',\n    'finlike',\n    'fiscally',\n    'fit',\n    'five',\n    'flaccid',\n    'flagman',\n    'flagpole',\n    'flagship',\n    'flagstick',\n    'flagstone',\n    'flail',\n    'flakily',\n    'flaky',\n    'flame',\n    'flammable',\n    'flanked',\n    'flanking',\n    'flannels',\n    'flap',\n    'flaring',\n    'flashback',\n    'flashbulb',\n    'flashcard',\n    'flashily',\n    'flashing',\n    'flashy',\n    'flask',\n    'flatbed',\n    'flatfoot',\n    'flatly',\n    'flatness',\n    'flatten',\n    'flattered',\n    'flatterer',\n    'flattery',\n    'flattop',\n    'flatware',\n    'flatworm',\n    'flavored',\n    'flavorful',\n    'flavoring',\n    'flaxseed',\n    'fled',\n    'fleshed',\n    'fleshy',\n    'flick',\n    'flier',\n    'flight',\n    'flinch',\n    'fling',\n    'flint',\n    'flip',\n    'flirt',\n    'float',\n    'flock',\n    'flogging',\n    'flop',\n    'floral',\n    'florist',\n    'floss',\n    'flounder',\n    'flyable',\n    'flyaway',\n    'flyer',\n    'flying',\n    'flyover',\n    'flypaper',\n    'foam',\n    'foe',\n    'fog',\n    'foil',\n    'folic',\n    'folk',\n    'follicle',\n    'follow',\n    'fondling',\n    'fondly',\n    'fondness',\n    'fondue',\n    'font',\n    'food',\n    'fool',\n    'footage',\n    'football',\n    'footbath',\n    'footboard',\n    'footer',\n    'footgear',\n    'foothill',\n    'foothold',\n    'footing',\n    'footless',\n    'footman',\n    'footnote',\n    'footpad',\n    'footpath',\n    'footprint',\n    'footrest',\n    'footsie',\n    'footsore',\n    'footwear',\n    'footwork',\n    'fossil',\n    'foster',\n    'founder',\n    'founding',\n    'fountain',\n    'fox',\n    'foyer',\n    'fraction',\n    'fracture',\n    'fragile',\n    'fragility',\n    'fragment',\n    'fragrance',\n    'fragrant',\n    'frail',\n    'frame',\n    'framing',\n    'frantic',\n    'fraternal',\n    'frayed',\n    'fraying',\n    'frays',\n    'freckled',\n    'freckles',\n    'freebase',\n    'freebee',\n    'freebie',\n    'freedom',\n    'freefall',\n    'freehand',\n    'freeing',\n    'freeload',\n    'freely',\n    'freemason',\n    'freeness',\n    'freestyle',\n    'freeware',\n    'freeway',\n    'freewill',\n    'freezable',\n    'freezing',\n    'freight',\n    'french',\n    'frenzied',\n    'frenzy',\n    'frequency',\n    'frequent',\n    'fresh',\n    'fretful',\n    'fretted',\n    'friction',\n    'friday',\n    'fridge',\n    'fried',\n    'friend',\n    'frighten',\n    'frightful',\n    'frigidity',\n    'frigidly',\n    'frill',\n    'fringe',\n    'frisbee',\n    'frisk',\n    'fritter',\n    'frivolous',\n    'frolic',\n    'from',\n    'front',\n    'frostbite',\n    'frosted',\n    'frostily',\n    'frosting',\n    'frostlike',\n    'frosty',\n    'froth',\n    'frown',\n    'frozen',\n    'fructose',\n    'frugality',\n    'frugally',\n    'fruit',\n    'frustrate',\n    'frying',\n    'gab',\n    'gaffe',\n    'gag',\n    'gainfully',\n    'gaining',\n    'gains',\n    'gala',\n    'gallantly',\n    'galleria',\n    'gallery',\n    'galley',\n    'gallon',\n    'gallows',\n    'gallstone',\n    'galore',\n    'galvanize',\n    'gambling',\n    'game',\n    'gaming',\n    'gamma',\n    'gander',\n    'gangly',\n    'gangrene',\n    'gangway',\n    'gap',\n    'garage',\n    'garbage',\n    'garden',\n    'gargle',\n    'garland',\n    'garlic',\n    'garment',\n    'garnet',\n    'garnish',\n    'garter',\n    'gas',\n    'gatherer',\n    'gathering',\n    'gating',\n    'gauging',\n    'gauntlet',\n    'gauze',\n    'gave',\n    'gawk',\n    'gazing',\n    'gear',\n    'gecko',\n    'geek',\n    'geiger',\n    'gem',\n    'gender',\n    'generic',\n    'generous',\n    'genetics',\n    'genre',\n    'gentile',\n    'gentleman',\n    'gently',\n    'gents',\n    'geography',\n    'geologic',\n    'geologist',\n    'geology',\n    'geometric',\n    'geometry',\n    'geranium',\n    'gerbil',\n    'geriatric',\n    'germicide',\n    'germinate',\n    'germless',\n    'germproof',\n    'gestate',\n    'gestation',\n    'gesture',\n    'getaway',\n    'getting',\n    'getup',\n    'giant',\n    'gibberish',\n    'giblet',\n    'giddily',\n    'giddiness',\n    'giddy',\n    'gift',\n    'gigabyte',\n    'gigahertz',\n    'gigantic',\n    'giggle',\n    'giggling',\n    'giggly',\n    'gigolo',\n    'gilled',\n    'gills',\n    'gimmick',\n    'girdle',\n    'giveaway',\n    'given',\n    'giver',\n    'giving',\n    'gizmo',\n    'gizzard',\n    'glacial',\n    'glacier',\n    'glade',\n    'gladiator',\n    'gladly',\n    'glamorous',\n    'glamour',\n    'glance',\n    'glancing',\n    'glandular',\n    'glare',\n    'glaring',\n    'glass',\n    'glaucoma',\n    'glazing',\n    'gleaming',\n    'gleeful',\n    'glider',\n    'gliding',\n    'glimmer',\n    'glimpse',\n    'glisten',\n    'glitch',\n    'glitter',\n    'glitzy',\n    'gloater',\n    'gloating',\n    'gloomily',\n    'gloomy',\n    'glorified',\n    'glorifier',\n    'glorify',\n    'glorious',\n    'glory',\n    'gloss',\n    'glove',\n    'glowing',\n    'glowworm',\n    'glucose',\n    'glue',\n    'gluten',\n    'glutinous',\n    'glutton',\n    'gnarly',\n    'gnat',\n    'goal',\n    'goatskin',\n    'goes',\n    'goggles',\n    'going',\n    'goldfish',\n    'goldmine',\n    'goldsmith',\n    'golf',\n    'goliath',\n    'gonad',\n    'gondola',\n    'gone',\n    'gong',\n    'good',\n    'gooey',\n    'goofball',\n    'goofiness',\n    'goofy',\n    'google',\n    'goon',\n    'gopher',\n    'gore',\n    'gorged',\n    'gorgeous',\n    'gory',\n    'gosling',\n    'gossip',\n    'gothic',\n    'gotten',\n    'gout',\n    'gown',\n    'grab',\n    'graceful',\n    'graceless',\n    'gracious',\n    'gradation',\n    'graded',\n    'grader',\n    'gradient',\n    'grading',\n    'gradually',\n    'graduate',\n    'graffiti',\n    'grafted',\n    'grafting',\n    'grain',\n    'granddad',\n    'grandkid',\n    'grandly',\n    'grandma',\n    'grandpa',\n    'grandson',\n    'granite',\n    'granny',\n    'granola',\n    'grant',\n    'granular',\n    'grape',\n    'graph',\n    'grapple',\n    'grappling',\n    'grasp',\n    'grass',\n    'gratified',\n    'gratify',\n    'grating',\n    'gratitude',\n    'gratuity',\n    'gravel',\n    'graveness',\n    'graves',\n    'graveyard',\n    'gravitate',\n    'gravity',\n    'gravy',\n    'gray',\n    'grazing',\n    'greasily',\n    'greedily',\n    'greedless',\n    'greedy',\n    'green',\n    'greeter',\n    'greeting',\n    'grew',\n    'greyhound',\n    'grid',\n    'grief',\n    'grievance',\n    'grieving',\n    'grievous',\n    'grill',\n    'grimace',\n    'grimacing',\n    'grime',\n    'griminess',\n    'grimy',\n    'grinch',\n    'grinning',\n    'grip',\n    'gristle',\n    'grit',\n    'groggily',\n    'groggy',\n    'groin',\n    'groom',\n    'groove',\n    'grooving',\n    'groovy',\n    'grope',\n    'ground',\n    'grouped',\n    'grout',\n    'grove',\n    'grower',\n    'growing',\n    'growl',\n    'grub',\n    'grudge',\n    'grudging',\n    'grueling',\n    'gruffly',\n    'grumble',\n    'grumbling',\n    'grumbly',\n    'grumpily',\n    'grunge',\n    'grunt',\n    'guacamole',\n    'guidable',\n    'guidance',\n    'guide',\n    'guiding',\n    'guileless',\n    'guise',\n    'gulf',\n    'gullible',\n    'gully',\n    'gulp',\n    'gumball',\n    'gumdrop',\n    'gumminess',\n    'gumming',\n    'gummy',\n    'gurgle',\n    'gurgling',\n    'guru',\n    'gush',\n    'gusto',\n    'gusty',\n    'gutless',\n    'guts',\n    'gutter',\n    'guy',\n    'guzzler',\n    'gyration',\n    'habitable',\n    'habitant',\n    'habitat',\n    'habitual',\n    'hacked',\n    'hacker',\n    'hacking',\n    'hacksaw',\n    'had',\n    'haggler',\n    'haiku',\n    'half',\n    'halogen',\n    'halt',\n    'halved',\n    'halves',\n    'hamburger',\n    'hamlet',\n    'hammock',\n    'hamper',\n    'hamster',\n    'hamstring',\n    'handbag',\n    'handball',\n    'handbook',\n    'handbrake',\n    'handcart',\n    'handclap',\n    'handclasp',\n    'handcraft',\n    'handcuff',\n    'handed',\n    'handful',\n    'handgrip',\n    'handgun',\n    'handheld',\n    'handiness',\n    'handiwork',\n    'handlebar',\n    'handled',\n    'handler',\n    'handling',\n    'handmade',\n    'handoff',\n    'handpick',\n    'handprint',\n    'handrail',\n    'handsaw',\n    'handset',\n    'handsfree',\n    'handshake',\n    'handstand',\n    'handwash',\n    'handwork',\n    'handwoven',\n    'handwrite',\n    'handyman',\n    'hangnail',\n    'hangout',\n    'hangover',\n    'hangup',\n    'hankering',\n    'hankie',\n    'hanky',\n    'haphazard',\n    'happening',\n    'happier',\n    'happiest',\n    'happily',\n    'happiness',\n    'happy',\n    'harbor',\n    'hardcopy',\n    'hardcore',\n    'hardcover',\n    'harddisk',\n    'hardened',\n    'hardener',\n    'hardening',\n    'hardhat',\n    'hardhead',\n    'hardiness',\n    'hardly',\n    'hardness',\n    'hardship',\n    'hardware',\n    'hardwired',\n    'hardwood',\n    'hardy',\n    'harmful',\n    'harmless',\n    'harmonica',\n    'harmonics',\n    'harmonize',\n    'harmony',\n    'harness',\n    'harpist',\n    'harsh',\n    'harvest',\n    'hash',\n    'hassle',\n    'haste',\n    'hastily',\n    'hastiness',\n    'hasty',\n    'hatbox',\n    'hatchback',\n    'hatchery',\n    'hatchet',\n    'hatching',\n    'hatchling',\n    'hate',\n    'hatless',\n    'hatred',\n    'haunt',\n    'haven',\n    'hazard',\n    'hazelnut',\n    'hazily',\n    'haziness',\n    'hazing',\n    'hazy',\n    'headache',\n    'headband',\n    'headboard',\n    'headcount',\n    'headdress',\n    'headed',\n    'header',\n    'headfirst',\n    'headgear',\n    'heading',\n    'headlamp',\n    'headless',\n    'headlock',\n    'headphone',\n    'headpiece',\n    'headrest',\n    'headroom',\n    'headscarf',\n    'headset',\n    'headsman',\n    'headstand',\n    'headstone',\n    'headway',\n    'headwear',\n    'heap',\n    'heat',\n    'heave',\n    'heavily',\n    'heaviness',\n    'heaving',\n    'hedge',\n    'hedging',\n    'heftiness',\n    'hefty',\n    'helium',\n    'helmet',\n    'helper',\n    'helpful',\n    'helping',\n    'helpless',\n    'helpline',\n    'hemlock',\n    'hemstitch',\n    'hence',\n    'henchman',\n    'henna',\n    'herald',\n    'herbal',\n    'herbicide',\n    'herbs',\n    'heritage',\n    'hermit',\n    'heroics',\n    'heroism',\n    'herring',\n    'herself',\n    'hertz',\n    'hesitancy',\n    'hesitant',\n    'hesitate',\n    'hexagon',\n    'hexagram',\n    'hubcap',\n    'huddle',\n    'huddling',\n    'huff',\n    'hug',\n    'hula',\n    'hulk',\n    'hull',\n    'human',\n    'humble',\n    'humbling',\n    'humbly',\n    'humid',\n    'humiliate',\n    'humility',\n    'humming',\n    'hummus',\n    'humongous',\n    'humorist',\n    'humorless',\n    'humorous',\n    'humpback',\n    'humped',\n    'humvee',\n    'hunchback',\n    'hundredth',\n    'hunger',\n    'hungrily',\n    'hungry',\n    'hunk',\n    'hunter',\n    'hunting',\n    'huntress',\n    'huntsman',\n    'hurdle',\n    'hurled',\n    'hurler',\n    'hurling',\n    'hurray',\n    'hurricane',\n    'hurried',\n    'hurry',\n    'hurt',\n    'husband',\n    'hush',\n    'husked',\n    'huskiness',\n    'hut',\n    'hybrid',\n    'hydrant',\n    'hydrated',\n    'hydration',\n    'hydrogen',\n    'hydroxide',\n    'hyperlink',\n    'hypertext',\n    'hyphen',\n    'hypnoses',\n    'hypnosis',\n    'hypnotic',\n    'hypnotism',\n    'hypnotist',\n    'hypnotize',\n    'hypocrisy',\n    'hypocrite',\n    'ibuprofen',\n    'ice',\n    'iciness',\n    'icing',\n    'icky',\n    'icon',\n    'icy',\n    'idealism',\n    'idealist',\n    'idealize',\n    'ideally',\n    'idealness',\n    'identical',\n    'identify',\n    'identity',\n    'ideology',\n    'idiocy',\n    'idiom',\n    'idly',\n    'igloo',\n    'ignition',\n    'ignore',\n    'iguana',\n    'illicitly',\n    'illusion',\n    'illusive',\n    'image',\n    'imaginary',\n    'imagines',\n    'imaging',\n    'imbecile',\n    'imitate',\n    'imitation',\n    'immature',\n    'immerse',\n    'immersion',\n    'imminent',\n    'immobile',\n    'immodest',\n    'immorally',\n    'immortal',\n    'immovable',\n    'immovably',\n    'immunity',\n    'immunize',\n    'impaired',\n    'impale',\n    'impart',\n    'impatient',\n    'impeach',\n    'impeding',\n    'impending',\n    'imperfect',\n    'imperial',\n    'impish',\n    'implant',\n    'implement',\n    'implicate',\n    'implicit',\n    'implode',\n    'implosion',\n    'implosive',\n    'imply',\n    'impolite',\n    'important',\n    'importer',\n    'impose',\n    'imposing',\n    'impotence',\n    'impotency',\n    'impotent',\n    'impound',\n    'imprecise',\n    'imprint',\n    'imprison',\n    'impromptu',\n    'improper',\n    'improve',\n    'improving',\n    'improvise',\n    'imprudent',\n    'impulse',\n    'impulsive',\n    'impure',\n    'impurity',\n    'iodine',\n    'iodize',\n    'ion',\n    'ipad',\n    'iphone',\n    'ipod',\n    'irate',\n    'irk',\n    'iron',\n    'irregular',\n    'irrigate',\n    'irritable',\n    'irritably',\n    'irritant',\n    'irritate',\n    'islamic',\n    'islamist',\n    'isolated',\n    'isolating',\n    'isolation',\n    'isotope',\n    'issue',\n    'issuing',\n    'italicize',\n    'italics',\n    'item',\n    'itinerary',\n    'itunes',\n    'ivory',\n    'ivy',\n    'jab',\n    'jackal',\n    'jacket',\n    'jackknife',\n    'jackpot',\n    'jailbird',\n    'jailbreak',\n    'jailer',\n    'jailhouse',\n    'jalapeno',\n    'jam',\n    'janitor',\n    'january',\n    'jargon',\n    'jarring',\n    'jasmine',\n    'jaundice',\n    'jaunt',\n    'java',\n    'jawed',\n    'jawless',\n    'jawline',\n    'jaws',\n    'jaybird',\n    'jaywalker',\n    'jazz',\n    'jeep',\n    'jeeringly',\n    'jellied',\n    'jelly',\n    'jersey',\n    'jester',\n    'jet',\n    'jiffy',\n    'jigsaw',\n    'jimmy',\n    'jingle',\n    'jingling',\n    'jinx',\n    'jitters',\n    'jittery',\n    'job',\n    'jockey',\n    'jockstrap',\n    'jogger',\n    'jogging',\n    'john',\n    'joining',\n    'jokester',\n    'jokingly',\n    'jolliness',\n    'jolly',\n    'jolt',\n    'jot',\n    'jovial',\n    'joyfully',\n    'joylessly',\n    'joyous',\n    'joyride',\n    'joystick',\n    'jubilance',\n    'jubilant',\n    'judge',\n    'judgingly',\n    'judicial',\n    'judiciary',\n    'judo',\n    'juggle',\n    'juggling',\n    'jugular',\n    'juice',\n    'juiciness',\n    'juicy',\n    'jujitsu',\n    'jukebox',\n    'july',\n    'jumble',\n    'jumbo',\n    'jump',\n    'junction',\n    'juncture',\n    'june',\n    'junior',\n    'juniper',\n    'junkie',\n    'junkman',\n    'junkyard',\n    'jurist',\n    'juror',\n    'jury',\n    'justice',\n    'justifier',\n    'justify',\n    'justly',\n    'justness',\n    'juvenile',\n    'kabob',\n    'kangaroo',\n    'karaoke',\n    'karate',\n    'karma',\n    'kebab',\n    'keenly',\n    'keenness',\n    'keep',\n    'keg',\n    'kelp',\n    'kennel',\n    'kept',\n    'kerchief',\n    'kerosene',\n    'kettle',\n    'kick',\n    'kiln',\n    'kilobyte',\n    'kilogram',\n    'kilometer',\n    'kilowatt',\n    'kilt',\n    'kimono',\n    'kindle',\n    'kindling',\n    'kindly',\n    'kindness',\n    'kindred',\n    'kinetic',\n    'kinfolk',\n    'king',\n    'kinship',\n    'kinsman',\n    'kinswoman',\n    'kissable',\n    'kisser',\n    'kissing',\n    'kitchen',\n    'kite',\n    'kitten',\n    'kitty',\n    'kiwi',\n    'kleenex',\n    'knapsack',\n    'knee',\n    'knelt',\n    'knickers',\n    'knoll',\n    'koala',\n    'kooky',\n    'kosher',\n    'krypton',\n    'kudos',\n    'kung',\n    'labored',\n    'laborer',\n    'laboring',\n    'laborious',\n    'labrador',\n    'ladder',\n    'ladies',\n    'ladle',\n    'ladybug',\n    'ladylike',\n    'lagged',\n    'lagging',\n    'lagoon',\n    'lair',\n    'lake',\n    'lance',\n    'landed',\n    'landfall',\n    'landfill',\n    'landing',\n    'landlady',\n    'landless',\n    'landline',\n    'landlord',\n    'landmark',\n    'landmass',\n    'landmine',\n    'landowner',\n    'landscape',\n    'landside',\n    'landslide',\n    'language',\n    'lankiness',\n    'lanky',\n    'lantern',\n    'lapdog',\n    'lapel',\n    'lapped',\n    'lapping',\n    'laptop',\n    'lard',\n    'large',\n    'lark',\n    'lash',\n    'lasso',\n    'last',\n    'latch',\n    'late',\n    'lather',\n    'latitude',\n    'latrine',\n    'latter',\n    'latticed',\n    'launch',\n    'launder',\n    'laundry',\n    'laurel',\n    'lavender',\n    'lavish',\n    'laxative',\n    'lazily',\n    'laziness',\n    'lazy',\n    'lecturer',\n    'left',\n    'legacy',\n    'legal',\n    'legend',\n    'legged',\n    'leggings',\n    'legible',\n    'legibly',\n    'legislate',\n    'lego',\n    'legroom',\n    'legume',\n    'legwarmer',\n    'legwork',\n    'lemon',\n    'lend',\n    'length',\n    'lens',\n    'lent',\n    'leotard',\n    'lesser',\n    'letdown',\n    'lethargic',\n    'lethargy',\n    'letter',\n    'lettuce',\n    'level',\n    'leverage',\n    'levers',\n    'levitate',\n    'levitator',\n    'liability',\n    'liable',\n    'liberty',\n    'librarian',\n    'library',\n    'licking',\n    'licorice',\n    'lid',\n    'life',\n    'lifter',\n    'lifting',\n    'liftoff',\n    'ligament',\n    'likely',\n    'likeness',\n    'likewise',\n    'liking',\n    'lilac',\n    'lilly',\n    'lily',\n    'limb',\n    'limeade',\n    'limelight',\n    'limes',\n    'limit',\n    'limping',\n    'limpness',\n    'line',\n    'lingo',\n    'linguini',\n    'linguist',\n    'lining',\n    'linked',\n    'linoleum',\n    'linseed',\n    'lint',\n    'lion',\n    'lip',\n    'liquefy',\n    'liqueur',\n    'liquid',\n    'lisp',\n    'list',\n    'litigate',\n    'litigator',\n    'litmus',\n    'litter',\n    'little',\n    'livable',\n    'lived',\n    'lively',\n    'liver',\n    'livestock',\n    'lividly',\n    'living',\n    'lizard',\n    'lubricant',\n    'lubricate',\n    'lucid',\n    'luckily',\n    'luckiness',\n    'luckless',\n    'lucrative',\n    'ludicrous',\n    'lugged',\n    'lukewarm',\n    'lullaby',\n    'lumber',\n    'luminance',\n    'luminous',\n    'lumpiness',\n    'lumping',\n    'lumpish',\n    'lunacy',\n    'lunar',\n    'lunchbox',\n    'luncheon',\n    'lunchroom',\n    'lunchtime',\n    'lung',\n    'lurch',\n    'lure',\n    'luridness',\n    'lurk',\n    'lushly',\n    'lushness',\n    'luster',\n    'lustfully',\n    'lustily',\n    'lustiness',\n    'lustrous',\n    'lusty',\n    'luxurious',\n    'luxury',\n    'lying',\n    'lyrically',\n    'lyricism',\n    'lyricist',\n    'lyrics',\n    'macarena',\n    'macaroni',\n    'macaw',\n    'mace',\n    'machine',\n    'machinist',\n    'magazine',\n    'magenta',\n    'maggot',\n    'magical',\n    'magician',\n    'magma',\n    'magnesium',\n    'magnetic',\n    'magnetism',\n    'magnetize',\n    'magnifier',\n    'magnify',\n    'magnitude',\n    'magnolia',\n    'mahogany',\n    'maimed',\n    'majestic',\n    'majesty',\n    'majorette',\n    'majority',\n    'makeover',\n    'maker',\n    'makeshift',\n    'making',\n    'malformed',\n    'malt',\n    'mama',\n    'mammal',\n    'mammary',\n    'mammogram',\n    'manager',\n    'managing',\n    'manatee',\n    'mandarin',\n    'mandate',\n    'mandatory',\n    'mandolin',\n    'manger',\n    'mangle',\n    'mango',\n    'mangy',\n    'manhandle',\n    'manhole',\n    'manhood',\n    'manhunt',\n    'manicotti',\n    'manicure',\n    'manifesto',\n    'manila',\n    'mankind',\n    'manlike',\n    'manliness',\n    'manly',\n    'manmade',\n    'manned',\n    'mannish',\n    'manor',\n    'manpower',\n    'mantis',\n    'mantra',\n    'manual',\n    'many',\n    'map',\n    'marathon',\n    'marauding',\n    'marbled',\n    'marbles',\n    'marbling',\n    'march',\n    'mardi',\n    'margarine',\n    'margarita',\n    'margin',\n    'marigold',\n    'marina',\n    'marine',\n    'marital',\n    'maritime',\n    'marlin',\n    'marmalade',\n    'maroon',\n    'married',\n    'marrow',\n    'marry',\n    'marshland',\n    'marshy',\n    'marsupial',\n    'marvelous',\n    'marxism',\n    'mascot',\n    'masculine',\n    'mashed',\n    'mashing',\n    'massager',\n    'masses',\n    'massive',\n    'mastiff',\n    'matador',\n    'matchbook',\n    'matchbox',\n    'matcher',\n    'matching',\n    'matchless',\n    'material',\n    'maternal',\n    'maternity',\n    'math',\n    'mating',\n    'matriarch',\n    'matrimony',\n    'matrix',\n    'matron',\n    'matted',\n    'matter',\n    'maturely',\n    'maturing',\n    'maturity',\n    'mauve',\n    'maverick',\n    'maximize',\n    'maximum',\n    'maybe',\n    'mayday',\n    'mayflower',\n    'moaner',\n    'moaning',\n    'mobile',\n    'mobility',\n    'mobilize',\n    'mobster',\n    'mocha',\n    'mocker',\n    'mockup',\n    'modified',\n    'modify',\n    'modular',\n    'modulator',\n    'module',\n    'moisten',\n    'moistness',\n    'moisture',\n    'molar',\n    'molasses',\n    'mold',\n    'molecular',\n    'molecule',\n    'molehill',\n    'mollusk',\n    'mom',\n    'monastery',\n    'monday',\n    'monetary',\n    'monetize',\n    'moneybags',\n    'moneyless',\n    'moneywise',\n    'mongoose',\n    'mongrel',\n    'monitor',\n    'monkhood',\n    'monogamy',\n    'monogram',\n    'monologue',\n    'monopoly',\n    'monorail',\n    'monotone',\n    'monotype',\n    'monoxide',\n    'monsieur',\n    'monsoon',\n    'monstrous',\n    'monthly',\n    'monument',\n    'moocher',\n    'moodiness',\n    'moody',\n    'mooing',\n    'moonbeam',\n    'mooned',\n    'moonlight',\n    'moonlike',\n    'moonlit',\n    'moonrise',\n    'moonscape',\n    'moonshine',\n    'moonstone',\n    'moonwalk',\n    'mop',\n    'morale',\n    'morality',\n    'morally',\n    'morbidity',\n    'morbidly',\n    'morphine',\n    'morphing',\n    'morse',\n    'mortality',\n    'mortally',\n    'mortician',\n    'mortified',\n    'mortify',\n    'mortuary',\n    'mosaic',\n    'mossy',\n    'most',\n    'mothball',\n    'mothproof',\n    'motion',\n    'motivate',\n    'motivator',\n    'motive',\n    'motocross',\n    'motor',\n    'motto',\n    'mountable',\n    'mountain',\n    'mounted',\n    'mounting',\n    'mourner',\n    'mournful',\n    'mouse',\n    'mousiness',\n    'moustache',\n    'mousy',\n    'mouth',\n    'movable',\n    'move',\n    'movie',\n    'moving',\n    'mower',\n    'mowing',\n    'much',\n    'muck',\n    'mud',\n    'mug',\n    'mulberry',\n    'mulch',\n    'mule',\n    'mulled',\n    'mullets',\n    'multiple',\n    'multiply',\n    'multitask',\n    'multitude',\n    'mumble',\n    'mumbling',\n    'mumbo',\n    'mummified',\n    'mummify',\n    'mummy',\n    'mumps',\n    'munchkin',\n    'mundane',\n    'municipal',\n    'muppet',\n    'mural',\n    'murkiness',\n    'murky',\n    'murmuring',\n    'muscular',\n    'museum',\n    'mushily',\n    'mushiness',\n    'mushroom',\n    'mushy',\n    'music',\n    'musket',\n    'muskiness',\n    'musky',\n    'mustang',\n    'mustard',\n    'muster',\n    'mustiness',\n    'musty',\n    'mutable',\n    'mutate',\n    'mutation',\n    'mute',\n    'mutilated',\n    'mutilator',\n    'mutiny',\n    'mutt',\n    'mutual',\n    'muzzle',\n    'myself',\n    'myspace',\n    'mystified',\n    'mystify',\n    'myth',\n    'nacho',\n    'nag',\n    'nail',\n    'name',\n    'naming',\n    'nanny',\n    'nanometer',\n    'nape',\n    'napkin',\n    'napped',\n    'napping',\n    'nappy',\n    'narrow',\n    'nastily',\n    'nastiness',\n    'national',\n    'native',\n    'nativity',\n    'natural',\n    'nature',\n    'naturist',\n    'nautical',\n    'navigate',\n    'navigator',\n    'navy',\n    'nearby',\n    'nearest',\n    'nearly',\n    'nearness',\n    'neatly',\n    'neatness',\n    'nebula',\n    'nebulizer',\n    'nectar',\n    'negate',\n    'negation',\n    'negative',\n    'neglector',\n    'negligee',\n    'negligent',\n    'negotiate',\n    'nemeses',\n    'nemesis',\n    'neon',\n    'nephew',\n    'nerd',\n    'nervous',\n    'nervy',\n    'nest',\n    'net',\n    'neurology',\n    'neuron',\n    'neurosis',\n    'neurotic',\n    'neuter',\n    'neutron',\n    'never',\n    'next',\n    'nibble',\n    'nickname',\n    'nicotine',\n    'niece',\n    'nifty',\n    'nimble',\n    'nimbly',\n    'nineteen',\n    'ninetieth',\n    'ninja',\n    'nintendo',\n    'ninth',\n    'nuclear',\n    'nuclei',\n    'nucleus',\n    'nugget',\n    'nullify',\n    'number',\n    'numbing',\n    'numbly',\n    'numbness',\n    'numeral',\n    'numerate',\n    'numerator',\n    'numeric',\n    'numerous',\n    'nuptials',\n    'nursery',\n    'nursing',\n    'nurture',\n    'nutcase',\n    'nutlike',\n    'nutmeg',\n    'nutrient',\n    'nutshell',\n    'nuttiness',\n    'nutty',\n    'nuzzle',\n    'nylon',\n    'oaf',\n    'oak',\n    'oasis',\n    'oat',\n    'obedience',\n    'obedient',\n    'obituary',\n    'object',\n    'obligate',\n    'obliged',\n    'oblivion',\n    'oblivious',\n    'oblong',\n    'obnoxious',\n    'oboe',\n    'obscure',\n    'obscurity',\n    'observant',\n    'observer',\n    'observing',\n    'obsessed',\n    'obsession',\n    'obsessive',\n    'obsolete',\n    'obstacle',\n    'obstinate',\n    'obstruct',\n    'obtain',\n    'obtrusive',\n    'obtuse',\n    'obvious',\n    'occultist',\n    'occupancy',\n    'occupant',\n    'occupier',\n    'occupy',\n    'ocean',\n    'ocelot',\n    'octagon',\n    'octane',\n    'october',\n    'octopus',\n    'ogle',\n    'oil',\n    'oink',\n    'ointment',\n    'okay',\n    'old',\n    'olive',\n    'olympics',\n    'omega',\n    'omen',\n    'ominous',\n    'omission',\n    'omit',\n    'omnivore',\n    'onboard',\n    'oncoming',\n    'ongoing',\n    'onion',\n    'online',\n    'onlooker',\n    'only',\n    'onscreen',\n    'onset',\n    'onshore',\n    'onslaught',\n    'onstage',\n    'onto',\n    'onward',\n    'onyx',\n    'oops',\n    'ooze',\n    'oozy',\n    'opacity',\n    'opal',\n    'open',\n    'operable',\n    'operate',\n    'operating',\n    'operation',\n    'operative',\n    'operator',\n    'opium',\n    'opossum',\n    'opponent',\n    'oppose',\n    'opposing',\n    'opposite',\n    'oppressed',\n    'oppressor',\n    'opt',\n    'opulently',\n    'osmosis',\n    'other',\n    'otter',\n    'ouch',\n    'ought',\n    'ounce',\n    'outage',\n    'outback',\n    'outbid',\n    'outboard',\n    'outbound',\n    'outbreak',\n    'outburst',\n    'outcast',\n    'outclass',\n    'outcome',\n    'outdated',\n    'outdoors',\n    'outer',\n    'outfield',\n    'outfit',\n    'outflank',\n    'outgoing',\n    'outgrow',\n    'outhouse',\n    'outing',\n    'outlast',\n    'outlet',\n    'outline',\n    'outlook',\n    'outlying',\n    'outmatch',\n    'outmost',\n    'outnumber',\n    'outplayed',\n    'outpost',\n    'outpour',\n    'output',\n    'outrage',\n    'outrank',\n    'outreach',\n    'outright',\n    'outscore',\n    'outsell',\n    'outshine',\n    'outshoot',\n    'outsider',\n    'outskirts',\n    'outsmart',\n    'outsource',\n    'outspoken',\n    'outtakes',\n    'outthink',\n    'outward',\n    'outweigh',\n    'outwit',\n    'oval',\n    'ovary',\n    'oven',\n    'overact',\n    'overall',\n    'overarch',\n    'overbid',\n    'overbill',\n    'overbite',\n    'overblown',\n    'overboard',\n    'overbook',\n    'overbuilt',\n    'overcast',\n    'overcoat',\n    'overcome',\n    'overcook',\n    'overcrowd',\n    'overdraft',\n    'overdrawn',\n    'overdress',\n    'overdrive',\n    'overdue',\n    'overeager',\n    'overeater',\n    'overexert',\n    'overfed',\n    'overfeed',\n    'overfill',\n    'overflow',\n    'overfull',\n    'overgrown',\n    'overhand',\n    'overhang',\n    'overhaul',\n    'overhead',\n    'overhear',\n    'overheat',\n    'overhung',\n    'overjoyed',\n    'overkill',\n    'overlabor',\n    'overlaid',\n    'overlap',\n    'overlay',\n    'overload',\n    'overlook',\n    'overlord',\n    'overlying',\n    'overnight',\n    'overpass',\n    'overpay',\n    'overplant',\n    'overplay',\n    'overpower',\n    'overprice',\n    'overrate',\n    'overreach',\n    'overreact',\n    'override',\n    'overripe',\n    'overrule',\n    'overrun',\n    'overshoot',\n    'overshot',\n    'oversight',\n    'oversized',\n    'oversleep',\n    'oversold',\n    'overspend',\n    'overstate',\n    'overstay',\n    'overstep',\n    'overstock',\n    'overstuff',\n    'oversweet',\n    'overtake',\n    'overthrow',\n    'overtime',\n    'overtly',\n    'overtone',\n    'overture',\n    'overturn',\n    'overuse',\n    'overvalue',\n    'overview',\n    'overwrite',\n    'owl',\n    'oxford',\n    'oxidant',\n    'oxidation',\n    'oxidize',\n    'oxidizing',\n    'oxygen',\n    'oxymoron',\n    'oyster',\n    'ozone',\n    'paced',\n    'pacemaker',\n    'pacific',\n    'pacifier',\n    'pacifism',\n    'pacifist',\n    'pacify',\n    'padded',\n    'padding',\n    'paddle',\n    'paddling',\n    'padlock',\n    'pagan',\n    'pager',\n    'paging',\n    'pajamas',\n    'palace',\n    'palatable',\n    'palm',\n    'palpable',\n    'palpitate',\n    'paltry',\n    'pampered',\n    'pamperer',\n    'pampers',\n    'pamphlet',\n    'panama',\n    'pancake',\n    'pancreas',\n    'panda',\n    'pandemic',\n    'pang',\n    'panhandle',\n    'panic',\n    'panning',\n    'panorama',\n    'panoramic',\n    'panther',\n    'pantomime',\n    'pantry',\n    'pants',\n    'pantyhose',\n    'paparazzi',\n    'papaya',\n    'paper',\n    'paprika',\n    'papyrus',\n    'parabola',\n    'parachute',\n    'parade',\n    'paradox',\n    'paragraph',\n    'parakeet',\n    'paralegal',\n    'paralyses',\n    'paralysis',\n    'paralyze',\n    'paramedic',\n    'parameter',\n    'paramount',\n    'parasail',\n    'parasite',\n    'parasitic',\n    'parcel',\n    'parched',\n    'parchment',\n    'pardon',\n    'parish',\n    'parka',\n    'parking',\n    'parkway',\n    'parlor',\n    'parmesan',\n    'parole',\n    'parrot',\n    'parsley',\n    'parsnip',\n    'partake',\n    'parted',\n    'parting',\n    'partition',\n    'partly',\n    'partner',\n    'partridge',\n    'party',\n    'passable',\n    'passably',\n    'passage',\n    'passcode',\n    'passenger',\n    'passerby',\n    'passing',\n    'passion',\n    'passive',\n    'passivism',\n    'passover',\n    'passport',\n    'password',\n    'pasta',\n    'pasted',\n    'pastel',\n    'pastime',\n    'pastor',\n    'pastrami',\n    'pasture',\n    'pasty',\n    'patchwork',\n    'patchy',\n    'paternal',\n    'paternity',\n    'path',\n    'patience',\n    'patient',\n    'patio',\n    'patriarch',\n    'patriot',\n    'patrol',\n    'patronage',\n    'patronize',\n    'pauper',\n    'pavement',\n    'paver',\n    'pavestone',\n    'pavilion',\n    'paving',\n    'pawing',\n    'payable',\n    'payback',\n    'paycheck',\n    'payday',\n    'payee',\n    'payer',\n    'paying',\n    'payment',\n    'payphone',\n    'payroll',\n    'pebble',\n    'pebbly',\n    'pecan',\n    'pectin',\n    'peculiar',\n    'peddling',\n    'pediatric',\n    'pedicure',\n    'pedigree',\n    'pedometer',\n    'pegboard',\n    'pelican',\n    'pellet',\n    'pelt',\n    'pelvis',\n    'penalize',\n    'penalty',\n    'pencil',\n    'pendant',\n    'pending',\n    'penholder',\n    'penknife',\n    'pennant',\n    'penniless',\n    'penny',\n    'penpal',\n    'pension',\n    'pentagon',\n    'pentagram',\n    'pep',\n    'perceive',\n    'percent',\n    'perch',\n    'percolate',\n    'perennial',\n    'perfected',\n    'perfectly',\n    'perfume',\n    'periscope',\n    'perish',\n    'perjurer',\n    'perjury',\n    'perkiness',\n    'perky',\n    'perm',\n    'peroxide',\n    'perpetual',\n    'perplexed',\n    'persecute',\n    'persevere',\n    'persuaded',\n    'persuader',\n    'pesky',\n    'peso',\n    'pessimism',\n    'pessimist',\n    'pester',\n    'pesticide',\n    'petal',\n    'petite',\n    'petition',\n    'petri',\n    'petroleum',\n    'petted',\n    'petticoat',\n    'pettiness',\n    'petty',\n    'petunia',\n    'phantom',\n    'phobia',\n    'phoenix',\n    'phonebook',\n    'phoney',\n    'phonics',\n    'phoniness',\n    'phony',\n    'phosphate',\n    'photo',\n    'phrase',\n    'phrasing',\n    'placard',\n    'placate',\n    'placidly',\n    'plank',\n    'planner',\n    'plant',\n    'plasma',\n    'plaster',\n    'plastic',\n    'plated',\n    'platform',\n    'plating',\n    'platinum',\n    'platonic',\n    'platter',\n    'platypus',\n    'plausible',\n    'plausibly',\n    'playable',\n    'playback',\n    'player',\n    'playful',\n    'playgroup',\n    'playhouse',\n    'playing',\n    'playlist',\n    'playmaker',\n    'playmate',\n    'playoff',\n    'playpen',\n    'playroom',\n    'playset',\n    'plaything',\n    'playtime',\n    'plaza',\n    'pleading',\n    'pleat',\n    'pledge',\n    'plentiful',\n    'plenty',\n    'plethora',\n    'plexiglas',\n    'pliable',\n    'plod',\n    'plop',\n    'plot',\n    'plow',\n    'ploy',\n    'pluck',\n    'plug',\n    'plunder',\n    'plunging',\n    'plural',\n    'plus',\n    'plutonium',\n    'plywood',\n    'poach',\n    'pod',\n    'poem',\n    'poet',\n    'pogo',\n    'pointed',\n    'pointer',\n    'pointing',\n    'pointless',\n    'pointy',\n    'poise',\n    'poison',\n    'poker',\n    'poking',\n    'polar',\n    'police',\n    'policy',\n    'polio',\n    'polish',\n    'politely',\n    'polka',\n    'polo',\n    'polyester',\n    'polygon',\n    'polygraph',\n    'polymer',\n    'poncho',\n    'pond',\n    'pony',\n    'popcorn',\n    'pope',\n    'poplar',\n    'popper',\n    'poppy',\n    'popsicle',\n    'populace',\n    'popular',\n    'populate',\n    'porcupine',\n    'pork',\n    'porous',\n    'porridge',\n    'portable',\n    'portal',\n    'portfolio',\n    'porthole',\n    'portion',\n    'portly',\n    'portside',\n    'poser',\n    'posh',\n    'posing',\n    'possible',\n    'possibly',\n    'possum',\n    'postage',\n    'postal',\n    'postbox',\n    'postcard',\n    'posted',\n    'poster',\n    'posting',\n    'postnasal',\n    'posture',\n    'postwar',\n    'pouch',\n    'pounce',\n    'pouncing',\n    'pound',\n    'pouring',\n    'pout',\n    'powdered',\n    'powdering',\n    'powdery',\n    'power',\n    'powwow',\n    'pox',\n    'praising',\n    'prance',\n    'prancing',\n    'pranker',\n    'prankish',\n    'prankster',\n    'prayer',\n    'praying',\n    'preacher',\n    'preaching',\n    'preachy',\n    'preamble',\n    'precinct',\n    'precise',\n    'precision',\n    'precook',\n    'precut',\n    'predator',\n    'predefine',\n    'predict',\n    'preface',\n    'prefix',\n    'preflight',\n    'preformed',\n    'pregame',\n    'pregnancy',\n    'pregnant',\n    'preheated',\n    'prelaunch',\n    'prelaw',\n    'prelude',\n    'premiere',\n    'premises',\n    'premium',\n    'prenatal',\n    'preoccupy',\n    'preorder',\n    'prepaid',\n    'prepay',\n    'preplan',\n    'preppy',\n    'preschool',\n    'prescribe',\n    'preseason',\n    'preset',\n    'preshow',\n    'president',\n    'presoak',\n    'press',\n    'presume',\n    'presuming',\n    'preteen',\n    'pretended',\n    'pretender',\n    'pretense',\n    'pretext',\n    'pretty',\n    'pretzel',\n    'prevail',\n    'prevalent',\n    'prevent',\n    'preview',\n    'previous',\n    'prewar',\n    'prewashed',\n    'prideful',\n    'pried',\n    'primal',\n    'primarily',\n    'primary',\n    'primate',\n    'primer',\n    'primp',\n    'princess',\n    'print',\n    'prior',\n    'prism',\n    'prison',\n    'prissy',\n    'pristine',\n    'privacy',\n    'private',\n    'privatize',\n    'prize',\n    'proactive',\n    'probable',\n    'probably',\n    'probation',\n    'probe',\n    'probing',\n    'probiotic',\n    'problem',\n    'procedure',\n    'process',\n    'proclaim',\n    'procreate',\n    'procurer',\n    'prodigal',\n    'prodigy',\n    'produce',\n    'product',\n    'profane',\n    'profanity',\n    'professed',\n    'professor',\n    'profile',\n    'profound',\n    'profusely',\n    'progeny',\n    'prognosis',\n    'program',\n    'progress',\n    'projector',\n    'prologue',\n    'prolonged',\n    'promenade',\n    'prominent',\n    'promoter',\n    'promotion',\n    'prompter',\n    'promptly',\n    'prone',\n    'prong',\n    'pronounce',\n    'pronto',\n    'proofing',\n    'proofread',\n    'proofs',\n    'propeller',\n    'properly',\n    'property',\n    'proponent',\n    'proposal',\n    'propose',\n    'props',\n    'prorate',\n    'protector',\n    'protegee',\n    'proton',\n    'prototype',\n    'protozoan',\n    'protract',\n    'protrude',\n    'proud',\n    'provable',\n    'proved',\n    'proven',\n    'provided',\n    'provider',\n    'providing',\n    'province',\n    'proving',\n    'provoke',\n    'provoking',\n    'provolone',\n    'prowess',\n    'prowler',\n    'prowling',\n    'proximity',\n    'proxy',\n    'prozac',\n    'prude',\n    'prudishly',\n    'prune',\n    'pruning',\n    'pry',\n    'psychic',\n    'public',\n    'publisher',\n    'pucker',\n    'pueblo',\n    'pug',\n    'pull',\n    'pulmonary',\n    'pulp',\n    'pulsate',\n    'pulse',\n    'pulverize',\n    'puma',\n    'pumice',\n    'pummel',\n    'punch',\n    'punctual',\n    'punctuate',\n    'punctured',\n    'pungent',\n    'punisher',\n    'punk',\n    'pupil',\n    'puppet',\n    'puppy',\n    'purchase',\n    'pureblood',\n    'purebred',\n    'purely',\n    'pureness',\n    'purgatory',\n    'purge',\n    'purging',\n    'purifier',\n    'purify',\n    'purist',\n    'puritan',\n    'purity',\n    'purple',\n    'purplish',\n    'purposely',\n    'purr',\n    'purse',\n    'pursuable',\n    'pursuant',\n    'pursuit',\n    'purveyor',\n    'pushcart',\n    'pushchair',\n    'pusher',\n    'pushiness',\n    'pushing',\n    'pushover',\n    'pushpin',\n    'pushup',\n    'pushy',\n    'putdown',\n    'putt',\n    'puzzle',\n    'puzzling',\n    'pyramid',\n    'pyromania',\n    'python',\n    'quack',\n    'quadrant',\n    'quail',\n    'quaintly',\n    'quake',\n    'quaking',\n    'qualified',\n    'qualifier',\n    'qualify',\n    'quality',\n    'qualm',\n    'quantum',\n    'quarrel',\n    'quarry',\n    'quartered',\n    'quarterly',\n    'quarters',\n    'quartet',\n    'quench',\n    'query',\n    'quicken',\n    'quickly',\n    'quickness',\n    'quicksand',\n    'quickstep',\n    'quiet',\n    'quill',\n    'quilt',\n    'quintet',\n    'quintuple',\n    'quirk',\n    'quit',\n    'quiver',\n    'quizzical',\n    'quotable',\n    'quotation',\n    'quote',\n    'rabid',\n    'race',\n    'racing',\n    'racism',\n    'rack',\n    'racoon',\n    'radar',\n    'radial',\n    'radiance',\n    'radiantly',\n    'radiated',\n    'radiation',\n    'radiator',\n    'radio',\n    'radish',\n    'raffle',\n    'raft',\n    'rage',\n    'ragged',\n    'raging',\n    'ragweed',\n    'raider',\n    'railcar',\n    'railing',\n    'railroad',\n    'railway',\n    'raisin',\n    'rake',\n    'raking',\n    'rally',\n    'ramble',\n    'rambling',\n    'ramp',\n    'ramrod',\n    'ranch',\n    'rancidity',\n    'random',\n    'ranged',\n    'ranger',\n    'ranging',\n    'ranked',\n    'ranking',\n    'ransack',\n    'ranting',\n    'rants',\n    'rare',\n    'rarity',\n    'rascal',\n    'rash',\n    'rasping',\n    'ravage',\n    'raven',\n    'ravine',\n    'raving',\n    'ravioli',\n    'ravishing',\n    'reabsorb',\n    'reach',\n    'reacquire',\n    'reaction',\n    'reactive',\n    'reactor',\n    'reaffirm',\n    'ream',\n    'reanalyze',\n    'reappear',\n    'reapply',\n    'reappoint',\n    'reapprove',\n    'rearrange',\n    'rearview',\n    'reason',\n    'reassign',\n    'reassure',\n    'reattach',\n    'reawake',\n    'rebalance',\n    'rebate',\n    'rebel',\n    'rebirth',\n    'reboot',\n    'reborn',\n    'rebound',\n    'rebuff',\n    'rebuild',\n    'rebuilt',\n    'reburial',\n    'rebuttal',\n    'recall',\n    'recant',\n    'recapture',\n    'recast',\n    'recede',\n    'recent',\n    'recess',\n    'recharger',\n    'recipient',\n    'recital',\n    'recite',\n    'reckless',\n    'reclaim',\n    'recliner',\n    'reclining',\n    'recluse',\n    'reclusive',\n    'recognize',\n    'recoil',\n    'recollect',\n    'recolor',\n    'reconcile',\n    'reconfirm',\n    'reconvene',\n    'recopy',\n    'record',\n    'recount',\n    'recoup',\n    'recovery',\n    'recreate',\n    'rectal',\n    'rectangle',\n    'rectified',\n    'rectify',\n    'recycled',\n    'recycler',\n    'recycling',\n    'reemerge',\n    'reenact',\n    'reenter',\n    'reentry',\n    'reexamine',\n    'referable',\n    'referee',\n    'reference',\n    'refill',\n    'refinance',\n    'refined',\n    'refinery',\n    'refining',\n    'refinish',\n    'reflected',\n    'reflector',\n    'reflex',\n    'reflux',\n    'refocus',\n    'refold',\n    'reforest',\n    'reformat',\n    'reformed',\n    'reformer',\n    'reformist',\n    'refract',\n    'refrain',\n    'refreeze',\n    'refresh',\n    'refried',\n    'refueling',\n    'refund',\n    'refurbish',\n    'refurnish',\n    'refusal',\n    'refuse',\n    'refusing',\n    'refutable',\n    'refute',\n    'regain',\n    'regalia',\n    'regally',\n    'reggae',\n    'regime',\n    'region',\n    'register',\n    'registrar',\n    'registry',\n    'regress',\n    'regretful',\n    'regroup',\n    'regular',\n    'regulate',\n    'regulator',\n    'rehab',\n    'reheat',\n    'rehire',\n    'rehydrate',\n    'reimburse',\n    'reissue',\n    'reiterate',\n    'rejoice',\n    'rejoicing',\n    'rejoin',\n    'rekindle',\n    'relapse',\n    'relapsing',\n    'relatable',\n    'related',\n    'relation',\n    'relative',\n    'relax',\n    'relay',\n    'relearn',\n    'release',\n    'relenting',\n    'reliable',\n    'reliably',\n    'reliance',\n    'reliant',\n    'relic',\n    'relieve',\n    'relieving',\n    'relight',\n    'relish',\n    'relive',\n    'reload',\n    'relocate',\n    'relock',\n    'reluctant',\n    'rely',\n    'remake',\n    'remark',\n    'remarry',\n    'rematch',\n    'remedial',\n    'remedy',\n    'remember',\n    'reminder',\n    'remindful',\n    'remission',\n    'remix',\n    'remnant',\n    'remodeler',\n    'remold',\n    'remorse',\n    'remote',\n    'removable',\n    'removal',\n    'removed',\n    'remover',\n    'removing',\n    'rename',\n    'renderer',\n    'rendering',\n    'rendition',\n    'renegade',\n    'renewable',\n    'renewably',\n    'renewal',\n    'renewed',\n    'renounce',\n    'renovate',\n    'renovator',\n    'rentable',\n    'rental',\n    'rented',\n    'renter',\n    'reoccupy',\n    'reoccur',\n    'reopen',\n    'reorder',\n    'repackage',\n    'repacking',\n    'repaint',\n    'repair',\n    'repave',\n    'repaying',\n    'repayment',\n    'repeal',\n    'repeated',\n    'repeater',\n    'repent',\n    'rephrase',\n    'replace',\n    'replay',\n    'replica',\n    'reply',\n    'reporter',\n    'repose',\n    'repossess',\n    'repost',\n    'repressed',\n    'reprimand',\n    'reprint',\n    'reprise',\n    'reproach',\n    'reprocess',\n    'reproduce',\n    'reprogram',\n    'reps',\n    'reptile',\n    'reptilian',\n    'repugnant',\n    'repulsion',\n    'repulsive',\n    'repurpose',\n    'reputable',\n    'reputably',\n    'request',\n    'require',\n    'requisite',\n    'reroute',\n    'rerun',\n    'resale',\n    'resample',\n    'rescuer',\n    'reseal',\n    'research',\n    'reselect',\n    'reseller',\n    'resemble',\n    'resend',\n    'resent',\n    'reset',\n    'reshape',\n    'reshoot',\n    'reshuffle',\n    'residence',\n    'residency',\n    'resident',\n    'residual',\n    'residue',\n    'resigned',\n    'resilient',\n    'resistant',\n    'resisting',\n    'resize',\n    'resolute',\n    'resolved',\n    'resonant',\n    'resonate',\n    'resort',\n    'resource',\n    'respect',\n    'resubmit',\n    'result',\n    'resume',\n    'resupply',\n    'resurface',\n    'resurrect',\n    'retail',\n    'retainer',\n    'retaining',\n    'retake',\n    'retaliate',\n    'retention',\n    'rethink',\n    'retinal',\n    'retired',\n    'retiree',\n    'retiring',\n    'retold',\n    'retool',\n    'retorted',\n    'retouch',\n    'retrace',\n    'retract',\n    'retrain',\n    'retread',\n    'retreat',\n    'retrial',\n    'retrieval',\n    'retriever',\n    'retry',\n    'return',\n    'retying',\n    'retype',\n    'reunion',\n    'reunite',\n    'reusable',\n    'reuse',\n    'reveal',\n    'reveler',\n    'revenge',\n    'revenue',\n    'reverb',\n    'revered',\n    'reverence',\n    'reverend',\n    'reversal',\n    'reverse',\n    'reversing',\n    'reversion',\n    'revert',\n    'revisable',\n    'revise',\n    'revision',\n    'revisit',\n    'revivable',\n    'revival',\n    'reviver',\n    'reviving',\n    'revocable',\n    'revoke',\n    'revolt',\n    'revolver',\n    'revolving',\n    'reward',\n    'rewash',\n    'rewind',\n    'rewire',\n    'reword',\n    'rework',\n    'rewrap',\n    'rewrite',\n    'rhyme',\n    'ribbon',\n    'ribcage',\n    'rice',\n    'riches',\n    'richly',\n    'richness',\n    'rickety',\n    'ricotta',\n    'riddance',\n    'ridden',\n    'ride',\n    'riding',\n    'rifling',\n    'rift',\n    'rigging',\n    'rigid',\n    'rigor',\n    'rimless',\n    'rimmed',\n    'rind',\n    'rink',\n    'rinse',\n    'rinsing',\n    'riot',\n    'ripcord',\n    'ripeness',\n    'ripening',\n    'ripping',\n    'ripple',\n    'rippling',\n    'riptide',\n    'rise',\n    'rising',\n    'risk',\n    'risotto',\n    'ritalin',\n    'ritzy',\n    'rival',\n    'riverbank',\n    'riverbed',\n    'riverboat',\n    'riverside',\n    'riveter',\n    'riveting',\n    'roamer',\n    'roaming',\n    'roast',\n    'robbing',\n    'robe',\n    'robin',\n    'robotics',\n    'robust',\n    'rockband',\n    'rocker',\n    'rocket',\n    'rockfish',\n    'rockiness',\n    'rocking',\n    'rocklike',\n    'rockslide',\n    'rockstar',\n    'rocky',\n    'rogue',\n    'roman',\n    'romp',\n    'rope',\n    'roping',\n    'roster',\n    'rosy',\n    'rotten',\n    'rotting',\n    'rotunda',\n    'roulette',\n    'rounding',\n    'roundish',\n    'roundness',\n    'roundup',\n    'roundworm',\n    'routine',\n    'routing',\n    'rover',\n    'roving',\n    'royal',\n    'rubbed',\n    'rubber',\n    'rubbing',\n    'rubble',\n    'rubdown',\n    'ruby',\n    'ruckus',\n    'rudder',\n    'rug',\n    'ruined',\n    'rule',\n    'rumble',\n    'rumbling',\n    'rummage',\n    'rumor',\n    'runaround',\n    'rundown',\n    'runner',\n    'running',\n    'runny',\n    'runt',\n    'runway',\n    'rupture',\n    'rural',\n    'ruse',\n    'rush',\n    'rust',\n    'rut',\n    'sabbath',\n    'sabotage',\n    'sacrament',\n    'sacred',\n    'sacrifice',\n    'sadden',\n    'saddlebag',\n    'saddled',\n    'saddling',\n    'sadly',\n    'sadness',\n    'safari',\n    'safeguard',\n    'safehouse',\n    'safely',\n    'safeness',\n    'saffron',\n    'saga',\n    'sage',\n    'sagging',\n    'saggy',\n    'said',\n    'saint',\n    'sake',\n    'salad',\n    'salami',\n    'salaried',\n    'salary',\n    'saline',\n    'salon',\n    'saloon',\n    'salsa',\n    'salt',\n    'salutary',\n    'salute',\n    'salvage',\n    'salvaging',\n    'salvation',\n    'same',\n    'sample',\n    'sampling',\n    'sanction',\n    'sanctity',\n    'sanctuary',\n    'sandal',\n    'sandbag',\n    'sandbank',\n    'sandbar',\n    'sandblast',\n    'sandbox',\n    'sanded',\n    'sandfish',\n    'sanding',\n    'sandlot',\n    'sandpaper',\n    'sandpit',\n    'sandstone',\n    'sandstorm',\n    'sandworm',\n    'sandy',\n    'sanitary',\n    'sanitizer',\n    'sank',\n    'santa',\n    'sapling',\n    'sappiness',\n    'sappy',\n    'sarcasm',\n    'sarcastic',\n    'sardine',\n    'sash',\n    'sasquatch',\n    'sassy',\n    'satchel',\n    'satiable',\n    'satin',\n    'satirical',\n    'satisfied',\n    'satisfy',\n    'saturate',\n    'saturday',\n    'sauciness',\n    'saucy',\n    'sauna',\n    'savage',\n    'savanna',\n    'saved',\n    'savings',\n    'savior',\n    'savor',\n    'saxophone',\n    'say',\n    'scabbed',\n    'scabby',\n    'scalded',\n    'scalding',\n    'scale',\n    'scaling',\n    'scallion',\n    'scallop',\n    'scalping',\n    'scam',\n    'scandal',\n    'scanner',\n    'scanning',\n    'scant',\n    'scapegoat',\n    'scarce',\n    'scarcity',\n    'scarecrow',\n    'scared',\n    'scarf',\n    'scarily',\n    'scariness',\n    'scarring',\n    'scary',\n    'scavenger',\n    'scenic',\n    'schedule',\n    'schematic',\n    'scheme',\n    'scheming',\n    'schilling',\n    'schnapps',\n    'scholar',\n    'science',\n    'scientist',\n    'scion',\n    'scoff',\n    'scolding',\n    'scone',\n    'scoop',\n    'scooter',\n    'scope',\n    'scorch',\n    'scorebook',\n    'scorecard',\n    'scored',\n    'scoreless',\n    'scorer',\n    'scoring',\n    'scorn',\n    'scorpion',\n    'scotch',\n    'scoundrel',\n    'scoured',\n    'scouring',\n    'scouting',\n    'scouts',\n    'scowling',\n    'scrabble',\n    'scraggly',\n    'scrambled',\n    'scrambler',\n    'scrap',\n    'scratch',\n    'scrawny',\n    'screen',\n    'scribble',\n    'scribe',\n    'scribing',\n    'scrimmage',\n    'script',\n    'scroll',\n    'scrooge',\n    'scrounger',\n    'scrubbed',\n    'scrubber',\n    'scruffy',\n    'scrunch',\n    'scrutiny',\n    'scuba',\n    'scuff',\n    'sculptor',\n    'sculpture',\n    'scurvy',\n    'scuttle',\n    'secluded',\n    'secluding',\n    'seclusion',\n    'second',\n    'secrecy',\n    'secret',\n    'sectional',\n    'sector',\n    'secular',\n    'securely',\n    'security',\n    'sedan',\n    'sedate',\n    'sedation',\n    'sedative',\n    'sediment',\n    'seduce',\n    'seducing',\n    'segment',\n    'seismic',\n    'seizing',\n    'seldom',\n    'selected',\n    'selection',\n    'selective',\n    'selector',\n    'self',\n    'seltzer',\n    'semantic',\n    'semester',\n    'semicolon',\n    'semifinal',\n    'seminar',\n    'semisoft',\n    'semisweet',\n    'senate',\n    'senator',\n    'send',\n    'senior',\n    'senorita',\n    'sensation',\n    'sensitive',\n    'sensitize',\n    'sensually',\n    'sensuous',\n    'sepia',\n    'september',\n    'septic',\n    'septum',\n    'sequel',\n    'sequence',\n    'sequester',\n    'series',\n    'sermon',\n    'serotonin',\n    'serpent',\n    'serrated',\n    'serve',\n    'service',\n    'serving',\n    'sesame',\n    'sessions',\n    'setback',\n    'setting',\n    'settle',\n    'settling',\n    'setup',\n    'sevenfold',\n    'seventeen',\n    'seventh',\n    'seventy',\n    'severity',\n    'shabby',\n    'shack',\n    'shaded',\n    'shadily',\n    'shadiness',\n    'shading',\n    'shadow',\n    'shady',\n    'shaft',\n    'shakable',\n    'shakily',\n    'shakiness',\n    'shaking',\n    'shaky',\n    'shale',\n    'shallot',\n    'shallow',\n    'shame',\n    'shampoo',\n    'shamrock',\n    'shank',\n    'shanty',\n    'shape',\n    'shaping',\n    'share',\n    'sharpener',\n    'sharper',\n    'sharpie',\n    'sharply',\n    'sharpness',\n    'shawl',\n    'sheath',\n    'shed',\n    'sheep',\n    'sheet',\n    'shelf',\n    'shell',\n    'shelter',\n    'shelve',\n    'shelving',\n    'sherry',\n    'shield',\n    'shifter',\n    'shifting',\n    'shiftless',\n    'shifty',\n    'shimmer',\n    'shimmy',\n    'shindig',\n    'shine',\n    'shingle',\n    'shininess',\n    'shining',\n    'shiny',\n    'ship',\n    'shirt',\n    'shivering',\n    'shock',\n    'shone',\n    'shoplift',\n    'shopper',\n    'shopping',\n    'shoptalk',\n    'shore',\n    'shortage',\n    'shortcake',\n    'shortcut',\n    'shorten',\n    'shorter',\n    'shorthand',\n    'shortlist',\n    'shortly',\n    'shortness',\n    'shorts',\n    'shortwave',\n    'shorty',\n    'shout',\n    'shove',\n    'showbiz',\n    'showcase',\n    'showdown',\n    'shower',\n    'showgirl',\n    'showing',\n    'showman',\n    'shown',\n    'showoff',\n    'showpiece',\n    'showplace',\n    'showroom',\n    'showy',\n    'shrank',\n    'shrapnel',\n    'shredder',\n    'shredding',\n    'shrewdly',\n    'shriek',\n    'shrill',\n    'shrimp',\n    'shrine',\n    'shrink',\n    'shrivel',\n    'shrouded',\n    'shrubbery',\n    'shrubs',\n    'shrug',\n    'shrunk',\n    'shucking',\n    'shudder',\n    'shuffle',\n    'shuffling',\n    'shun',\n    'shush',\n    'shut',\n    'shy',\n    'siamese',\n    'siberian',\n    'sibling',\n    'siding',\n    'sierra',\n    'siesta',\n    'sift',\n    'sighing',\n    'silenced',\n    'silencer',\n    'silent',\n    'silica',\n    'silicon',\n    'silk',\n    'silliness',\n    'silly',\n    'silo',\n    'silt',\n    'silver',\n    'similarly',\n    'simile',\n    'simmering',\n    'simple',\n    'simplify',\n    'simply',\n    'sincere',\n    'sincerity',\n    'singer',\n    'singing',\n    'single',\n    'singular',\n    'sinister',\n    'sinless',\n    'sinner',\n    'sinuous',\n    'sip',\n    'siren',\n    'sister',\n    'sitcom',\n    'sitter',\n    'sitting',\n    'situated',\n    'situation',\n    'sixfold',\n    'sixteen',\n    'sixth',\n    'sixties',\n    'sixtieth',\n    'sixtyfold',\n    'sizable',\n    'sizably',\n    'size',\n    'sizing',\n    'sizzle',\n    'sizzling',\n    'skater',\n    'skating',\n    'skedaddle',\n    'skeletal',\n    'skeleton',\n    'skeptic',\n    'sketch',\n    'skewed',\n    'skewer',\n    'skid',\n    'skied',\n    'skier',\n    'skies',\n    'skiing',\n    'skilled',\n    'skillet',\n    'skillful',\n    'skimmed',\n    'skimmer',\n    'skimming',\n    'skimpily',\n    'skincare',\n    'skinhead',\n    'skinless',\n    'skinning',\n    'skinny',\n    'skintight',\n    'skipper',\n    'skipping',\n    'skirmish',\n    'skirt',\n    'skittle',\n    'skydiver',\n    'skylight',\n    'skyline',\n    'skype',\n    'skyrocket',\n    'skyward',\n    'slab',\n    'slacked',\n    'slacker',\n    'slacking',\n    'slackness',\n    'slacks',\n    'slain',\n    'slam',\n    'slander',\n    'slang',\n    'slapping',\n    'slapstick',\n    'slashed',\n    'slashing',\n    'slate',\n    'slather',\n    'slaw',\n    'sled',\n    'sleek',\n    'sleep',\n    'sleet',\n    'sleeve',\n    'slept',\n    'sliceable',\n    'sliced',\n    'slicer',\n    'slicing',\n    'slick',\n    'slider',\n    'slideshow',\n    'sliding',\n    'slighted',\n    'slighting',\n    'slightly',\n    'slimness',\n    'slimy',\n    'slinging',\n    'slingshot',\n    'slinky',\n    'slip',\n    'slit',\n    'sliver',\n    'slobbery',\n    'slogan',\n    'sloped',\n    'sloping',\n    'sloppily',\n    'sloppy',\n    'slot',\n    'slouching',\n    'slouchy',\n    'sludge',\n    'slug',\n    'slum',\n    'slurp',\n    'slush',\n    'sly',\n    'small',\n    'smartly',\n    'smartness',\n    'smasher',\n    'smashing',\n    'smashup',\n    'smell',\n    'smelting',\n    'smile',\n    'smilingly',\n    'smirk',\n    'smite',\n    'smith',\n    'smitten',\n    'smock',\n    'smog',\n    'smoked',\n    'smokeless',\n    'smokiness',\n    'smoking',\n    'smoky',\n    'smolder',\n    'smooth',\n    'smother',\n    'smudge',\n    'smudgy',\n    'smuggler',\n    'smuggling',\n    'smugly',\n    'smugness',\n    'snack',\n    'snagged',\n    'snaking',\n    'snap',\n    'snare',\n    'snarl',\n    'snazzy',\n    'sneak',\n    'sneer',\n    'sneeze',\n    'sneezing',\n    'snide',\n    'sniff',\n    'snippet',\n    'snipping',\n    'snitch',\n    'snooper',\n    'snooze',\n    'snore',\n    'snoring',\n    'snorkel',\n    'snort',\n    'snout',\n    'snowbird',\n    'snowboard',\n    'snowbound',\n    'snowcap',\n    'snowdrift',\n    'snowdrop',\n    'snowfall',\n    'snowfield',\n    'snowflake',\n    'snowiness',\n    'snowless',\n    'snowman',\n    'snowplow',\n    'snowshoe',\n    'snowstorm',\n    'snowsuit',\n    'snowy',\n    'snub',\n    'snuff',\n    'snuggle',\n    'snugly',\n    'snugness',\n    'speak',\n    'spearfish',\n    'spearhead',\n    'spearman',\n    'spearmint',\n    'species',\n    'specimen',\n    'specked',\n    'speckled',\n    'specks',\n    'spectacle',\n    'spectator',\n    'spectrum',\n    'speculate',\n    'speech',\n    'speed',\n    'spellbind',\n    'speller',\n    'spelling',\n    'spendable',\n    'spender',\n    'spending',\n    'spent',\n    'spew',\n    'sphere',\n    'spherical',\n    'sphinx',\n    'spider',\n    'spied',\n    'spiffy',\n    'spill',\n    'spilt',\n    'spinach',\n    'spinal',\n    'spindle',\n    'spinner',\n    'spinning',\n    'spinout',\n    'spinster',\n    'spiny',\n    'spiral',\n    'spirited',\n    'spiritism',\n    'spirits',\n    'spiritual',\n    'splashed',\n    'splashing',\n    'splashy',\n    'splatter',\n    'spleen',\n    'splendid',\n    'splendor',\n    'splice',\n    'splicing',\n    'splinter',\n    'splotchy',\n    'splurge',\n    'spoilage',\n    'spoiled',\n    'spoiler',\n    'spoiling',\n    'spoils',\n    'spoken',\n    'spokesman',\n    'sponge',\n    'spongy',\n    'sponsor',\n    'spoof',\n    'spookily',\n    'spooky',\n    'spool',\n    'spoon',\n    'spore',\n    'sporting',\n    'sports',\n    'sporty',\n    'spotless',\n    'spotlight',\n    'spotted',\n    'spotter',\n    'spotting',\n    'spotty',\n    'spousal',\n    'spouse',\n    'spout',\n    'sprain',\n    'sprang',\n    'sprawl',\n    'spray',\n    'spree',\n    'sprig',\n    'spring',\n    'sprinkled',\n    'sprinkler',\n    'sprint',\n    'sprite',\n    'sprout',\n    'spruce',\n    'sprung',\n    'spry',\n    'spud',\n    'spur',\n    'sputter',\n    'spyglass',\n    'squabble',\n    'squad',\n    'squall',\n    'squander',\n    'squash',\n    'squatted',\n    'squatter',\n    'squatting',\n    'squeak',\n    'squealer',\n    'squealing',\n    'squeamish',\n    'squeegee',\n    'squeeze',\n    'squeezing',\n    'squid',\n    'squiggle',\n    'squiggly',\n    'squint',\n    'squire',\n    'squirt',\n    'squishier',\n    'squishy',\n    'stability',\n    'stabilize',\n    'stable',\n    'stack',\n    'stadium',\n    'staff',\n    'stage',\n    'staging',\n    'stagnant',\n    'stagnate',\n    'stainable',\n    'stained',\n    'staining',\n    'stainless',\n    'stalemate',\n    'staleness',\n    'stalling',\n    'stallion',\n    'stamina',\n    'stammer',\n    'stamp',\n    'stand',\n    'stank',\n    'staple',\n    'stapling',\n    'starboard',\n    'starch',\n    'stardom',\n    'stardust',\n    'starfish',\n    'stargazer',\n    'staring',\n    'stark',\n    'starless',\n    'starlet',\n    'starlight',\n    'starlit',\n    'starring',\n    'starry',\n    'starship',\n    'starter',\n    'starting',\n    'startle',\n    'startling',\n    'startup',\n    'starved',\n    'starving',\n    'stash',\n    'state',\n    'static',\n    'statistic',\n    'statue',\n    'stature',\n    'status',\n    'statute',\n    'statutory',\n    'staunch',\n    'stays',\n    'steadfast',\n    'steadier',\n    'steadily',\n    'steadying',\n    'steam',\n    'steed',\n    'steep',\n    'steerable',\n    'steering',\n    'steersman',\n    'stegosaur',\n    'stellar',\n    'stem',\n    'stench',\n    'stencil',\n    'step',\n    'stereo',\n    'sterile',\n    'sterility',\n    'sterilize',\n    'sterling',\n    'sternness',\n    'sternum',\n    'stew',\n    'stick',\n    'stiffen',\n    'stiffly',\n    'stiffness',\n    'stifle',\n    'stifling',\n    'stillness',\n    'stilt',\n    'stimulant',\n    'stimulate',\n    'stimuli',\n    'stimulus',\n    'stinger',\n    'stingily',\n    'stinging',\n    'stingray',\n    'stingy',\n    'stinking',\n    'stinky',\n    'stipend',\n    'stipulate',\n    'stir',\n    'stitch',\n    'stock',\n    'stoic',\n    'stoke',\n    'stole',\n    'stomp',\n    'stonewall',\n    'stoneware',\n    'stonework',\n    'stoning',\n    'stony',\n    'stood',\n    'stooge',\n    'stool',\n    'stoop',\n    'stoplight',\n    'stoppable',\n    'stoppage',\n    'stopped',\n    'stopper',\n    'stopping',\n    'stopwatch',\n    'storable',\n    'storage',\n    'storeroom',\n    'storewide',\n    'storm',\n    'stout',\n    'stove',\n    'stowaway',\n    'stowing',\n    'straddle',\n    'straggler',\n    'strained',\n    'strainer',\n    'straining',\n    'strangely',\n    'stranger',\n    'strangle',\n    'strategic',\n    'strategy',\n    'stratus',\n    'straw',\n    'stray',\n    'streak',\n    'stream',\n    'street',\n    'strength',\n    'strenuous',\n    'strep',\n    'stress',\n    'stretch',\n    'strewn',\n    'stricken',\n    'strict',\n    'stride',\n    'strife',\n    'strike',\n    'striking',\n    'strive',\n    'striving',\n    'strobe',\n    'strode',\n    'stroller',\n    'strongbox',\n    'strongly',\n    'strongman',\n    'struck',\n    'structure',\n    'strudel',\n    'struggle',\n    'strum',\n    'strung',\n    'strut',\n    'stubbed',\n    'stubble',\n    'stubbly',\n    'stubborn',\n    'stucco',\n    'stuck',\n    'student',\n    'studied',\n    'studio',\n    'study',\n    'stuffed',\n    'stuffing',\n    'stuffy',\n    'stumble',\n    'stumbling',\n    'stump',\n    'stung',\n    'stunned',\n    'stunner',\n    'stunning',\n    'stunt',\n    'stupor',\n    'sturdily',\n    'sturdy',\n    'styling',\n    'stylishly',\n    'stylist',\n    'stylized',\n    'stylus',\n    'suave',\n    'subarctic',\n    'subatomic',\n    'subdivide',\n    'subdued',\n    'subduing',\n    'subfloor',\n    'subgroup',\n    'subheader',\n    'subject',\n    'sublease',\n    'sublet',\n    'sublevel',\n    'sublime',\n    'submarine',\n    'submerge',\n    'submersed',\n    'submitter',\n    'subpanel',\n    'subpar',\n    'subplot',\n    'subprime',\n    'subscribe',\n    'subscript',\n    'subsector',\n    'subside',\n    'subsiding',\n    'subsidize',\n    'subsidy',\n    'subsoil',\n    'subsonic',\n    'substance',\n    'subsystem',\n    'subtext',\n    'subtitle',\n    'subtly',\n    'subtotal',\n    'subtract',\n    'subtype',\n    'suburb',\n    'subway',\n    'subwoofer',\n    'subzero',\n    'succulent',\n    'such',\n    'suction',\n    'sudden',\n    'sudoku',\n    'suds',\n    'sufferer',\n    'suffering',\n    'suffice',\n    'suffix',\n    'suffocate',\n    'suffrage',\n    'sugar',\n    'suggest',\n    'suing',\n    'suitable',\n    'suitably',\n    'suitcase',\n    'suitor',\n    'sulfate',\n    'sulfide',\n    'sulfite',\n    'sulfur',\n    'sulk',\n    'sullen',\n    'sulphate',\n    'sulphuric',\n    'sultry',\n    'superbowl',\n    'superglue',\n    'superhero',\n    'superior',\n    'superjet',\n    'superman',\n    'supermom',\n    'supernova',\n    'supervise',\n    'supper',\n    'supplier',\n    'supply',\n    'support',\n    'supremacy',\n    'supreme',\n    'surcharge',\n    'surely',\n    'sureness',\n    'surface',\n    'surfacing',\n    'surfboard',\n    'surfer',\n    'surgery',\n    'surgical',\n    'surging',\n    'surname',\n    'surpass',\n    'surplus',\n    'surprise',\n    'surreal',\n    'surrender',\n    'surrogate',\n    'surround',\n    'survey',\n    'survival',\n    'survive',\n    'surviving',\n    'survivor',\n    'sushi',\n    'suspect',\n    'suspend',\n    'suspense',\n    'sustained',\n    'sustainer',\n    'swab',\n    'swaddling',\n    'swagger',\n    'swampland',\n    'swan',\n    'swapping',\n    'swarm',\n    'sway',\n    'swear',\n    'sweat',\n    'sweep',\n    'swell',\n    'swept',\n    'swerve',\n    'swifter',\n    'swiftly',\n    'swiftness',\n    'swimmable',\n    'swimmer',\n    'swimming',\n    'swimsuit',\n    'swimwear',\n    'swinger',\n    'swinging',\n    'swipe',\n    'swirl',\n    'switch',\n    'swivel',\n    'swizzle',\n    'swooned',\n    'swoop',\n    'swoosh',\n    'swore',\n    'sworn',\n    'swung',\n    'sycamore',\n    'sympathy',\n    'symphonic',\n    'symphony',\n    'symptom',\n    'synapse',\n    'syndrome',\n    'synergy',\n    'synopses',\n    'synopsis',\n    'synthesis',\n    'synthetic',\n    'syrup',\n    'system',\n    't-shirt',\n    'tabasco',\n    'tabby',\n    'tableful',\n    'tables',\n    'tablet',\n    'tableware',\n    'tabloid',\n    'tackiness',\n    'tacking',\n    'tackle',\n    'tackling',\n    'tacky',\n    'taco',\n    'tactful',\n    'tactical',\n    'tactics',\n    'tactile',\n    'tactless',\n    'tadpole',\n    'taekwondo',\n    'tag',\n    'tainted',\n    'take',\n    'taking',\n    'talcum',\n    'talisman',\n    'tall',\n    'talon',\n    'tamale',\n    'tameness',\n    'tamer',\n    'tamper',\n    'tank',\n    'tanned',\n    'tannery',\n    'tanning',\n    'tantrum',\n    'tapeless',\n    'tapered',\n    'tapering',\n    'tapestry',\n    'tapioca',\n    'tapping',\n    'taps',\n    'tarantula',\n    'target',\n    'tarmac',\n    'tarnish',\n    'tarot',\n    'tartar',\n    'tartly',\n    'tartness',\n    'task',\n    'tassel',\n    'taste',\n    'tastiness',\n    'tasting',\n    'tasty',\n    'tattered',\n    'tattle',\n    'tattling',\n    'tattoo',\n    'taunt',\n    'tavern',\n    'thank',\n    'that',\n    'thaw',\n    'theater',\n    'theatrics',\n    'thee',\n    'theft',\n    'theme',\n    'theology',\n    'theorize',\n    'thermal',\n    'thermos',\n    'thesaurus',\n    'these',\n    'thesis',\n    'thespian',\n    'thicken',\n    'thicket',\n    'thickness',\n    'thieving',\n    'thievish',\n    'thigh',\n    'thimble',\n    'thing',\n    'think',\n    'thinly',\n    'thinner',\n    'thinness',\n    'thinning',\n    'thirstily',\n    'thirsting',\n    'thirsty',\n    'thirteen',\n    'thirty',\n    'thong',\n    'thorn',\n    'those',\n    'thousand',\n    'thrash',\n    'thread',\n    'threaten',\n    'threefold',\n    'thrift',\n    'thrill',\n    'thrive',\n    'thriving',\n    'throat',\n    'throbbing',\n    'throng',\n    'throttle',\n    'throwaway',\n    'throwback',\n    'thrower',\n    'throwing',\n    'thud',\n    'thumb',\n    'thumping',\n    'thursday',\n    'thus',\n    'thwarting',\n    'thyself',\n    'tiara',\n    'tibia',\n    'tidal',\n    'tidbit',\n    'tidiness',\n    'tidings',\n    'tidy',\n    'tiger',\n    'tighten',\n    'tightly',\n    'tightness',\n    'tightrope',\n    'tightwad',\n    'tigress',\n    'tile',\n    'tiling',\n    'till',\n    'tilt',\n    'timid',\n    'timing',\n    'timothy',\n    'tinderbox',\n    'tinfoil',\n    'tingle',\n    'tingling',\n    'tingly',\n    'tinker',\n    'tinkling',\n    'tinsel',\n    'tinsmith',\n    'tint',\n    'tinwork',\n    'tiny',\n    'tipoff',\n    'tipped',\n    'tipper',\n    'tipping',\n    'tiptoeing',\n    'tiptop',\n    'tiring',\n    'tissue',\n    'trace',\n    'tracing',\n    'track',\n    'traction',\n    'tractor',\n    'trade',\n    'trading',\n    'tradition',\n    'traffic',\n    'tragedy',\n    'trailing',\n    'trailside',\n    'train',\n    'traitor',\n    'trance',\n    'tranquil',\n    'transfer',\n    'transform',\n    'translate',\n    'transpire',\n    'transport',\n    'transpose',\n    'trapdoor',\n    'trapeze',\n    'trapezoid',\n    'trapped',\n    'trapper',\n    'trapping',\n    'traps',\n    'trash',\n    'travel',\n    'traverse',\n    'travesty',\n    'tray',\n    'treachery',\n    'treading',\n    'treadmill',\n    'treason',\n    'treat',\n    'treble',\n    'tree',\n    'trekker',\n    'tremble',\n    'trembling',\n    'tremor',\n    'trench',\n    'trend',\n    'trespass',\n    'triage',\n    'trial',\n    'triangle',\n    'tribesman',\n    'tribunal',\n    'tribune',\n    'tributary',\n    'tribute',\n    'triceps',\n    'trickery',\n    'trickily',\n    'tricking',\n    'trickle',\n    'trickster',\n    'tricky',\n    'tricolor',\n    'tricycle',\n    'trident',\n    'tried',\n    'trifle',\n    'trifocals',\n    'trillion',\n    'trilogy',\n    'trimester',\n    'trimmer',\n    'trimming',\n    'trimness',\n    'trinity',\n    'trio',\n    'tripod',\n    'tripping',\n    'triumph',\n    'trivial',\n    'trodden',\n    'trolling',\n    'trombone',\n    'trophy',\n    'tropical',\n    'tropics',\n    'trouble',\n    'troubling',\n    'trough',\n    'trousers',\n    'trout',\n    'trowel',\n    'truce',\n    'truck',\n    'truffle',\n    'trump',\n    'trunks',\n    'trustable',\n    'trustee',\n    'trustful',\n    'trusting',\n    'trustless',\n    'truth',\n    'try',\n    'tubby',\n    'tubeless',\n    'tubular',\n    'tucking',\n    'tuesday',\n    'tug',\n    'tuition',\n    'tulip',\n    'tumble',\n    'tumbling',\n    'tummy',\n    'turban',\n    'turbine',\n    'turbofan',\n    'turbojet',\n    'turbulent',\n    'turf',\n    'turkey',\n    'turmoil',\n    'turret',\n    'turtle',\n    'tusk',\n    'tutor',\n    'tutu',\n    'tux',\n    'tweak',\n    'tweed',\n    'tweet',\n    'tweezers',\n    'twelve',\n    'twentieth',\n    'twenty',\n    'twerp',\n    'twice',\n    'twiddle',\n    'twiddling',\n    'twig',\n    'twilight',\n    'twine',\n    'twins',\n    'twirl',\n    'twistable',\n    'twisted',\n    'twister',\n    'twisting',\n    'twisty',\n    'twitch',\n    'twitter',\n    'tycoon',\n    'tying',\n    'tyke',\n    'udder',\n    'ultimate',\n    'ultimatum',\n    'ultra',\n    'umbilical',\n    'umbrella',\n    'umpire',\n    'unabashed',\n    'unable',\n    'unadorned',\n    'unadvised',\n    'unafraid',\n    'unaired',\n    'unaligned',\n    'unaltered',\n    'unarmored',\n    'unashamed',\n    'unaudited',\n    'unawake',\n    'unaware',\n    'unbaked',\n    'unbalance',\n    'unbeaten',\n    'unbend',\n    'unbent',\n    'unbiased',\n    'unbitten',\n    'unblended',\n    'unblessed',\n    'unblock',\n    'unbolted',\n    'unbounded',\n    'unboxed',\n    'unbraided',\n    'unbridle',\n    'unbroken',\n    'unbuckled',\n    'unbundle',\n    'unburned',\n    'unbutton',\n    'uncanny',\n    'uncapped',\n    'uncaring',\n    'uncertain',\n    'unchain',\n    'unchanged',\n    'uncharted',\n    'uncheck',\n    'uncivil',\n    'unclad',\n    'unclaimed',\n    'unclamped',\n    'unclasp',\n    'uncle',\n    'unclip',\n    'uncloak',\n    'unclog',\n    'unclothed',\n    'uncoated',\n    'uncoiled',\n    'uncolored',\n    'uncombed',\n    'uncommon',\n    'uncooked',\n    'uncork',\n    'uncorrupt',\n    'uncounted',\n    'uncouple',\n    'uncouth',\n    'uncover',\n    'uncross',\n    'uncrown',\n    'uncrushed',\n    'uncured',\n    'uncurious',\n    'uncurled',\n    'uncut',\n    'undamaged',\n    'undated',\n    'undaunted',\n    'undead',\n    'undecided',\n    'undefined',\n    'underage',\n    'underarm',\n    'undercoat',\n    'undercook',\n    'undercut',\n    'underdog',\n    'underdone',\n    'underfed',\n    'underfeed',\n    'underfoot',\n    'undergo',\n    'undergrad',\n    'underhand',\n    'underline',\n    'underling',\n    'undermine',\n    'undermost',\n    'underpaid',\n    'underpass',\n    'underpay',\n    'underrate',\n    'undertake',\n    'undertone',\n    'undertook',\n    'undertow',\n    'underuse',\n    'underwear',\n    'underwent',\n    'underwire',\n    'undesired',\n    'undiluted',\n    'undivided',\n    'undocked',\n    'undoing',\n    'undone',\n    'undrafted',\n    'undress',\n    'undrilled',\n    'undusted',\n    'undying',\n    'unearned',\n    'unearth',\n    'unease',\n    'uneasily',\n    'uneasy',\n    'uneatable',\n    'uneaten',\n    'unedited',\n    'unelected',\n    'unending',\n    'unengaged',\n    'unenvied',\n    'unequal',\n    'unethical',\n    'uneven',\n    'unexpired',\n    'unexposed',\n    'unfailing',\n    'unfair',\n    'unfasten',\n    'unfazed',\n    'unfeeling',\n    'unfiled',\n    'unfilled',\n    'unfitted',\n    'unfitting',\n    'unfixable',\n    'unfixed',\n    'unflawed',\n    'unfocused',\n    'unfold',\n    'unfounded',\n    'unframed',\n    'unfreeze',\n    'unfrosted',\n    'unfrozen',\n    'unfunded',\n    'unglazed',\n    'ungloved',\n    'unglue',\n    'ungodly',\n    'ungraded',\n    'ungreased',\n    'unguarded',\n    'unguided',\n    'unhappily',\n    'unhappy',\n    'unharmed',\n    'unhealthy',\n    'unheard',\n    'unhearing',\n    'unheated',\n    'unhelpful',\n    'unhidden',\n    'unhinge',\n    'unhitched',\n    'unholy',\n    'unhook',\n    'unicorn',\n    'unicycle',\n    'unified',\n    'unifier',\n    'uniformed',\n    'uniformly',\n    'unify',\n    'unimpeded',\n    'uninjured',\n    'uninstall',\n    'uninsured',\n    'uninvited',\n    'union',\n    'uniquely',\n    'unisexual',\n    'unison',\n    'unissued',\n    'unit',\n    'universal',\n    'universe',\n    'unjustly',\n    'unkempt',\n    'unkind',\n    'unknotted',\n    'unknowing',\n    'unknown',\n    'unlaced',\n    'unlatch',\n    'unlawful',\n    'unleaded',\n    'unlearned',\n    'unleash',\n    'unless',\n    'unleveled',\n    'unlighted',\n    'unlikable',\n    'unlimited',\n    'unlined',\n    'unlinked',\n    'unlisted',\n    'unlit',\n    'unlivable',\n    'unloaded',\n    'unloader',\n    'unlocked',\n    'unlocking',\n    'unlovable',\n    'unloved',\n    'unlovely',\n    'unloving',\n    'unluckily',\n    'unlucky',\n    'unmade',\n    'unmanaged',\n    'unmanned',\n    'unmapped',\n    'unmarked',\n    'unmasked',\n    'unmasking',\n    'unmatched',\n    'unmindful',\n    'unmixable',\n    'unmixed',\n    'unmolded',\n    'unmoral',\n    'unmovable',\n    'unmoved',\n    'unmoving',\n    'unnamable',\n    'unnamed',\n    'unnatural',\n    'unneeded',\n    'unnerve',\n    'unnerving',\n    'unnoticed',\n    'unopened',\n    'unopposed',\n    'unpack',\n    'unpadded',\n    'unpaid',\n    'unpainted',\n    'unpaired',\n    'unpaved',\n    'unpeeled',\n    'unpicked',\n    'unpiloted',\n    'unpinned',\n    'unplanned',\n    'unplanted',\n    'unpleased',\n    'unpledged',\n    'unplowed',\n    'unplug',\n    'unpopular',\n    'unproven',\n    'unquote',\n    'unranked',\n    'unrated',\n    'unraveled',\n    'unreached',\n    'unread',\n    'unreal',\n    'unreeling',\n    'unrefined',\n    'unrelated',\n    'unrented',\n    'unrest',\n    'unretired',\n    'unrevised',\n    'unrigged',\n    'unripe',\n    'unrivaled',\n    'unroasted',\n    'unrobed',\n    'unroll',\n    'unruffled',\n    'unruly',\n    'unrushed',\n    'unsaddle',\n    'unsafe',\n    'unsaid',\n    'unsalted',\n    'unsaved',\n    'unsavory',\n    'unscathed',\n    'unscented',\n    'unscrew',\n    'unsealed',\n    'unseated',\n    'unsecured',\n    'unseeing',\n    'unseemly',\n    'unseen',\n    'unselect',\n    'unselfish',\n    'unsent',\n    'unsettled',\n    'unshackle',\n    'unshaken',\n    'unshaved',\n    'unshaven',\n    'unsheathe',\n    'unshipped',\n    'unsightly',\n    'unsigned',\n    'unskilled',\n    'unsliced',\n    'unsmooth',\n    'unsnap',\n    'unsocial',\n    'unsoiled',\n    'unsold',\n    'unsolved',\n    'unsorted',\n    'unspoiled',\n    'unspoken',\n    'unstable',\n    'unstaffed',\n    'unstamped',\n    'unsteady',\n    'unsterile',\n    'unstirred',\n    'unstitch',\n    'unstopped',\n    'unstuck',\n    'unstuffed',\n    'unstylish',\n    'unsubtle',\n    'unsubtly',\n    'unsuited',\n    'unsure',\n    'unsworn',\n    'untagged',\n    'untainted',\n    'untaken',\n    'untamed',\n    'untangled',\n    'untapped',\n    'untaxed',\n    'unthawed',\n    'unthread',\n    'untidy',\n    'untie',\n    'until',\n    'untimed',\n    'untimely',\n    'untitled',\n    'untoasted',\n    'untold',\n    'untouched',\n    'untracked',\n    'untrained',\n    'untreated',\n    'untried',\n    'untrimmed',\n    'untrue',\n    'untruth',\n    'unturned',\n    'untwist',\n    'untying',\n    'unusable',\n    'unused',\n    'unusual',\n    'unvalued',\n    'unvaried',\n    'unvarying',\n    'unveiled',\n    'unveiling',\n    'unvented',\n    'unviable',\n    'unvisited',\n    'unvocal',\n    'unwanted',\n    'unwarlike',\n    'unwary',\n    'unwashed',\n    'unwatched',\n    'unweave',\n    'unwed',\n    'unwelcome',\n    'unwell',\n    'unwieldy',\n    'unwilling',\n    'unwind',\n    'unwired',\n    'unwitting',\n    'unwomanly',\n    'unworldly',\n    'unworn',\n    'unworried',\n    'unworthy',\n    'unwound',\n    'unwoven',\n    'unwrapped',\n    'unwritten',\n    'unzip',\n    'upbeat',\n    'upchuck',\n    'upcoming',\n    'upcountry',\n    'update',\n    'upfront',\n    'upgrade',\n    'upheaval',\n    'upheld',\n    'uphill',\n    'uphold',\n    'uplifted',\n    'uplifting',\n    'upload',\n    'upon',\n    'upper',\n    'upright',\n    'uprising',\n    'upriver',\n    'uproar',\n    'uproot',\n    'upscale',\n    'upside',\n    'upstage',\n    'upstairs',\n    'upstart',\n    'upstate',\n    'upstream',\n    'upstroke',\n    'upswing',\n    'uptake',\n    'uptight',\n    'uptown',\n    'upturned',\n    'upward',\n    'upwind',\n    'uranium',\n    'urban',\n    'urchin',\n    'urethane',\n    'urgency',\n    'urgent',\n    'urging',\n    'urologist',\n    'urology',\n    'usable',\n    'usage',\n    'useable',\n    'used',\n    'uselessly',\n    'user',\n    'usher',\n    'usual',\n    'utensil',\n    'utility',\n    'utilize',\n    'utmost',\n    'utopia',\n    'utter',\n    'vacancy',\n    'vacant',\n    'vacate',\n    'vacation',\n    'vagabond',\n    'vagrancy',\n    'vagrantly',\n    'vaguely',\n    'vagueness',\n    'valiant',\n    'valid',\n    'valium',\n    'valley',\n    'valuables',\n    'value',\n    'vanilla',\n    'vanish',\n    'vanity',\n    'vanquish',\n    'vantage',\n    'vaporizer',\n    'variable',\n    'variably',\n    'varied',\n    'variety',\n    'various',\n    'varmint',\n    'varnish',\n    'varsity',\n    'varying',\n    'vascular',\n    'vaseline',\n    'vastly',\n    'vastness',\n    'veal',\n    'vegan',\n    'veggie',\n    'vehicular',\n    'velcro',\n    'velocity',\n    'velvet',\n    'vendetta',\n    'vending',\n    'vendor',\n    'veneering',\n    'vengeful',\n    'venomous',\n    'ventricle',\n    'venture',\n    'venue',\n    'venus',\n    'verbalize',\n    'verbally',\n    'verbose',\n    'verdict',\n    'verify',\n    'verse',\n    'version',\n    'versus',\n    'vertebrae',\n    'vertical',\n    'vertigo',\n    'very',\n    'vessel',\n    'vest',\n    'veteran',\n    'veto',\n    'vexingly',\n    'viability',\n    'viable',\n    'vibes',\n    'vice',\n    'vicinity',\n    'victory',\n    'video',\n    'viewable',\n    'viewer',\n    'viewing',\n    'viewless',\n    'viewpoint',\n    'vigorous',\n    'village',\n    'villain',\n    'vindicate',\n    'vineyard',\n    'vintage',\n    'violate',\n    'violation',\n    'violator',\n    'violet',\n    'violin',\n    'viper',\n    'viral',\n    'virtual',\n    'virtuous',\n    'virus',\n    'visa',\n    'viscosity',\n    'viscous',\n    'viselike',\n    'visible',\n    'visibly',\n    'vision',\n    'visiting',\n    'visitor',\n    'visor',\n    'vista',\n    'vitality',\n    'vitalize',\n    'vitally',\n    'vitamins',\n    'vivacious',\n    'vividly',\n    'vividness',\n    'vixen',\n    'vocalist',\n    'vocalize',\n    'vocally',\n    'vocation',\n    'voice',\n    'voicing',\n    'void',\n    'volatile',\n    'volley',\n    'voltage',\n    'volumes',\n    'voter',\n    'voting',\n    'voucher',\n    'vowed',\n    'vowel',\n    'voyage',\n    'wackiness',\n    'wad',\n    'wafer',\n    'waffle',\n    'waged',\n    'wager',\n    'wages',\n    'waggle',\n    'wagon',\n    'wake',\n    'waking',\n    'walk',\n    'walmart',\n    'walnut',\n    'walrus',\n    'waltz',\n    'wand',\n    'wannabe',\n    'wanted',\n    'wanting',\n    'wasabi',\n    'washable',\n    'washbasin',\n    'washboard',\n    'washbowl',\n    'washcloth',\n    'washday',\n    'washed',\n    'washer',\n    'washhouse',\n    'washing',\n    'washout',\n    'washroom',\n    'washstand',\n    'washtub',\n    'wasp',\n    'wasting',\n    'watch',\n    'water',\n    'waviness',\n    'waving',\n    'wavy',\n    'whacking',\n    'whacky',\n    'wham',\n    'wharf',\n    'wheat',\n    'whenever',\n    'whiff',\n    'whimsical',\n    'whinny',\n    'whiny',\n    'whisking',\n    'whoever',\n    'whole',\n    'whomever',\n    'whoopee',\n    'whooping',\n    'whoops',\n    'why',\n    'wick',\n    'widely',\n    'widen',\n    'widget',\n    'widow',\n    'width',\n    'wieldable',\n    'wielder',\n    'wife',\n    'wifi',\n    'wikipedia',\n    'wildcard',\n    'wildcat',\n    'wilder',\n    'wildfire',\n    'wildfowl',\n    'wildland',\n    'wildlife',\n    'wildly',\n    'wildness',\n    'willed',\n    'willfully',\n    'willing',\n    'willow',\n    'willpower',\n    'wilt',\n    'wimp',\n    'wince',\n    'wincing',\n    'wind',\n    'wing',\n    'winking',\n    'winner',\n    'winnings',\n    'winter',\n    'wipe',\n    'wired',\n    'wireless',\n    'wiring',\n    'wiry',\n    'wisdom',\n    'wise',\n    'wish',\n    'wisplike',\n    'wispy',\n    'wistful',\n    'wizard',\n    'wobble',\n    'wobbling',\n    'wobbly',\n    'wok',\n    'wolf',\n    'wolverine',\n    'womanhood',\n    'womankind',\n    'womanless',\n    'womanlike',\n    'womanly',\n    'womb',\n    'woof',\n    'wooing',\n    'wool',\n    'woozy',\n    'word',\n    'work',\n    'worried',\n    'worrier',\n    'worrisome',\n    'worry',\n    'worsening',\n    'worshiper',\n    'worst',\n    'wound',\n    'woven',\n    'wow',\n    'wrangle',\n    'wrath',\n    'wreath',\n    'wreckage',\n    'wrecker',\n    'wrecking',\n    'wrench',\n    'wriggle',\n    'wriggly',\n    'wrinkle',\n    'wrinkly',\n    'wrist',\n    'writing',\n    'written',\n    'wrongdoer',\n    'wronged',\n    'wrongful',\n    'wrongly',\n    'wrongness',\n    'wrought',\n    'xbox',\n    'xerox',\n    'yahoo',\n    'yam',\n    'yanking',\n    'yapping',\n    'yard',\n    'yarn',\n    'yeah',\n    'yearbook',\n    'yearling',\n    'yearly',\n    'yearning',\n    'yeast',\n    'yelling',\n    'yelp',\n    'yen',\n    'yesterday',\n    'yiddish',\n    'yield',\n    'yin',\n    'yippee',\n    'yo-yo',\n    'yodel',\n    'yoga',\n    'yogurt',\n    'yonder',\n    'yoyo',\n    'yummy',\n    'zap',\n    'zealous',\n    'zebra',\n    'zen',\n    'zeppelin',\n    'zero',\n    'zestfully',\n    'zesty',\n    'zigzagged',\n    'zipfile',\n    'zipping',\n    'zippy',\n    'zips',\n    'zit',\n    'zodiac',\n    'zombie',\n    'zone',\n    'zoning',\n    'zookeeper',\n    'zoologist',\n    'zoology',\n    'zoom',\n];\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.newSecureWords = void 0;\nconst getSecureRandom_1 = require(\"../primitives/getSecureRandom\");\nconst wordlist_1 = require(\"./wordlist\");\nasync function newSecureWords(size = 6) {\n    let words = [];\n    for (let i = 0; i < size; i++) {\n        words.push(wordlist_1.wordlist[await (0, getSecureRandom_1.getSecureRandomNumber)(0, wordlist_1.wordlist.length)]);\n    }\n    return words;\n}\nexports.newSecureWords = newSecureWords;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.newSecurePassphrase = void 0;\nconst __1 = require(\"..\");\nasync function newSecurePassphrase(size = 6) {\n    return (await (0, __1.newSecureWords)(size)).join('-');\n}\nexports.newSecurePassphrase = newSecurePassphrase;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.newSecurePassphrase = exports.newSecureWords = exports.signVerify = exports.sign = exports.keyPairFromSecretKey = exports.keyPairFromSeed = exports.openBox = exports.sealBox = exports.mnemonicWordList = exports.mnemonicToSeed = exports.mnemonicToWalletKey = exports.mnemonicToPrivateKey = exports.mnemonicValidate = exports.mnemonicNew = exports.getSecureRandomNumber = exports.getSecureRandomWords = exports.getSecureRandomBytes = exports.hmac_sha512 = exports.pbkdf2_sha512 = exports.sha512_sync = exports.sha512 = exports.sha256_sync = exports.sha256 = void 0;\nvar sha256_1 = require(\"./primitives/sha256\");\nObject.defineProperty(exports, \"sha256\", { enumerable: true, get: function () { return sha256_1.sha256; } });\nObject.defineProperty(exports, \"sha256_sync\", { enumerable: true, get: function () { return sha256_1.sha256_sync; } });\nvar sha512_1 = require(\"./primitives/sha512\");\nObject.defineProperty(exports, \"sha512\", { enumerable: true, get: function () { return sha512_1.sha512; } });\nObject.defineProperty(exports, \"sha512_sync\", { enumerable: true, get: function () { return sha512_1.sha512_sync; } });\nvar pbkdf2_sha512_1 = require(\"./primitives/pbkdf2_sha512\");\nObject.defineProperty(exports, \"pbkdf2_sha512\", { enumerable: true, get: function () { return pbkdf2_sha512_1.pbkdf2_sha512; } });\nvar hmac_sha512_1 = require(\"./primitives/hmac_sha512\");\nObject.defineProperty(exports, \"hmac_sha512\", { enumerable: true, get: function () { return hmac_sha512_1.hmac_sha512; } });\nvar getSecureRandom_1 = require(\"./primitives/getSecureRandom\");\nObject.defineProperty(exports, \"getSecureRandomBytes\", { enumerable: true, get: function () { return getSecureRandom_1.getSecureRandomBytes; } });\nObject.defineProperty(exports, \"getSecureRandomWords\", { enumerable: true, get: function () { return getSecureRandom_1.getSecureRandomWords; } });\nObject.defineProperty(exports, \"getSecureRandomNumber\", { enumerable: true, get: function () { return getSecureRandom_1.getSecureRandomNumber; } });\nvar mnemonic_1 = require(\"./mnemonic/mnemonic\");\nObject.defineProperty(exports, \"mnemonicNew\", { enumerable: true, get: function () { return mnemonic_1.mnemonicNew; } });\nObject.defineProperty(exports, \"mnemonicValidate\", { enumerable: true, get: function () { return mnemonic_1.mnemonicValidate; } });\nObject.defineProperty(exports, \"mnemonicToPrivateKey\", { enumerable: true, get: function () { return mnemonic_1.mnemonicToPrivateKey; } });\nObject.defineProperty(exports, \"mnemonicToWalletKey\", { enumerable: true, get: function () { return mnemonic_1.mnemonicToWalletKey; } });\nObject.defineProperty(exports, \"mnemonicToSeed\", { enumerable: true, get: function () { return mnemonic_1.mnemonicToSeed; } });\nvar wordlist_1 = require(\"./mnemonic/wordlist\");\nObject.defineProperty(exports, \"mnemonicWordList\", { enumerable: true, get: function () { return wordlist_1.wordlist; } });\nvar nacl_1 = require(\"./primitives/nacl\");\nObject.defineProperty(exports, \"sealBox\", { enumerable: true, get: function () { return nacl_1.sealBox; } });\nObject.defineProperty(exports, \"openBox\", { enumerable: true, get: function () { return nacl_1.openBox; } });\nObject.defineProperty(exports, \"keyPairFromSeed\", { enumerable: true, get: function () { return nacl_1.keyPairFromSeed; } });\nvar nacl_2 = require(\"./primitives/nacl\");\nObject.defineProperty(exports, \"keyPairFromSecretKey\", { enumerable: true, get: function () { return nacl_2.keyPairFromSecretKey; } });\nObject.defineProperty(exports, \"sign\", { enumerable: true, get: function () { return nacl_2.sign; } });\nObject.defineProperty(exports, \"signVerify\", { enumerable: true, get: function () { return nacl_2.signVerify; } });\nvar newSecureWords_1 = require(\"./passwords/newSecureWords\");\nObject.defineProperty(exports, \"newSecureWords\", { enumerable: true, get: function () { return newSecureWords_1.newSecureWords; } });\nvar newSecurePassphrase_1 = require(\"./passwords/newSecurePassphrase\");\nObject.defineProperty(exports, \"newSecurePassphrase\", { enumerable: true, get: function () { return newSecurePassphrase_1.newSecurePassphrase; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crc32c = void 0;\nconst POLY = 0x82f63b78;\nfunction crc32c(source) {\n    let crc = 0 ^ 0xffffffff;\n    for (let n = 0; n < source.length; n++) {\n        crc ^= source[n];\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n    }\n    crc = crc ^ 0xffffffff;\n    // Convert endianness\n    let res = Buffer.alloc(4);\n    res.writeInt32LE(crc);\n    return res;\n}\nexports.crc32c = crc32c;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.topologicalSort = void 0;\nfunction topologicalSort(src) {\n    let pending = [src];\n    let allCells = new Map();\n    let notPermCells = new Set();\n    let sorted = [];\n    while (pending.length > 0) {\n        const cells = [...pending];\n        pending = [];\n        for (let cell of cells) {\n            const hash = cell.hash().toString('hex');\n            if (allCells.has(hash)) {\n                continue;\n            }\n            notPermCells.add(hash);\n            allCells.set(hash, { cell: cell, refs: cell.refs.map((v) => v.hash().toString('hex')) });\n            for (let r of cell.refs) {\n                pending.push(r);\n            }\n        }\n    }\n    let tempMark = new Set();\n    function visit(hash) {\n        if (!notPermCells.has(hash)) {\n            return;\n        }\n        if (tempMark.has(hash)) {\n            throw Error('Not a DAG');\n        }\n        tempMark.add(hash);\n        for (let c of allCells.get(hash).refs) {\n            visit(c);\n        }\n        sorted.unshift(hash);\n        tempMark.delete(hash);\n        notPermCells.delete(hash);\n    }\n    while (notPermCells.size > 0) {\n        const id = Array.from(notPermCells)[0];\n        visit(id);\n    }\n    let indexes = new Map();\n    for (let i = 0; i < sorted.length; i++) {\n        indexes.set(sorted[i], i);\n    }\n    let result = [];\n    for (let ent of sorted) {\n        const rrr = allCells.get(ent);\n        result.push({ cell: rrr.cell, refs: rrr.refs.map((v) => indexes.get(v)) });\n    }\n    return result;\n}\nexports.topologicalSort = topologicalSort;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeToBoc = exports.deserializeBoc = exports.deserializeCellData = exports.parseBocHeader = exports.hashCell = void 0;\nconst ton_crypto_1 = require(\"ton-crypto\");\nconst __1 = require(\"..\");\nconst crc32c_1 = require(\"./utils/crc32c\");\nconst topologicalSort_1 = require(\"./utils/topologicalSort\");\nconst reachBocMagicPrefix = Buffer.from('B5EE9C72', 'hex');\nconst leanBocMagicPrefix = Buffer.from('68ff65f3', 'hex');\nconst leanBocMagicPrefixCRC = Buffer.from('acc3a728', 'hex');\n//\n// Hash Content\n//\nfunction getMaxDepth(cell) {\n    let maxDepth = 0;\n    if (cell.refs.length > 0) {\n        for (let k in cell.refs) {\n            const i = cell.refs[k];\n            if (getMaxDepth(i) > maxDepth) {\n                maxDepth = getMaxDepth(i);\n            }\n        }\n        maxDepth = maxDepth + 1;\n    }\n    return maxDepth;\n}\nfunction getMaxDepthAsArray(cell) {\n    const maxDepth = getMaxDepth(cell);\n    const d = Uint8Array.from({ length: 2 }, () => 0);\n    d[1] = maxDepth % 256;\n    d[0] = Math.floor(maxDepth / 256);\n    return Buffer.from(d);\n}\nfunction getMaxLevel(cell) {\n    //TODO level calculation differ for exotic cells\n    let maxLevel = 0;\n    for (let k in cell.refs) {\n        const i = cell.refs[k];\n        if (getMaxLevel(i) > maxLevel) {\n            maxLevel = getMaxLevel(i);\n        }\n    }\n    return maxLevel;\n}\nfunction getRefsDescriptor(cell) {\n    const d1 = Uint8Array.from({ length: 1 }, () => 0);\n    d1[0] = cell.refs.length + (cell.isExotic ? 1 : 0) * 8 + getMaxLevel(cell) * 32;\n    return Buffer.from(d1);\n}\n/**\n * @return {Uint8Array}\n */\nfunction getBitsDescriptor(cell) {\n    const d2 = Uint8Array.from({ length: 1 }, () => 0);\n    d2[0] = Math.ceil(cell.bits.cursor / 8) + Math.floor(cell.bits.cursor / 8);\n    return Buffer.from(d2);\n}\n/**\n * @return {Uint8Array}\n */\nfunction getDataWithDescriptors(cell) {\n    const d1 = getRefsDescriptor(cell);\n    const d2 = getBitsDescriptor(cell);\n    const tuBits = cell.bits.getTopUppedArray();\n    return Buffer.concat([d1, d2, tuBits]);\n}\nfunction getRepr(cell) {\n    const reprArray = [];\n    reprArray.push(getDataWithDescriptors(cell));\n    for (let k in cell.refs) {\n        const i = cell.refs[k];\n        reprArray.push(getMaxDepthAsArray(i));\n    }\n    for (let k in cell.refs) {\n        const i = cell.refs[k];\n        reprArray.push(i.hash());\n    }\n    let x = Buffer.alloc(0);\n    for (let k in reprArray) {\n        const i = reprArray[k];\n        x = Buffer.concat([x, i]);\n    }\n    return x;\n}\nfunction hashCell(cell) {\n    return (0, ton_crypto_1.sha256_sync)(getRepr(cell));\n}\nexports.hashCell = hashCell;\n//\n// Deserialize\n//\nfunction readNBytesUIntFromArray(n, ui8array) {\n    let res = 0;\n    for (let c = 0; c < n; c++) {\n        res *= 256;\n        res += ui8array[c];\n    }\n    return res;\n}\nfunction parseBocHeader(serializedBoc) {\n    // snake_case is used to match TON docs\n    // Preflight check\n    if (serializedBoc.length < 4 + 1) {\n        throw new Error('Not enough bytes for magic prefix');\n    }\n    const inputData = serializedBoc; // Save copy for crc32\n    // Parse prefix\n    const prefix = serializedBoc.slice(0, 4);\n    serializedBoc = serializedBoc.slice(4);\n    let has_idx = false;\n    let hash_crc32 = false;\n    let has_cache_bits = false;\n    let flags = 0;\n    let size_bytes = 0;\n    if (prefix.equals(reachBocMagicPrefix)) {\n        const flags_byte = serializedBoc[0];\n        has_idx = !!(flags_byte & 128);\n        hash_crc32 = !!(flags_byte & 64);\n        has_cache_bits = !!(flags_byte & 32);\n        flags = (flags_byte & 16) * 2 + (flags_byte & 8);\n        size_bytes = flags_byte % 8;\n    }\n    else if (prefix.equals(leanBocMagicPrefix)) {\n        has_idx = true;\n        hash_crc32 = false;\n        has_cache_bits = false;\n        flags = 0;\n        size_bytes = serializedBoc[0];\n    }\n    else if (prefix.equals(leanBocMagicPrefixCRC)) {\n        has_idx = true;\n        hash_crc32 = true;\n        has_cache_bits = false;\n        flags = 0;\n        size_bytes = serializedBoc[0];\n    }\n    else {\n        throw Error('Unknown magic prefix');\n    }\n    // Counters\n    serializedBoc = serializedBoc.slice(1);\n    if (serializedBoc.length < 1 + 5 * size_bytes) {\n        throw new Error('Not enough bytes for encoding cells counters');\n    }\n    const offset_bytes = serializedBoc[0];\n    serializedBoc = serializedBoc.slice(1);\n    const cells_num = readNBytesUIntFromArray(size_bytes, serializedBoc);\n    serializedBoc = serializedBoc.slice(size_bytes);\n    const roots_num = readNBytesUIntFromArray(size_bytes, serializedBoc);\n    serializedBoc = serializedBoc.slice(size_bytes);\n    const absent_num = readNBytesUIntFromArray(size_bytes, serializedBoc);\n    serializedBoc = serializedBoc.slice(size_bytes);\n    const tot_cells_size = readNBytesUIntFromArray(offset_bytes, serializedBoc);\n    serializedBoc = serializedBoc.slice(offset_bytes);\n    if (serializedBoc.length < roots_num * size_bytes) {\n        throw new Error('Not enough bytes for encoding root cells hashes');\n    }\n    // Roots\n    let root_list = [];\n    for (let c = 0; c < roots_num; c++) {\n        root_list.push(readNBytesUIntFromArray(size_bytes, serializedBoc));\n        serializedBoc = serializedBoc.slice(size_bytes);\n    }\n    // Index\n    let index = null;\n    if (has_idx) {\n        index = [];\n        if (serializedBoc.length < offset_bytes * cells_num)\n            throw new Error(\"Not enough bytes for index encoding\");\n        for (let c = 0; c < cells_num; c++) {\n            index.push(readNBytesUIntFromArray(offset_bytes, serializedBoc));\n            serializedBoc = serializedBoc.slice(offset_bytes);\n        }\n    }\n    // Cells\n    if (serializedBoc.length < tot_cells_size) {\n        throw new Error('Not enough bytes for cells data');\n    }\n    const cells_data = serializedBoc.slice(0, tot_cells_size);\n    serializedBoc = serializedBoc.slice(tot_cells_size);\n    // CRC32\n    if (hash_crc32) {\n        if (serializedBoc.length < 4) {\n            throw new Error('Not enough bytes for crc32c hashsum');\n        }\n        const length = inputData.length;\n        if (!(0, crc32c_1.crc32c)(inputData.slice(0, length - 4)).equals(serializedBoc.slice(0, 4))) {\n            throw new Error('Crc32c hashsum mismatch');\n        }\n        serializedBoc = serializedBoc.slice(4);\n    }\n    // Check if we parsed everything\n    if (serializedBoc.length) {\n        throw new Error('Too much bytes in BoC serialization');\n    }\n    return {\n        has_idx: has_idx,\n        hash_crc32: hash_crc32,\n        has_cache_bits: has_cache_bits,\n        flags: flags,\n        size_bytes: size_bytes,\n        off_bytes: offset_bytes,\n        cells_num: cells_num,\n        roots_num: roots_num,\n        absent_num: absent_num,\n        tot_cells_size: tot_cells_size,\n        root_list: root_list,\n        index: index,\n        cells_data: cells_data\n    };\n}\nexports.parseBocHeader = parseBocHeader;\nfunction deserializeCellData(cellData, referenceIndexSize) {\n    if (cellData.length < 2) {\n        throw new Error('Not enough bytes to encode cell descriptors');\n    }\n    const d1 = cellData[0], d2 = cellData[1];\n    cellData = cellData.slice(2);\n    // const level = Math.floor(d1 / 32);\n    const isExotic = !!(d1 & 8);\n    const refNum = d1 % 8;\n    const dataBytesize = Math.ceil(d2 / 2);\n    const fullfilledBytes = !(d2 % 2);\n    // Build Cell\n    let cell = new __1.Cell(isExotic);\n    let refs = [];\n    if (cellData.length < dataBytesize + referenceIndexSize * refNum) {\n        throw new Error('Not enough bytes to encode cell data');\n    }\n    // Cell data\n    cell.bits.setTopUppedArray(cellData.slice(0, dataBytesize), fullfilledBytes);\n    cellData = cellData.slice(dataBytesize);\n    // References\n    for (let r = 0; r < refNum; r++) {\n        refs.push(readNBytesUIntFromArray(referenceIndexSize, cellData));\n        cellData = cellData.slice(referenceIndexSize);\n    }\n    return { cell, refs, residue: cellData };\n}\nexports.deserializeCellData = deserializeCellData;\nfunction deserializeBoc(serializedBoc) {\n    const header = parseBocHeader(serializedBoc);\n    let cells_data = header.cells_data;\n    let cells_array = [];\n    let refs_array = [];\n    for (let ci = 0; ci < header.cells_num; ci++) {\n        let dd = deserializeCellData(cells_data, header.size_bytes);\n        cells_data = dd.residue;\n        cells_array.push(dd.cell);\n        refs_array.push(dd.refs);\n    }\n    for (let ci = header.cells_num - 1; ci >= 0; ci--) {\n        let c = refs_array[ci];\n        for (let ri = 0; ri < c.length; ri++) {\n            const r = c[ri];\n            if (r < ci) {\n                throw new Error('Topological order is broken');\n            }\n            cells_array[ci].refs[ri] = cells_array[r];\n        }\n    }\n    let root_cells = [];\n    for (let ri of header.root_list) {\n        root_cells.push(cells_array[ri]);\n    }\n    return root_cells;\n}\nexports.deserializeBoc = deserializeBoc;\n//\n// Serialize\n//\nfunction serializeForBoc(cell, refs, sSize) {\n    const reprArray = [];\n    reprArray.push(getDataWithDescriptors(cell));\n    for (let refIndexInt of refs) {\n        // const i = cell.refs[k];\n        // const refHash = (await i.hash()).toString('hex');\n        // const refIndexInt = cellsIndex[refHash];\n        // refIndexInt\n        let refIndexHex = refIndexInt.toString(16);\n        if (refIndexHex.length < sSize * 2) {\n            // Add leading zeros\n            refIndexHex = new Array(sSize * 2 - refIndexHex.length).fill(\"0\").join('') + refIndexHex;\n        }\n        const reference = Buffer.from(refIndexHex, 'hex');\n        reprArray.push(reference);\n    }\n    let x = Buffer.alloc(0);\n    for (let k in reprArray) {\n        const i = reprArray[k];\n        x = Buffer.concat([x, i]);\n    }\n    return x;\n}\nfunction serializeToBoc(cell, has_idx = true, hash_crc32 = true, has_cache_bits = false, flags = 0) {\n    const root_cell = cell;\n    const allCells = (0, topologicalSort_1.topologicalSort)(root_cell);\n    const cells_num = allCells.length;\n    const s = cells_num.toString(2).length; // Minimal number of bits to represent reference (unused?)\n    const s_bytes = Math.max(Math.ceil(s / 8), 1);\n    let full_size = 0;\n    let sizeIndex = [];\n    for (let cell_info of allCells) {\n        //TODO it should be async map or async for\n        sizeIndex.push(full_size);\n        full_size = full_size + (serializeForBoc(cell_info.cell, cell_info.refs, s_bytes)).length;\n    }\n    const offset_bits = full_size.toString(2).length; // Minimal number of bits to offset/len (unused?)\n    const offset_bytes = Math.max(Math.ceil(offset_bits / 8), 1);\n    const serialization = __1.BitString.alloc((1023 + 32 * 4 + 32 * 3) * allCells.length);\n    serialization.writeBuffer(reachBocMagicPrefix);\n    serialization.writeBitArray([has_idx, hash_crc32, has_cache_bits]);\n    serialization.writeUint(flags, 2);\n    serialization.writeUint(s_bytes, 3);\n    serialization.writeUint8(offset_bytes);\n    serialization.writeUint(cells_num, s_bytes * 8);\n    serialization.writeUint(1, s_bytes * 8); // One root for now\n    serialization.writeUint(0, s_bytes * 8); // Complete BOCs only\n    serialization.writeUint(full_size, offset_bytes * 8);\n    serialization.writeUint(0, s_bytes * 8); // Root shoulh have index 0\n    if (has_idx) {\n        allCells.forEach((cell_data, index) => serialization.writeUint(sizeIndex[index], offset_bytes * 8));\n    }\n    for (let cell_info of allCells) {\n        //TODO it should be async map or async for\n        const refcell_ser = serializeForBoc(cell_info.cell, cell_info.refs, s_bytes);\n        serialization.writeBuffer(refcell_ser);\n    }\n    let ser_arr = serialization.getTopUppedArray();\n    if (hash_crc32) {\n        ser_arr = Buffer.concat([ser_arr, (0, crc32c_1.crc32c)(ser_arr)]);\n    }\n    return ser_arr;\n}\nexports.serializeToBoc = serializeToBoc;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Cell = void 0;\nconst BitString_1 = require(\"./BitString\");\nconst boc_1 = require(\"./boc\");\nconst symbol_inspect_1 = __importDefault(require(\"symbol.inspect\"));\nconst __1 = require(\"..\");\nclass Cell {\n    constructor(isExotic = false, bits = BitString_1.BitString.alloc(1023)) {\n        this.refs = [];\n        this[_a] = () => this.toString();\n        this.isExotic = isExotic;\n        this.bits = bits;\n    }\n    static fromBoc(src) {\n        return (0, boc_1.deserializeBoc)(typeof src === 'string' ? Buffer.from(src, 'hex') : src);\n    }\n    beginParse() {\n        return __1.Slice.fromCell(this);\n    }\n    writeCell(anotherCell) {\n        this.bits.writeBitString(anotherCell.bits);\n        for (let r of anotherCell.refs) {\n            this.refs.push(r);\n        }\n    }\n    hash() {\n        return (0, boc_1.hashCell)(this);\n    }\n    toBoc(opts) {\n        let idx = (opts && opts.idx !== null && opts.idx !== undefined) ? opts.idx : true;\n        let crc32 = (opts && opts.crc32 !== null && opts.crc32 !== undefined) ? opts.crc32 : true;\n        let cacheBits = (opts && opts.cacheBits !== null && opts.cacheBits !== undefined) ? opts.cacheBits : false;\n        let flags = (opts && opts.flags !== null && opts.flags !== undefined) ? opts.flags : 0;\n        return (0, boc_1.serializeToBoc)(this, idx, crc32, cacheBits, flags);\n    }\n    toString(indent) {\n        let id = indent || '';\n        let s = id + 'x{' + this.bits.toFiftHex() + '}\\n';\n        for (let k in this.refs) {\n            const i = this.refs[k];\n            s += i.toString(id + ' ');\n        }\n        return s;\n    }\n    withReference(cell) {\n        this.refs.push(cell);\n        return this;\n    }\n    withData(src) {\n        for (let s of src) {\n            if (s === '0') {\n                this.bits.writeBit(0);\n            }\n            else {\n                this.bits.writeBit(1);\n            }\n        }\n        return this;\n    }\n    equals(src) {\n        if (src.refs.length !== this.refs.length) {\n            return false;\n        }\n        for (let i = 0; i < src.refs.length; i++) {\n            if (!src.refs[i].equals(this.refs[i])) {\n                return false;\n            }\n        }\n        return this.bits.equals(src.bits);\n    }\n}\nexports.Cell = Cell;\n_a = symbol_inspect_1.default;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crc16 = void 0;\nfunction crc16(data) {\n    const poly = 0x1021;\n    let reg = 0;\n    const message = Buffer.alloc(data.length + 2);\n    message.set(data);\n    for (let byte of message) {\n        let mask = 0x80;\n        while (mask > 0) {\n            reg <<= 1;\n            if (byte & mask) {\n                reg += 1;\n            }\n            mask >>= 1;\n            if (reg > 0xffff) {\n                reg &= 0xffff;\n                reg ^= poly;\n            }\n        }\n    }\n    return Buffer.from([Math.floor(reg / 256), reg % 256]);\n}\nexports.crc16 = crc16;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Address = void 0;\nconst symbol_inspect_1 = __importDefault(require(\"symbol.inspect\"));\nconst crc16_1 = require(\"../utils/crc16\");\nconst bounceable_tag = 0x11;\nconst non_bounceable_tag = 0x51;\nconst test_flag = 0x80;\nfunction parseFriendlyAddress(src) {\n    const data = Buffer.isBuffer(src) ? src : Buffer.from(src, 'base64');\n    // 1byte tag + 1byte workchain + 32 bytes hash + 2 byte crc\n    if (data.length !== 36) {\n        throw new Error('Unknown address type: byte length is not equal to 36');\n    }\n    // Prepare data\n    const addr = data.slice(0, 34);\n    const crc = data.slice(34, 36);\n    const calcedCrc = (0, crc16_1.crc16)(addr);\n    if (!(calcedCrc[0] === crc[0] && calcedCrc[1] === crc[1])) {\n        throw new Error('Invalid checksum: ' + src);\n    }\n    // Parse tag\n    let tag = addr[0];\n    let isTestOnly = false;\n    let isBounceable = false;\n    if (tag & test_flag) {\n        isTestOnly = true;\n        tag = tag ^ test_flag;\n    }\n    if ((tag !== bounceable_tag) && (tag !== non_bounceable_tag))\n        throw \"Unknown address tag\";\n    isBounceable = tag === bounceable_tag;\n    let workchain = null;\n    if (addr[1] === 0xff) { // TODO we should read signed integer here\n        workchain = -1;\n    }\n    else {\n        workchain = addr[1];\n    }\n    const hashPart = addr.slice(2, 34);\n    return { isTestOnly, isBounceable, workchain, hashPart };\n}\nclass Address {\n    constructor(workChain, hash) {\n        this.toString = () => {\n            return this.workChain + ':' + this.hash.toString('hex');\n        };\n        this.toBuffer = () => {\n            const addressWithChecksum = Buffer.alloc(36);\n            addressWithChecksum.set(this.hash);\n            addressWithChecksum.set([this.workChain, this.workChain, this.workChain, this.workChain], 32);\n            return addressWithChecksum;\n        };\n        this.toFriendlyBuffer = (args) => {\n            let testOnly = (args && args.testOnly !== undefined) ? args.testOnly : false;\n            let bounceable = (args && args.bounceable !== undefined) ? args.bounceable : true;\n            let tag = bounceable ? bounceable_tag : non_bounceable_tag;\n            if (testOnly) {\n                tag |= test_flag;\n            }\n            const addr = Buffer.alloc(34);\n            addr[0] = tag;\n            addr[1] = this.workChain;\n            addr.set(this.hash, 2);\n            const addressWithChecksum = Buffer.alloc(36);\n            addressWithChecksum.set(addr);\n            addressWithChecksum.set((0, crc16_1.crc16)(addr), 34);\n            return addressWithChecksum;\n        };\n        this.toFriendly = (args) => {\n            let urlSafe = (args && args.urlSafe !== undefined) ? args.urlSafe : true;\n            let buffer = this.toFriendlyBuffer(args);\n            if (urlSafe) {\n                return buffer.toString('base64').replace(/\\+/g, '-').replace(/\\//g, '_');\n            }\n            else {\n                return buffer.toString('base64');\n            }\n        };\n        this[_a] = () => this.toFriendly();\n        this.workChain = workChain;\n        this.hash = hash;\n        Object.freeze(this);\n    }\n    static isFriendly(source) {\n        return source.indexOf(':') < 0;\n    }\n    static normalize(source) {\n        if (typeof source === 'string') {\n            return Address.parse(source).toFriendly();\n        }\n        else {\n            return source.toFriendly();\n        }\n    }\n    static parse(source) {\n        if (Address.isFriendly(source)) {\n            return this.parseFriendly(source).address;\n        }\n        else {\n            return this.parseRaw(source);\n        }\n    }\n    static parseRaw(source) {\n        let workChain = parseInt(source.split(\":\")[0]);\n        let hash = Buffer.from(source.split(\":\")[1], 'hex');\n        return new Address(workChain, hash);\n    }\n    static parseFriendly(source) {\n        if (Buffer.isBuffer(source)) {\n            let r = parseFriendlyAddress(source);\n            return {\n                isBounceable: r.isBounceable,\n                isTestOnly: r.isTestOnly,\n                address: new Address(r.workchain, r.hashPart)\n            };\n        }\n        else {\n            let addr = source.replace(/\\-/g, '+').replace(/_/g, '\\/'); // Convert from url-friendly to true base64\n            let r = parseFriendlyAddress(addr);\n            return {\n                isBounceable: r.isBounceable,\n                isTestOnly: r.isTestOnly,\n                address: new Address(r.workchain, r.hashPart)\n            };\n        }\n    }\n    equals(src) {\n        if (src.workChain !== this.workChain) {\n            return false;\n        }\n        return src.hash.equals(this.hash);\n    }\n}\nexports.Address = Address;\n_a = symbol_inspect_1.default;\n", "'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n", "'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return toString.call(val) === '[object FormData]';\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return toString.call(val) === '[object URLSearchParams]';\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n", "'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n", "'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n", "'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n", "'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n", "'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n", "'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n", "'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || defaults.transitional;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n", "'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\nvar enhanceError = require('./core/enhanceError');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: {\n    silentJSONParsing: true,\n    forcedJSONParsing: true,\n    clarifyTimeoutError: false\n  },\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n", "'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('./../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n", "'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n", "'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n", "module.exports = {\n  \"version\": \"0.25.0\"\n};", "'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  if (!config.url) {\n    throw new Error('Provided config url is not valid');\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  if (!config.url) {\n    throw new Error('Provided config url is not valid');\n  }\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n", "'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n", "'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n", "module.exports = require('./lib/axios');", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpApi = void 0;\nconst t = __importStar(require(\"io-ts\"));\nconst Either_1 = require(\"fp-ts/lib/Either\");\nconst io_ts_reporters_1 = __importDefault(require(\"io-ts-reporters\"));\nconst dataloader_1 = __importDefault(require(\"dataloader\"));\nconst axios_1 = __importDefault(require(\"axios\"));\nconst version = require('../../../package.json').version;\nconst blockIdExt = t.type({\n    '@type': t.literal('ton.blockIdExt'),\n    workchain: t.number,\n    shard: t.string,\n    seqno: t.number,\n    root_hash: t.string,\n    file_hash: t.string\n});\nconst addressInformation = t.type({\n    balance: t.union([t.number, t.string]),\n    state: t.union([t.literal('active'), t.literal('uninitialized'), t.literal('frozen')]),\n    data: t.string,\n    code: t.string,\n    last_transaction_id: t.type({\n        '@type': t.literal('internal.transactionId'),\n        lt: t.string,\n        hash: t.string\n    }),\n    block_id: blockIdExt,\n    sync_utime: t.number\n});\nconst bocResponse = t.type({\n    '@type': t.literal('ok')\n});\nconst feeResponse = t.type({\n    '@type': t.literal('query.fees'),\n    source_fees: t.type({\n        '@type': t.literal('fees'),\n        in_fwd_fee: t.number,\n        storage_fee: t.number,\n        gas_fee: t.number,\n        fwd_fee: t.number\n    })\n});\nconst callGetMethod = t.type({\n    gas_used: t.number,\n    exit_code: t.number,\n    stack: t.array(t.unknown)\n});\nconst messageData = t.union([\n    t.type({\n        '@type': t.literal('msg.dataRaw'),\n        'body': t.string\n    }),\n    t.type({\n        '@type': t.literal('msg.dataText'),\n        'text': t.string\n    }),\n    t.type({\n        '@type': t.literal('msg.dataDecryptedText'),\n        'text': t.string\n    }),\n    t.type({\n        '@type': t.literal('msg.dataEncryptedText'),\n        'text': t.string\n    })\n]);\nconst message = t.type({\n    source: t.string,\n    destination: t.string,\n    value: t.string,\n    fwd_fee: t.string,\n    ihr_fee: t.string,\n    created_lt: t.string,\n    body_hash: t.string,\n    msg_data: messageData\n});\nconst transaction = t.type({\n    data: t.string,\n    utime: t.number,\n    transaction_id: t.type({\n        lt: t.string,\n        hash: t.string\n    }),\n    fee: t.string,\n    storage_fee: t.string,\n    other_fee: t.string,\n    in_msg: t.union([t.undefined, message]),\n    out_msgs: t.array(message)\n});\nconst getTransactions = t.array(transaction);\nconst getMasterchain = t.type({\n    state_root_hash: t.string,\n    last: blockIdExt,\n    init: blockIdExt\n});\nconst getShards = t.type({\n    shards: t.array(blockIdExt)\n});\nconst blockShortTxt = t.type({\n    '@type': t.literal('blocks.shortTxId'),\n    mode: t.number,\n    account: t.string,\n    lt: t.string,\n    hash: t.string\n});\nconst getBlockTransactions = t.type({\n    id: blockIdExt,\n    req_count: t.number,\n    incomplete: t.boolean,\n    transactions: t.array(blockShortTxt)\n});\nclass TypedCache {\n    constructor(namespace, cache, codec, keyEncoder) {\n        this.namespace = namespace;\n        this.cache = cache;\n        this.codec = codec;\n        this.keyEncoder = keyEncoder;\n    }\n    async get(key) {\n        let ex = await this.cache.get(this.namespace, this.keyEncoder(key));\n        if (ex) {\n            let decoded = this.codec.decode(JSON.parse(ex));\n            if ((0, Either_1.isRight)(decoded)) {\n                return decoded.right;\n            }\n        }\n        return null;\n    }\n    async set(key, value) {\n        if (value !== null) {\n            await this.cache.set(this.namespace, this.keyEncoder(key), JSON.stringify(value));\n        }\n        else {\n            await this.cache.set(this.namespace, this.keyEncoder(key), null);\n        }\n    }\n}\nclass HttpApi {\n    constructor(endpoint, cache, parameters) {\n        this.endpoint = endpoint;\n        this.cache = cache;\n        this.parameters = {\n            timeout: (parameters === null || parameters === void 0 ? void 0 : parameters.timeout) || 30000,\n            apiKey: parameters === null || parameters === void 0 ? void 0 : parameters.apiKey\n        };\n        // Shard\n        this.shardCache = new TypedCache('ton-shard', cache, t.array(blockIdExt), (src) => src + '');\n        this.shardLoader = new dataloader_1.default(async (src) => {\n            return await Promise.all(src.map(async (v) => {\n                const cached = await this.shardCache.get(v);\n                if (cached) {\n                    return cached;\n                }\n                let loaded = (await this.doCall('shards', { seqno: v }, getShards)).shards;\n                await this.shardCache.set(v, loaded);\n                return loaded;\n            }));\n        });\n        // Shard Transactions\n        this.shardTransactionsCache = new TypedCache('ton-shard-tx', cache, getBlockTransactions, (src) => src.workchain + ':' + src.shard + ':' + src.seqno);\n        this.shardTransactionsLoader = new dataloader_1.default(async (src) => {\n            return await Promise.all(src.map(async (v) => {\n                const cached = await this.shardTransactionsCache.get(v);\n                if (cached) {\n                    return cached;\n                }\n                let loaded = await this.doCall('getBlockTransactions', { workchain: v.workchain, seqno: v.seqno, shard: v.shard }, getBlockTransactions);\n                await this.shardTransactionsCache.set(v, loaded);\n                return loaded;\n            }));\n        }, { cacheKeyFn: (src) => src.workchain + ':' + src.shard + ':' + src.seqno });\n    }\n    getAddressInformation(address) {\n        return this.doCall('getAddressInformation', { address: address.toString() }, addressInformation);\n    }\n    async getTransactions(address, opts) {\n        const inclusive = opts.inclusive;\n        delete opts.inclusive;\n        // Convert hash\n        let hash = undefined;\n        if (opts.hash) {\n            hash = Buffer.from(opts.hash, 'base64').toString('hex');\n        }\n        // Adjust limit\n        let limit = opts.limit;\n        if (opts.hash && opts.lt && inclusive !== true) {\n            limit++;\n        }\n        // Do request\n        let res = await this.doCall('getTransactions', { address: address.toString(), ...opts, limit, hash }, getTransactions);\n        if (res.length > limit) {\n            res = res.slice(0, limit);\n        }\n        // Adjust result\n        if (opts.hash && opts.lt && inclusive !== true) {\n            res.shift();\n            return res;\n        }\n        else {\n            return res;\n        }\n    }\n    async getMasterchainInfo() {\n        return await this.doCall('getMasterchainInfo', {}, getMasterchain);\n    }\n    async getShards(seqno) {\n        return await this.shardLoader.load(seqno);\n    }\n    async getBlockTransactions(workchain, seqno, shard) {\n        return await this.shardTransactionsLoader.load({ workchain, seqno, shard });\n    }\n    async getTransaction(address, lt, hash) {\n        let convHash = Buffer.from(hash, 'base64').toString('hex');\n        let res = await this.doCall('getTransactions', { address: address.toString(), lt, hash: convHash, limit: 1 }, getTransactions);\n        let ex = res.find((v) => v.transaction_id.lt === lt && v.transaction_id.hash === hash);\n        if (ex) {\n            return ex;\n        }\n        else {\n            return null;\n        }\n    }\n    async callGetMethod(address, method, params) {\n        return await this.doCall('runGetMethod', { address: address.toString(), method, stack: params }, callGetMethod);\n    }\n    async sendBoc(body) {\n        await this.doCall('sendBoc', { boc: body.toString('base64') }, bocResponse);\n    }\n    async estimateFee(address, args) {\n        return await this.doCall('estimateFee', {\n            address: address.toFriendly(),\n            body: (await args.body.toBoc({ idx: false })).toString('base64'),\n            'init_data': args.initData ? (await args.initData.toBoc({ idx: false })).toString('base64') : '',\n            'init_code': args.initCode ? (await args.initCode.toBoc({ idx: false })).toString('base64') : '',\n            ignore_chksig: args.ignoreSignature\n        }, feeResponse);\n    }\n    async doCall(method, body, codec) {\n        let headers = {\n            'Content-Type': 'application/json',\n            'X-Ton-Client-Version': version,\n        };\n        if (this.parameters.apiKey) {\n            headers['X-API-Key'] = this.parameters.apiKey;\n        }\n        let res = await axios_1.default.post(this.endpoint, JSON.stringify({\n            id: '1',\n            jsonrpc: '2.0',\n            method: method,\n            params: body\n        }), {\n            headers,\n            timeout: this.parameters.timeout,\n        });\n        if (res.status !== 200 || !res.data.ok) {\n            throw Error('Received error: ' + JSON.stringify(res.data));\n        }\n        let decoded = codec.decode(res.data.result);\n        if ((0, Either_1.isRight)(decoded)) {\n            return decoded.right;\n        }\n        else {\n            throw Error('Malformed response: ' + io_ts_reporters_1.default.report(decoded).join(', '));\n        }\n    }\n}\nexports.HttpApi = HttpApi;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExternalMessage = void 0;\nclass ExternalMessage {\n    constructor(opts) {\n        this.to = opts.to;\n        this.body = opts.body;\n        if (opts.from !== undefined && opts.from !== null) {\n            this.from = opts.from;\n        }\n        else {\n            this.from = null;\n        }\n        if (opts.importFee !== undefined && opts.importFee !== null) {\n            this.importFee = opts.importFee;\n        }\n        else {\n            this.importFee = 0;\n        }\n    }\n    writeTo(cell) {\n        cell.bits.writeUint(2, 2);\n        cell.bits.writeAddress(this.from);\n        cell.bits.writeAddress(this.to);\n        cell.bits.writeCoins(this.importFee);\n        this.body.writeTo(cell);\n    }\n}\nexports.ExternalMessage = ExternalMessage;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommonMessageInfo = void 0;\nconst Cell_1 = require(\"../boc/Cell\");\nclass CommonMessageInfo {\n    constructor(opts) {\n        if (opts && opts.stateInit !== null && opts.stateInit !== undefined) {\n            this.stateInit = opts.stateInit;\n        }\n        else {\n            this.stateInit = null;\n        }\n        if (opts && opts.body !== null && opts.body !== undefined) {\n            this.body = opts.body;\n        }\n        else {\n            this.body = null;\n        }\n    }\n    writeTo(cell) {\n        // Write state\n        if (this.stateInit) {\n            cell.bits.writeBit(1);\n            const stateInitCell = new Cell_1.Cell();\n            this.stateInit.writeTo(stateInitCell);\n            //-1:  need at least one bit for body\n            if (cell.bits.available - 1 /* At least on byte for body */ >= stateInitCell.bits.cursor) {\n                cell.bits.writeBit(0);\n                cell.writeCell(stateInitCell);\n            }\n            else {\n                cell.bits.writeBit(1);\n                cell.refs.push(stateInitCell);\n            }\n        }\n        else {\n            cell.bits.writeBit(0);\n        }\n        // Write body\n        if (this.body) {\n            const bodyCell = new Cell_1.Cell();\n            this.body.writeTo(bodyCell);\n            if (cell.bits.available >= bodyCell.bits.cursor) {\n                cell.bits.writeBit(0);\n                cell.writeCell(bodyCell);\n            }\n            else {\n                cell.bits.writeBit(1);\n                cell.refs.push(bodyCell);\n            }\n        }\n        else {\n            cell.bits.writeBit(0);\n        }\n    }\n}\nexports.CommonMessageInfo = CommonMessageInfo;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StateInit = void 0;\nclass StateInit {\n    constructor(opts) {\n        if (opts.code !== null && opts.code !== undefined) {\n            this.code = opts.code;\n        }\n        else {\n            this.code = null;\n        }\n        if (opts.data !== null && opts.data !== undefined) {\n            this.data = opts.data;\n        }\n        else {\n            this.data = null;\n        }\n    }\n    writeTo(cell) {\n        cell.bits.writeBit(0); // SplitDepth\n        cell.bits.writeBit(0); // TickTock\n        cell.bits.writeBit(!!this.code); // Code presence\n        cell.bits.writeBit(!!this.data); // Data presence\n        cell.bits.writeBit(0); // Library\n        if (this.code) {\n            cell.refs.push(this.code);\n        }\n        if (this.data) {\n            cell.refs.push(this.data);\n        }\n    }\n}\nexports.StateInit = StateInit;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletV1R2Source = void 0;\nconst __1 = require(\"../..\");\nclass WalletV1R2Source {\n    constructor(opts) {\n        this.type = 'org.ton.wallets.simple.r2';\n        this.walletVersion = 'v1';\n        this.backup = () => {\n            const store = new __1.ConfigStore();\n            store.setInt('wc', this.workchain);\n            store.setBuffer('pk', this.publicKey);\n            return store.save();\n        };\n        this.describe = () => {\n            return 'Simple Wallet Contract (R2)';\n        };\n        this.publicKey = opts.publicKey;\n        this.initialCode = opts.initialCode;\n        this.initialData = opts.initialData;\n        this.workchain = opts.workchain;\n        Object.freeze(this);\n    }\n    static create(opts) {\n        // Resolve parameters\n        let publicKey = opts.publicKey;\n        let workchain = opts.workchain;\n        // Build initial code and data\n        let initialCode = __1.Cell.fromBoc('B5EE9C724101010100530000A2FF0020DD2082014C97BA9730ED44D0D70B1FE0A4F260810200D71820D70B1FED44D0D31FD3FFD15112BAF2A122F901541044F910F2A2F80001D31F3120D74A96D307D402FB00DED1A4C8CB1FCBFFC9ED54D0E2786F')[0];\n        let initialData = new __1.Cell();\n        initialData.bits.writeUint(0, 32); // SeqNo\n        initialData.bits.writeBuffer(publicKey); // Public key\n        return new WalletV1R2Source({ publicKey, initialCode, initialData, workchain });\n    }\n    static restore(backup) {\n        const store = new __1.ConfigStore(backup);\n        return WalletV1R2Source.create({ publicKey: store.getBuffer('pk'), workchain: store.getInt('wc') });\n    }\n}\nexports.WalletV1R2Source = WalletV1R2Source;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletV1R3Source = void 0;\nconst __1 = require(\"../..\");\nclass WalletV1R3Source {\n    constructor(opts) {\n        this.type = 'org.ton.wallets.simple.r3';\n        this.walletVersion = 'v1';\n        this.backup = () => {\n            const store = new __1.ConfigStore();\n            store.setInt('wc', this.workchain);\n            store.setBuffer('pk', this.publicKey);\n            return store.save();\n        };\n        this.describe = () => {\n            return 'Simple Wallet Contract (R3)';\n        };\n        this.publicKey = opts.publicKey;\n        this.initialCode = opts.initialCode;\n        this.initialData = opts.initialData;\n        this.workchain = opts.workchain;\n        Object.freeze(this);\n    }\n    static create(opts) {\n        // Resolve parameters\n        let publicKey = opts.publicKey;\n        let workchain = opts.workchain;\n        // Build initial code and data\n        let initialCode = __1.Cell.fromBoc('B5EE9C7241010101005F0000BAFF0020DD2082014C97BA218201339CBAB19C71B0ED44D0D31FD70BFFE304E0A4F260810200D71820D70B1FED44D0D31FD3FFD15112BAF2A122F901541044F910F2A2F80001D31F3120D74A96D307D402FB00DED1A4C8CB1FCBFFC9ED54B5B86E42')[0];\n        let initialData = new __1.Cell();\n        initialData.bits.writeUint(0, 32); // SeqNo\n        initialData.bits.writeBuffer(publicKey); // Public key\n        return new WalletV1R3Source({ publicKey, initialCode, initialData, workchain });\n    }\n    static restore(backup) {\n        const store = new __1.ConfigStore(backup);\n        return WalletV1R3Source.create({ publicKey: store.getBuffer('pk'), workchain: store.getInt('wc') });\n    }\n}\nexports.WalletV1R3Source = WalletV1R3Source;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletV2R1Source = void 0;\nconst __1 = require(\"../..\");\nclass WalletV2R1Source {\n    constructor(opts) {\n        this.type = 'org.ton.wallets.v2';\n        this.walletVersion = 'v2';\n        this.backup = () => {\n            const store = new __1.ConfigStore();\n            store.setInt('wc', this.workchain);\n            store.setBuffer('pk', this.publicKey);\n            return store.save();\n        };\n        this.describe = () => {\n            return 'Wallet V2 Contract';\n        };\n        this.publicKey = opts.publicKey;\n        this.initialCode = opts.initialCode;\n        this.initialData = opts.initialData;\n        this.workchain = opts.workchain;\n        Object.freeze(this);\n    }\n    static create(opts) {\n        // Resolve parameters\n        let publicKey = opts.publicKey;\n        let workchain = opts.workchain;\n        // Build initial code and data\n        let initialCode = __1.Cell.fromBoc('B5EE9C724101010100570000AAFF0020DD2082014C97BA9730ED44D0D70B1FE0A4F2608308D71820D31FD31F01F823BBF263ED44D0D31FD3FFD15131BAF2A103F901541042F910F2A2F800029320D74A96D307D402FB00E8D1A4C8CB1FCBFFC9ED54A1370BB6')[0];\n        let initialData = new __1.Cell();\n        initialData.bits.writeUint(0, 32); // SeqNo\n        initialData.bits.writeBuffer(publicKey); // Public key\n        return new WalletV2R1Source({ publicKey, initialCode, initialData, workchain });\n    }\n    static restore(backup) {\n        const store = new __1.ConfigStore(backup);\n        return WalletV2R1Source.create({ publicKey: store.getBuffer('pk'), workchain: store.getInt('wc') });\n    }\n}\nexports.WalletV2R1Source = WalletV2R1Source;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletV2R2Source = void 0;\nconst __1 = require(\"../..\");\nclass WalletV2R2Source {\n    constructor(opts) {\n        this.type = 'org.ton.wallets.v2.r2';\n        this.walletVersion = 'v2';\n        this.backup = () => {\n            const store = new __1.ConfigStore();\n            store.setInt('wc', this.workchain);\n            store.setBuffer('pk', this.publicKey);\n            return store.save();\n        };\n        this.describe = () => {\n            return 'Wallet V2 Contract (R2)';\n        };\n        this.publicKey = opts.publicKey;\n        this.workchain = opts.workchain;\n        this.initialCode = opts.initialCode;\n        this.initialData = opts.initialData;\n        Object.freeze(this);\n    }\n    static create(opts) {\n        // Resolve parameters\n        let publicKey = opts.publicKey;\n        let workchain = opts.workchain;\n        // Build initial code and data\n        let initialCode = __1.Cell.fromBoc('B5EE9C724101010100630000C2FF0020DD2082014C97BA218201339CBAB19C71B0ED44D0D31FD70BFFE304E0A4F2608308D71820D31FD31F01F823BBF263ED44D0D31FD3FFD15131BAF2A103F901541042F910F2A2F800029320D74A96D307D402FB00E8D1A4C8CB1FCBFFC9ED54044CD7A1')[0];\n        let initialData = new __1.Cell();\n        initialData.bits.writeUint(0, 32); // SeqNo\n        initialData.bits.writeBuffer(publicKey); // Public key\n        return new WalletV2R2Source({ publicKey, initialCode, initialData, workchain });\n    }\n    static restore(backup) {\n        const store = new __1.ConfigStore(backup);\n        return WalletV2R2Source.create({ publicKey: store.getBuffer('pk'), workchain: store.getInt('wc') });\n    }\n}\nexports.WalletV2R2Source = WalletV2R2Source;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletV3R1Source = void 0;\nconst __1 = require(\"../..\");\nclass WalletV3R1Source {\n    constructor(opts) {\n        this.type = 'org.ton.wallets.v3';\n        this.walletVersion = 'v3';\n        this.backup = () => {\n            const store = new __1.ConfigStore();\n            store.setInt('wc', this.workchain);\n            store.setInt('walletId', this.walletId);\n            store.setBuffer('pk', this.publicKey);\n            return store.save();\n        };\n        this.describe = () => {\n            return `Wallet V3 Contract. WalletID = ${this.walletId}`;\n        };\n        this.publicKey = opts.publicKey;\n        this.workchain = opts.workchain;\n        this.walletId = opts.walletId;\n        this.initialCode = opts.initialCode;\n        this.initialData = opts.initialData;\n        Object.freeze(this);\n    }\n    static create(opts) {\n        // Resolve parameters\n        let publicKey = opts.publicKey;\n        let workchain = opts.workchain;\n        let walletId;\n        if (opts.walletId !== null && opts.walletId !== undefined) {\n            walletId = opts.walletId;\n        }\n        else {\n            walletId = 698983191 + workchain;\n        }\n        // Build initial code and data\n        let initialCode = __1.Cell.fromBoc('B5EE9C724101010100620000C0FF0020DD2082014C97BA9730ED44D0D70B1FE0A4F2608308D71820D31FD31FD31FF82313BBF263ED44D0D31FD31FD3FFD15132BAF2A15144BAF2A204F901541055F910F2A3F8009320D74A96D307D402FB00E8D101A4C8CB1FCB1FCBFFC9ED543FBE6EE0')[0];\n        let initialData = new __1.Cell();\n        initialData.bits.writeUint(0, 32);\n        initialData.bits.writeUint(walletId, 32);\n        initialData.bits.writeBuffer(publicKey);\n        // Build contract source\n        return new WalletV3R1Source({\n            publicKey,\n            workchain,\n            walletId,\n            initialCode,\n            initialData\n        });\n    }\n    static restore(backup) {\n        const store = new __1.ConfigStore(backup);\n        return WalletV3R1Source.create({ publicKey: store.getBuffer('pk'), workchain: store.getInt('wc'), walletId: store.getInt('walletId') });\n    }\n}\nexports.WalletV3R1Source = WalletV3R1Source;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletV3R2Source = void 0;\nconst __1 = require(\"../..\");\nclass WalletV3R2Source {\n    constructor(opts) {\n        this.type = 'org.ton.wallets.v3.r2';\n        this.walletVersion = 'v3';\n        this.backup = () => {\n            const store = new __1.ConfigStore();\n            store.setInt('wc', this.workchain);\n            store.setInt('walletId', this.walletId);\n            store.setBuffer('pk', this.publicKey);\n            return store.save();\n        };\n        this.describe = () => {\n            return `Wallet V3 Contract (R2). WalletID = ${this.walletId}`;\n        };\n        this.publicKey = opts.publicKey;\n        this.workchain = opts.workchain;\n        this.walletId = opts.walletId;\n        this.initialCode = opts.initialCode;\n        this.initialData = opts.initialData;\n        Object.freeze(this);\n    }\n    static create(opts) {\n        // Resolve parameters\n        let publicKey = opts.publicKey;\n        let workchain = opts.workchain;\n        let walletId;\n        if (opts.walletId !== null && opts.walletId !== undefined) {\n            walletId = opts.walletId;\n        }\n        else {\n            walletId = 698983191 + workchain;\n        }\n        // Build initial code and data\n        let initialCode = __1.Cell.fromBoc('B5EE9C724101010100710000DEFF0020DD2082014C97BA218201339CBAB19F71B0ED44D0D31FD31F31D70BFFE304E0A4F2608308D71820D31FD31FD31FF82313BBF263ED44D0D31FD31FD3FFD15132BAF2A15144BAF2A204F901541055F910F2A3F8009320D74A96D307D402FB00E8D101A4C8CB1FCB1FCBFFC9ED5410BD6DAD')[0];\n        let initialData = new __1.Cell();\n        initialData.bits.writeUint(0, 32);\n        initialData.bits.writeUint(walletId, 32);\n        initialData.bits.writeBuffer(publicKey);\n        // Build contract source\n        return new WalletV3R2Source({\n            publicKey,\n            workchain,\n            walletId,\n            initialCode,\n            initialData\n        });\n    }\n    static restore(backup) {\n        const store = new __1.ConfigStore(backup);\n        return WalletV3R2Source.create({ publicKey: store.getBuffer('pk'), workchain: store.getInt('wc'), walletId: store.getInt('walletId') });\n    }\n}\nexports.WalletV3R2Source = WalletV3R2Source;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletV1SigningMessage = void 0;\nconst Cell_1 = require(\"../../boc/Cell\");\nclass WalletV1SigningMessage {\n    constructor(args) {\n        this.order = args.order;\n        this.sendMode = args.sendMode;\n        if (args.seqno !== undefined && args.seqno !== null) {\n            this.seqno = args.seqno;\n        }\n        else {\n            this.seqno = 0;\n        }\n    }\n    writeTo(cell) {\n        cell.bits.writeUint(this.seqno, 32);\n        cell.bits.writeUint8(this.sendMode);\n        // Write order\n        let orderCell = new Cell_1.Cell();\n        this.order.writeTo(orderCell);\n        cell.refs.push(orderCell);\n    }\n}\nexports.WalletV1SigningMessage = WalletV1SigningMessage;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletV2SigningMessage = void 0;\nconst Cell_1 = require(\"../../boc/Cell\");\nclass WalletV2SigningMessage {\n    constructor(args) {\n        this.order = args.order;\n        this.sendMode = args.sendMode;\n        if (args.timeout !== undefined && args.timeout !== null) {\n            this.timeout = args.timeout;\n        }\n        else {\n            this.timeout = Math.floor(Date.now() / 1e3) + 60; // Default timeout: 60 seconds\n        }\n        if (args.seqno !== undefined && args.seqno !== null) {\n            this.seqno = args.seqno;\n        }\n        else {\n            this.seqno = 0;\n        }\n    }\n    writeTo(cell) {\n        cell.bits.writeUint(this.seqno, 32);\n        if (this.seqno === 0) {\n            for (let i = 0; i < 32; i++) {\n                cell.bits.writeBit(1);\n            }\n        }\n        else {\n            cell.bits.writeUint(this.timeout, 32);\n        }\n        cell.bits.writeUint8(this.sendMode);\n        // Write order\n        let orderCell = new Cell_1.Cell();\n        this.order.writeTo(orderCell);\n        cell.refs.push(orderCell);\n    }\n}\nexports.WalletV2SigningMessage = WalletV2SigningMessage;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletV3SigningMessage = void 0;\nconst Cell_1 = require(\"../../boc/Cell\");\nclass WalletV3SigningMessage {\n    constructor(args) {\n        this.order = args.order;\n        this.sendMode = args.sendMode;\n        if (args.timeout !== undefined && args.timeout !== null) {\n            this.timeout = args.timeout;\n        }\n        else {\n            this.timeout = Math.floor(Date.now() / 1e3) + 60; // Default timeout: 60 seconds\n        }\n        if (args.seqno !== undefined && args.seqno !== null) {\n            this.seqno = args.seqno;\n        }\n        else {\n            this.seqno = 0;\n        }\n        if (args.walletId !== null && args.walletId !== undefined) {\n            this.walletId = args.walletId;\n        }\n        else {\n            this.walletId = 698983191;\n        }\n    }\n    writeTo(cell) {\n        cell.bits.writeUint(this.walletId, 32);\n        if (this.seqno === 0) {\n            for (let i = 0; i < 32; i++) {\n                cell.bits.writeBit(1);\n            }\n        }\n        else {\n            cell.bits.writeUint(this.timeout, 32);\n        }\n        cell.bits.writeUint(this.seqno, 32);\n        cell.bits.writeUint8(this.sendMode);\n        // Write order\n        let orderCell = new Cell_1.Cell();\n        this.order.writeTo(orderCell);\n        cell.refs.push(orderCell);\n    }\n}\nexports.WalletV3SigningMessage = WalletV3SigningMessage;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createWalletTransferV3 = exports.createWalletTransferV2 = exports.createWalletTransferV1 = void 0;\nconst ton_crypto_1 = require(\"ton-crypto\");\nconst __1 = require(\"../..\");\nconst WalletV1SigningMessage_1 = require(\"./WalletV1SigningMessage\");\nconst WalletV2SigningMessage_1 = require(\"./WalletV2SigningMessage\");\nconst WalletV3SigningMessage_1 = require(\"./WalletV3SigningMessage\");\nfunction createWalletTransferV1(args) {\n    let signingMessage = new WalletV1SigningMessage_1.WalletV1SigningMessage({\n        seqno: args.seqno,\n        sendMode: args.sendMode,\n        order: args.order\n    });\n    // Sign message\n    const cell = new __1.Cell();\n    signingMessage.writeTo(cell);\n    let signature = (0, ton_crypto_1.sign)(cell.hash(), args.secretKey);\n    // Body\n    const body = new __1.Cell();\n    body.bits.writeBuffer(signature);\n    signingMessage.writeTo(body);\n    return body;\n}\nexports.createWalletTransferV1 = createWalletTransferV1;\nfunction createWalletTransferV2(args) {\n    let signingMessage = new WalletV2SigningMessage_1.WalletV2SigningMessage({\n        seqno: args.seqno,\n        sendMode: args.sendMode,\n        order: args.order,\n        timeout: args.timeout\n    });\n    // Sign message\n    const cell = new __1.Cell();\n    signingMessage.writeTo(cell);\n    let signature = (0, ton_crypto_1.sign)(cell.hash(), args.secretKey);\n    // Body\n    const body = new __1.Cell();\n    body.bits.writeBuffer(signature);\n    signingMessage.writeTo(body);\n    return body;\n}\nexports.createWalletTransferV2 = createWalletTransferV2;\nfunction createWalletTransferV3(args) {\n    let signingMessage = new WalletV3SigningMessage_1.WalletV3SigningMessage({\n        timeout: args.timeout,\n        walletId: args.walletId,\n        seqno: args.seqno,\n        sendMode: args.sendMode,\n        order: args.order\n    });\n    // Sign message\n    const cell = new __1.Cell();\n    signingMessage.writeTo(cell);\n    let signature = (0, ton_crypto_1.sign)(cell.hash(), args.secretKey);\n    // Body\n    const body = new __1.Cell();\n    body.bits.writeBuffer(signature);\n    signingMessage.writeTo(body);\n    return body;\n}\nexports.createWalletTransferV3 = createWalletTransferV3;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.contractAddress = void 0;\nconst __1 = require(\"..\");\nfunction contractAddress(source) {\n    let cell = new __1.Cell();\n    let state = new __1.StateInit({ code: source.initialCode, data: source.initialData });\n    state.writeTo(cell);\n    let hash = cell.hash();\n    return new __1.Address(source.workchain, hash);\n}\nexports.contractAddress = contractAddress;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletContract = void 0;\nconst createWalletTransfer_1 = require(\"./messages/createWalletTransfer\");\nconst contractAddress_1 = require(\"./contractAddress\");\nclass WalletContract {\n    constructor(client, source, address) {\n        this.client = client;\n        this.address = address;\n        this.source = source;\n    }\n    static create(client, source) {\n        let address = (0, contractAddress_1.contractAddress)(source);\n        return new WalletContract(client, source, address);\n    }\n    async getSeqNo() {\n        if (await this.client.isContractDeployed(this.address)) {\n            let res = await this.client.callGetMethod(this.address, 'seqno');\n            return parseInt(res.stack[0][1], 16);\n        }\n        else {\n            return 0;\n        }\n    }\n    createTransfer(args) {\n        switch (this.source.walletVersion) {\n            case 'v1':\n                return (0, createWalletTransfer_1.createWalletTransferV1)({ seqno: args.seqno, sendMode: args.sendMode, secretKey: args.secretKey, order: args.order });\n            case 'v2':\n                return (0, createWalletTransfer_1.createWalletTransferV2)({ seqno: args.seqno, sendMode: args.sendMode, secretKey: args.secretKey, order: args.order, timeout: args.timeout });\n            case 'v3':\n                return (0, createWalletTransfer_1.createWalletTransferV3)({ seqno: args.seqno, sendMode: args.sendMode, secretKey: args.secretKey, order: args.order, walletId: this.source.walletId, timeout: args.timeout });\n            default:\n                throw Error('Unknown contract type: ' + this.source.type);\n        }\n    }\n}\nexports.WalletContract = WalletContract;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalMessage = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nclass InternalMessage {\n    constructor(opts) {\n        this.to = opts.to;\n        this.value = new bn_js_1.default(opts.value);\n        this.bounce = opts.bounce;\n        this.body = opts.body;\n        if (opts.from) {\n            this.from = opts.from;\n        }\n        else {\n            this.from = null;\n        }\n        if (opts.ihrDisabled !== null && opts.ihrDisabled !== undefined) {\n            this.ihrDisabled = opts.ihrDisabled;\n        }\n        else {\n            this.ihrDisabled = true;\n        }\n        if (opts.bounced !== null && opts.bounced !== undefined) {\n            this.bounced = opts.bounced;\n        }\n        else {\n            this.bounced = false;\n        }\n        if (opts.ihrFees !== null && opts.ihrFees !== undefined) {\n            this.ihrFees = new bn_js_1.default(opts.ihrFees);\n        }\n        else {\n            this.ihrFees = new bn_js_1.default(0);\n        }\n        if (opts.fwdFees !== null && opts.fwdFees !== undefined) {\n            this.fwdFees = new bn_js_1.default(opts.fwdFees);\n        }\n        else {\n            this.fwdFees = new bn_js_1.default(0);\n        }\n        if (opts.createdAt !== null && opts.createdAt !== undefined) {\n            this.createdAt = new bn_js_1.default(opts.createdAt);\n        }\n        else {\n            this.createdAt = new bn_js_1.default(0);\n        }\n        if (opts.createdLt !== null && opts.createdLt !== undefined) {\n            this.createdLt = new bn_js_1.default(opts.createdLt);\n        }\n        else {\n            this.createdLt = new bn_js_1.default(0);\n        }\n    }\n    writeTo(cell) {\n        cell.bits.writeBit(0); // Message id\n        cell.bits.writeBit(this.ihrDisabled);\n        cell.bits.writeBit(this.bounce);\n        cell.bits.writeBit(this.bounced);\n        cell.bits.writeAddress(this.from);\n        cell.bits.writeAddress(this.to);\n        cell.bits.writeCoins(this.value);\n        cell.bits.writeBit(false); // Currency collection (not supported)\n        cell.bits.writeCoins(this.ihrFees);\n        cell.bits.writeCoins(this.fwdFees);\n        cell.bits.writeUint(this.createdLt, 64);\n        cell.bits.writeUint(this.createdAt, 32);\n        this.body.writeTo(cell);\n    }\n}\nexports.InternalMessage = InternalMessage;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SendMode = void 0;\nvar SendMode;\n(function (SendMode) {\n    SendMode[SendMode[\"CARRRY_ALL_REMAINING_BALANCE\"] = 128] = \"CARRRY_ALL_REMAINING_BALANCE\";\n    SendMode[SendMode[\"CARRRY_ALL_REMAINING_INCOMING_VALUE\"] = 64] = \"CARRRY_ALL_REMAINING_INCOMING_VALUE\";\n    SendMode[SendMode[\"DESTROY_ACCOUNT_IF_ZERO\"] = 32] = \"DESTROY_ACCOUNT_IF_ZERO\";\n    SendMode[SendMode[\"PAY_GAS_SEPARATLY\"] = 1] = \"PAY_GAS_SEPARATLY\";\n    SendMode[SendMode[\"IGNORE_ERRORS\"] = 2] = \"IGNORE_ERRORS\";\n})(SendMode = exports.SendMode || (exports.SendMode = {}));\n", "\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Wallet_client, _Wallet_contract;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Wallet = exports.validateWalletType = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst ton_crypto_1 = require(\"ton-crypto\");\nconst __1 = require(\"..\");\nconst WalletV1R2Source_1 = require(\"../contracts/sources/WalletV1R2Source\");\nconst WalletV1R3Source_1 = require(\"../contracts/sources/WalletV1R3Source\");\nconst WalletV2R1Source_1 = require(\"../contracts/sources/WalletV2R1Source\");\nconst WalletV2R2Source_1 = require(\"../contracts/sources/WalletV2R2Source\");\nconst WalletV3R1Source_1 = require(\"../contracts/sources/WalletV3R1Source\");\nconst WalletV3R2Source_1 = require(\"../contracts/sources/WalletV3R2Source\");\nconst WalletContract_1 = require(\"../contracts/WalletContract\");\nconst CommonMessageInfo_1 = require(\"../messages/CommonMessageInfo\");\nconst InternalMessage_1 = require(\"../messages/InternalMessage\");\nconst SendMode_1 = require(\"./SendMode\");\n// Wallet Contract Priority\nconst allTypes = [\n    'org.ton.wallets.simple.r2',\n    'org.ton.wallets.simple.r3',\n    'org.ton.wallets.v2',\n    'org.ton.wallets.v2.r2',\n    'org.ton.wallets.v3.r2',\n    'org.ton.wallets.v3'\n];\nfunction validateWalletType(src) {\n    if (src === 'org.ton.wallets.simple'\n        || src === 'org.ton.wallets.simple.r2'\n        || src === 'org.ton.wallets.simple.r3'\n        || src === 'org.ton.wallets.v2'\n        || src === 'org.ton.wallets.v2.r2'\n        || src === 'org.ton.wallets.v3'\n        || src === 'org.ton.wallets.v3.r2') {\n        return src;\n    }\n    return null;\n}\nexports.validateWalletType = validateWalletType;\nfunction createContract(client, type, publicKey, workchain) {\n    if (type === 'org.ton.wallets.simple') {\n        throw Error('Unsupported wallet');\n    }\n    else if (type === 'org.ton.wallets.simple.r2') {\n        return WalletContract_1.WalletContract.create(client, WalletV1R2Source_1.WalletV1R2Source.create({ publicKey, workchain }));\n    }\n    else if (type === 'org.ton.wallets.simple.r3') {\n        return WalletContract_1.WalletContract.create(client, WalletV1R3Source_1.WalletV1R3Source.create({ publicKey, workchain }));\n    }\n    else if (type === 'org.ton.wallets.v2') {\n        return WalletContract_1.WalletContract.create(client, WalletV2R1Source_1.WalletV2R1Source.create({ publicKey, workchain }));\n    }\n    else if (type === 'org.ton.wallets.v2.r2') {\n        return WalletContract_1.WalletContract.create(client, WalletV2R2Source_1.WalletV2R2Source.create({ publicKey, workchain }));\n    }\n    else if (type === 'org.ton.wallets.v3') {\n        return WalletContract_1.WalletContract.create(client, WalletV3R1Source_1.WalletV3R1Source.create({ publicKey, workchain }));\n    }\n    else if (type === 'org.ton.wallets.v3.r2') {\n        return WalletContract_1.WalletContract.create(client, WalletV3R2Source_1.WalletV3R2Source.create({ publicKey, workchain }));\n    }\n    else {\n        throw Error('Unknown wallet type: ' + type);\n    }\n}\nclass Wallet {\n    constructor(client, address) {\n        _Wallet_client.set(this, void 0);\n        _Wallet_contract.set(this, null);\n        __classPrivateFieldSet(this, _Wallet_client, client, \"f\");\n        this.address = address;\n    }\n    static open(client, address) {\n        return new Wallet(client, address);\n    }\n    static openDefault(client, workchain, secretKey) {\n        const publicKey = (0, ton_crypto_1.keyPairFromSecretKey)(secretKey).publicKey;\n        let c = createContract(client, 'org.ton.wallets.v3', publicKey, workchain);\n        let w = new Wallet(client, c.address);\n        w.prepare(workchain, publicKey, 'org.ton.wallets.v3');\n        return w;\n    }\n    static openByType(client, workchain, secretKey, type) {\n        const publicKey = (0, ton_crypto_1.keyPairFromSecretKey)(secretKey).publicKey;\n        let c = createContract(client, type, publicKey, workchain);\n        let w = new Wallet(client, c.address);\n        w.prepare(workchain, publicKey, type);\n        return w;\n    }\n    static openFromSource(client, source) {\n        let address = (0, __1.contractAddress)(source);\n        let w = new Wallet(client, address);\n        w.prepareFromSource(source);\n        return w;\n    }\n    static async findActiveBySecretKey(client, workchain, secretKey) {\n        const publicKey = (0, ton_crypto_1.keyPairFromSecretKey)(secretKey).publicKey;\n        let types = [];\n        for (let type of allTypes) {\n            let contra = createContract(client, type, publicKey, workchain);\n            let deployed = await client.isContractDeployed(contra.address);\n            let balance = await client.getBalance(contra.address);\n            if (deployed || balance.gt(new bn_js_1.default(0))) {\n                types.push({ address: contra.address, type, balance, deployed });\n            }\n        }\n        return types;\n    }\n    static async findBestBySecretKey(client, workchain, secretKey) {\n        const publicKey = (0, ton_crypto_1.keyPairFromSecretKey)(secretKey).publicKey;\n        let allActive = await this.findActiveBySecretKey(client, workchain, secretKey);\n        // Create default one if no wallet exists\n        if (allActive.length === 0) {\n            return this.openDefault(client, workchain, secretKey);\n        }\n        // Try to match with biggest balance\n        let maxBalance = allActive[0].balance;\n        let bestContract = allActive[0].type;\n        for (let i = 1; i < allActive.length; i++) {\n            let ac = allActive[i];\n            // Contracts are sorted by priority\n            if (ac.balance.gte(maxBalance)) {\n                maxBalance = ac.balance;\n                bestContract = ac.type;\n            }\n        }\n        if (maxBalance.gt(new bn_js_1.default(0))) {\n            let c = createContract(client, bestContract, publicKey, workchain);\n            ;\n            let w = new Wallet(client, c.address);\n            w.prepare(workchain, publicKey, bestContract);\n            return w;\n        }\n        // Return last (as most recent)\n        let c = createContract(client, allActive[allActive.length - 1].type, publicKey, workchain);\n        let w = new Wallet(client, c.address);\n        w.prepare(workchain, publicKey, allActive[allActive.length - 1].type);\n        return w;\n    }\n    get prepared() {\n        return !!__classPrivateFieldGet(this, _Wallet_contract, \"f\");\n    }\n    async getSeqNo() {\n        if (await __classPrivateFieldGet(this, _Wallet_client, \"f\").isContractDeployed(this.address)) {\n            let res = await __classPrivateFieldGet(this, _Wallet_client, \"f\").callGetMethod(this.address, 'seqno');\n            return parseInt(res.stack[0][1], 16);\n        }\n        else {\n            return 0;\n        }\n    }\n    prepare(workchain, publicKey, type = 'org.ton.wallets.v3') {\n        let contra = createContract(__classPrivateFieldGet(this, _Wallet_client, \"f\"), type, publicKey, workchain);\n        if (!contra.address.equals(this.address)) {\n            throw Error('Contract have different address');\n        }\n        __classPrivateFieldSet(this, _Wallet_contract, contra, \"f\");\n    }\n    prepareFromSource(source) {\n        let contra = WalletContract_1.WalletContract.create(__classPrivateFieldGet(this, _Wallet_client, \"f\"), source);\n        if (!contra.address.equals(this.address)) {\n            throw Error('Contract have different address');\n        }\n        __classPrivateFieldSet(this, _Wallet_contract, contra, \"f\");\n    }\n    /**\n     * Transfers value to specified address\n     */\n    async transfer(args) {\n        const contract = __classPrivateFieldGet(this, _Wallet_contract, \"f\");\n        if (!contract) {\n            throw Error('Please, prepare wallet first');\n        }\n        // Resolve payload\n        let payload = null;\n        if (args.payload) {\n            if (typeof args.payload === 'string') {\n                payload = new __1.CommentMessage(args.payload);\n            }\n            else if (Buffer.isBuffer(args.payload)) {\n                payload = new __1.BinaryMessage(args.payload);\n            }\n        }\n        // Check transfer\n        const transfer = await contract.createTransfer({\n            secretKey: args.secretKey,\n            seqno: args.seqno,\n            sendMode: args.sendMode || (SendMode_1.SendMode.IGNORE_ERRORS + SendMode_1.SendMode.PAY_GAS_SEPARATLY),\n            timeout: args.timeout,\n            order: new InternalMessage_1.InternalMessage({\n                to: args.to,\n                value: args.value,\n                bounce: args.bounce,\n                body: new CommonMessageInfo_1.CommonMessageInfo({ body: payload })\n            })\n        });\n        // Send\n        await __classPrivateFieldGet(this, _Wallet_client, \"f\").sendExternalMessage(contract, transfer);\n    }\n    /**\n     * Signing transfer request. Could be done offline.\n     * @param args sign\n     * @returns\n     */\n    transferSign(args) {\n        const contract = __classPrivateFieldGet(this, _Wallet_contract, \"f\");\n        if (!contract) {\n            throw Error('Please, prepare wallet first');\n        }\n        // Resolve payload\n        let payload = null;\n        if (args.payload) {\n            if (typeof args.payload === 'string') {\n                payload = new __1.CommentMessage(args.payload);\n            }\n            else if (Buffer.isBuffer(args.payload)) {\n                payload = new __1.BinaryMessage(args.payload);\n            }\n        }\n        // Transfer\n        const transfer = contract.createTransfer({\n            secretKey: args.secretKey,\n            seqno: args.seqno,\n            sendMode: args.sendMode || (SendMode_1.SendMode.IGNORE_ERRORS + SendMode_1.SendMode.PAY_GAS_SEPARATLY),\n            timeout: args.timeout,\n            order: new InternalMessage_1.InternalMessage({\n                to: args.to,\n                value: args.value,\n                bounce: args.bounce,\n                body: new CommonMessageInfo_1.CommonMessageInfo({ body: payload })\n            })\n        });\n        // External message\n        const message = new __1.ExternalMessage({\n            to: contract.address,\n            body: new CommonMessageInfo_1.CommonMessageInfo({\n                stateInit: new __1.StateInit({ code: contract.source.initialCode, data: contract.source.initialData }),\n                body: new __1.CellMessage(transfer)\n            })\n        });\n        const res = new __1.Cell();\n        message.writeTo(res);\n        return res;\n    }\n    /**\n     * Commit prepared transfer\n     * @param transfer signed transfer for commit\n     */\n    async transferCommit(transfer) {\n        await __classPrivateFieldGet(this, _Wallet_client, \"f\").sendFile(transfer.toBoc({ idx: false }));\n    }\n}\nexports.Wallet = Wallet;\n_Wallet_client = new WeakMap(), _Wallet_contract = new WeakMap();\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseDictRefs = exports.parseDictBitString = exports.parseDict = void 0;\nconst bn_js_1 = require(\"bn.js\");\nfunction doParse(prefix, slice, n, res, extractor) {\n    // Reading label\n    let lb0 = slice.readBit() ? 1 : 0;\n    let prefixLength = 0;\n    let pp = prefix;\n    if (lb0 === 0) {\n        // Short label detected\n        // Read \n        prefixLength = slice.readUnaryLength();\n        // Read prefix\n        for (let i = 0; i < prefixLength; i++) {\n            pp += slice.readBit() ? '1' : '0';\n        }\n    }\n    else {\n        let lb1 = slice.readBit() ? 1 : 0;\n        if (lb1 === 0) {\n            // Long label detected\n            prefixLength = slice.readUintNumber(Math.ceil(Math.log2(n + 1)));\n            for (let i = 0; i < prefixLength; i++) {\n                pp += slice.readBit() ? '1' : '0';\n            }\n        }\n        else {\n            // Same label detected\n            let bit = slice.readBit() ? '1' : '0';\n            prefixLength = slice.readUintNumber(Math.ceil(Math.log2(n + 1)));\n            for (let i = 0; i < prefixLength; i++) {\n                pp += bit;\n            }\n        }\n    }\n    if (n - prefixLength === 0) {\n        res.set(new bn_js_1.BN(pp, 2).toString(10), extractor(slice));\n    }\n    else {\n        let left = slice.readRef();\n        let right = slice.readRef();\n        // NOTE: Left and right branches are implicitly contain prefixes '0' and '1'\n        doParse(pp + '0', left, n - prefixLength - 1, res, extractor);\n        doParse(pp + '1', right, n - prefixLength - 1, res, extractor);\n    }\n}\nfunction parseDict(slice, keySize, extractor) {\n    let res = new Map();\n    doParse('', slice, keySize, res, extractor);\n    return res;\n}\nexports.parseDict = parseDict;\nfunction parseDictBitString(slice, keySize) {\n    let res = new Map();\n    doParse('', slice, keySize, res, (slice) => slice.readRemaining());\n    return res;\n}\nexports.parseDictBitString = parseDictBitString;\nfunction parseDictRefs(slice, keySize) {\n    let res = new Map();\n    doParse('', slice, keySize, res, (slice) => slice.readRef());\n    return res;\n}\nexports.parseDictRefs = parseDictRefs;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.configParseGasLImitsPrices = exports.configParseBridge = exports.configParseValidatorSet = exports.configParse12 = exports.configParse40 = exports.configParse8 = exports.configParse18 = exports.configParse17 = exports.configParse16 = exports.configParse15 = exports.configParseMasterAddressRequired = exports.parseBridge = exports.parseValidatorSet = exports.parseValidatorDescr = exports.configParseWorkchainDescriptor = exports.configParseMasterAddress = void 0;\nconst bn_js_1 = require(\"bn.js\");\nconst __1 = require(\"../..\");\nconst parseDict_1 = require(\"../../boc/dict/parseDict\");\nfunction configParseMasterAddress(slice) {\n    if (slice) {\n        return new __1.Address(-1, slice.readBuffer(32));\n    }\n    else {\n        return null;\n    }\n}\nexports.configParseMasterAddress = configParseMasterAddress;\nfunction configParseWorkchainDescriptor(slice) {\n    if (slice.readUint(8).toNumber() !== 0xA6) {\n        throw Error('Invalid config');\n    }\n    let enabledSince = slice.readUint(32).toNumber();\n    let actialMinSplit = slice.readUint(8).toNumber();\n    let min_split = slice.readUint(8).toNumber();\n    let max_split = slice.readUint(8).toNumber();\n    let basic = slice.readBit();\n    let active = slice.readBit();\n    let accept_msgs = slice.readBit();\n    let flags = slice.readUint(13).toNumber();\n    let zerostateRootHash = slice.readBuffer(32);\n    let zerostateFileHash = slice.readBuffer(32);\n    let version = slice.readUint(32).toNumber();\n    // Only basic format supported\n    if (slice.readBit()) {\n        throw Error('Invalid config');\n    }\n    let vmVersion = slice.readUint(32).toNumber();\n    let vmMode = slice.readUint(64);\n    return {\n        enabledSince,\n        actialMinSplit,\n        min_split,\n        max_split,\n        basic,\n        active,\n        accept_msgs,\n        flags,\n        zerostateRootHash,\n        zerostateFileHash,\n        version,\n        format: {\n            vmVersion,\n            vmMode\n        }\n    };\n}\nexports.configParseWorkchainDescriptor = configParseWorkchainDescriptor;\nfunction readPublicKey(slice) {\n    // 8e81278a\n    if (slice.readUint(32).toNumber() !== 0x8e81278a) {\n        throw Error('Invalid config');\n    }\n    return slice.readBuffer(32);\n}\nfunction parseValidatorDescr(slice) {\n    let header = slice.readUint(8).toNumber();\n    if (header === 0x53) {\n        return {\n            publicKey: readPublicKey(slice),\n            weight: slice.readUint(64),\n            adnlAddress: null\n        };\n    }\n    else if (header === 0x73) {\n        return {\n            publicKey: readPublicKey(slice),\n            weight: slice.readUint(64),\n            adnlAddress: slice.readBuffer(32)\n        };\n    }\n    else {\n        throw Error('Invalid config');\n    }\n}\nexports.parseValidatorDescr = parseValidatorDescr;\nfunction parseValidatorSet(slice) {\n    let header = slice.readUint(8).toNumber();\n    if (header === 0x11) {\n        let timeSince = slice.readUint(32).toNumber();\n        let timeUntil = slice.readUint(32).toNumber();\n        let total = slice.readUint(16).toNumber();\n        let main = slice.readUint(16).toNumber();\n        let list = (0, parseDict_1.parseDict)(slice.readRef(), 16, parseValidatorDescr);\n        return {\n            timeSince,\n            timeUntil,\n            total,\n            main,\n            totalWeight: null,\n            list\n        };\n    }\n    else if (header === 0x12) {\n        let timeSince = slice.readUint(32).toNumber();\n        let timeUntil = slice.readUint(32).toNumber();\n        let total = slice.readUint(16).toNumber();\n        let main = slice.readUint(16).toNumber();\n        let totalWeight = slice.readUint(64);\n        let exists = slice.readBit();\n        let list = exists ? (0, parseDict_1.parseDict)(slice.readRef(), 16, parseValidatorDescr) : null;\n        return {\n            timeSince,\n            timeUntil,\n            total,\n            main,\n            totalWeight,\n            list\n        };\n    }\n}\nexports.parseValidatorSet = parseValidatorSet;\nfunction parseBridge(slice) {\n    let bridgeAddress = slice.readBuffer(32);\n    let oracleMultisigAddress = slice.readBuffer(32);\n    let oracles = slice.readBit() ? (0, parseDict_1.parseDict)(slice.readRef(), 256, (slice) => slice.readBuffer(32)) : null;\n    let externalChainAddress = slice.readBuffer(32);\n    return {\n        bridgeAddress,\n        oracleMultisigAddress,\n        oracles,\n        externalChainAddress\n    };\n}\nexports.parseBridge = parseBridge;\nfunction configParseMasterAddressRequired(slice) {\n    if (!slice) {\n        throw Error('Invalid config');\n    }\n    return configParseMasterAddress(slice);\n}\nexports.configParseMasterAddressRequired = configParseMasterAddressRequired;\nfunction configParse15(slice) {\n    if (!slice) {\n        throw Error('Invalid config');\n    }\n    let validatorsElectedFor = slice.readUintNumber(32);\n    let electorsStartBefore = slice.readUintNumber(32);\n    let electorsEndBefore = slice.readUintNumber(32);\n    let stakeHeldFor = slice.readUintNumber(32);\n    return {\n        validatorsElectedFor,\n        electorsStartBefore,\n        electorsEndBefore,\n        stakeHeldFor\n    };\n}\nexports.configParse15 = configParse15;\nfunction configParse16(slice) {\n    if (!slice) {\n        throw Error('Invalid config');\n    }\n    let maxValidators = slice.readUintNumber(16);\n    let maxMainValidators = slice.readUintNumber(16);\n    let minValidators = slice.readUintNumber(16);\n    return {\n        maxValidators,\n        maxMainValidators,\n        minValidators\n    };\n}\nexports.configParse16 = configParse16;\nfunction configParse17(slice) {\n    if (!slice) {\n        throw Error('Invalid config');\n    }\n    let minStake = slice.readCoins();\n    let maxStake = slice.readCoins();\n    let maxStakeFactor = slice.readUintNumber(32);\n    return {\n        minStake,\n        maxStake,\n        maxStakeFactor\n    };\n}\nexports.configParse17 = configParse17;\nfunction configParse18(slice) {\n    if (!slice) {\n        throw Error('Invalid config');\n    }\n    return (0, parseDict_1.parseDict)(slice, 32, (slice) => {\n        let utime_since = slice.readUint(32);\n        let bit_price_ps = slice.readUint(64);\n        let cell_price_ps = slice.readUint(64);\n        let mc_bit_price_ps = slice.readUint(64);\n        let mc_cell_price_ps = slice.readUint(64);\n        return {\n            utime_since,\n            bit_price_ps,\n            cell_price_ps,\n            mc_bit_price_ps,\n            mc_cell_price_ps\n        };\n    });\n}\nexports.configParse18 = configParse18;\nfunction configParse8(slice) {\n    if (!slice) {\n        return {\n            version: 0,\n            capabilities: new bn_js_1.BN(0)\n        };\n    }\n    let version = slice.readUintNumber(32);\n    let capabilities = slice.readUint(64);\n    return {\n        version,\n        capabilities\n    };\n}\nexports.configParse8 = configParse8;\nfunction configParse40(slice) {\n    if (!slice) {\n        return null;\n    }\n    let header = slice.readUintNumber(8);\n    if (header !== 1) {\n        throw Error('Invalid config');\n    }\n    let defaultFlatFine = slice.readCoins();\n    let defaultProportionaFine = slice.readCoins();\n    let severityFlatMult = slice.readUintNumber(16);\n    let severityProportionalMult = slice.readUintNumber(16);\n    let unfunishableInterval = slice.readUintNumber(16);\n    let longInterval = slice.readUintNumber(16);\n    let longFlatMult = slice.readUintNumber(16);\n    let longProportionalMult = slice.readUintNumber(16);\n    let mediumInterval = slice.readUintNumber(16);\n    let mediumFlatMult = slice.readUintNumber(16);\n    let mediumProportionalMult = slice.readUintNumber(16);\n    return {\n        defaultFlatFine,\n        defaultProportionaFine,\n        severityFlatMult,\n        severityProportionalMult,\n        unfunishableInterval,\n        longInterval,\n        longFlatMult,\n        longProportionalMult,\n        mediumInterval,\n        mediumFlatMult,\n        mediumProportionalMult\n    };\n}\nexports.configParse40 = configParse40;\nfunction configParse12(slice) {\n    if (!slice) {\n        throw Error('Invalid config');\n    }\n    if (slice.readUint(1).toNumber()) {\n        return (0, parseDict_1.parseDict)(slice.readRef(), 32, configParseWorkchainDescriptor);\n    }\n    else {\n        throw Error('No workchains exist');\n    }\n}\nexports.configParse12 = configParse12;\nfunction configParseValidatorSet(slice) {\n    if (!slice) {\n        return null;\n    }\n    return parseValidatorSet(slice);\n}\nexports.configParseValidatorSet = configParseValidatorSet;\nfunction configParseBridge(slice) {\n    if (!slice) {\n        return null;\n    }\n    return parseBridge(slice);\n}\nexports.configParseBridge = configParseBridge;\nfunction parseGasLimitsInternal(slice) {\n    const tag = slice.readUintNumber(8);\n    if (tag === 0xde) {\n        const gasPrice = slice.readUint(64);\n        const gasLimit = slice.readUint(64);\n        const specialGasLimit = slice.readUint(64);\n        const gasCredit = slice.readUint(64);\n        const blockGasLimit = slice.readUint(64);\n        const freezeDueLimit = slice.readUint(64);\n        const deleteDueLimit = slice.readUint(64);\n        return {\n            gasPrice,\n            gasLimit,\n            specialGasLimit,\n            gasCredit,\n            blockGasLimit,\n            freezeDueLimit,\n            deleteDueLimit\n        };\n    }\n    else if (tag === 0xdd) {\n        const gasPrice = slice.readUint(64);\n        const gasLimit = slice.readUint(64);\n        const gasCredit = slice.readUint(64);\n        const blockGasLimit = slice.readUint(64);\n        const freezeDueLimit = slice.readUint(64);\n        const deleteDueLimit = slice.readUint(64);\n        return {\n            gasPrice,\n            gasLimit,\n            gasCredit,\n            blockGasLimit,\n            freezeDueLimit,\n            deleteDueLimit\n        };\n    }\n    else {\n        throw Error('Invalid config');\n    }\n}\nfunction configParseGasLImitsPrices(slice) {\n    if (!slice) {\n        throw Error('Invalid config');\n    }\n    const tag = slice.readUintNumber(8);\n    if (tag === 0xd1) {\n        const flatLimit = slice.readUint(64);\n        const flatGasPrice = slice.readUint(64);\n        const other = parseGasLimitsInternal(slice);\n        return {\n            flatLimit,\n            flatGasPrice,\n            other\n        };\n    }\n    else {\n        throw Error('Invalid config');\n    }\n}\nexports.configParseGasLImitsPrices = configParseGasLImitsPrices;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigContract = void 0;\nconst __1 = require(\"..\");\nconst BitStringReader_1 = require(\"../boc/BitStringReader\");\nconst parseDict_1 = require(\"../boc/dict/parseDict\");\nconst configParsing_1 = require(\"./configs/configParsing\");\nclass ConfigContract {\n    constructor(client) {\n        this.address = __1.Address.parseRaw('-1:5555555555555555555555555555555555555555555555555555555555555555');\n        this.source = new __1.UnknownContractSource('org.ton.config', -1, 'Config Contract');\n        this.client = client;\n    }\n    async getSeqNo() {\n        let res = await this.client.callGetMethod(this.address, 'seqno');\n        return parseInt(res.stack[0][1], 16);\n    }\n    async getPublicKey() {\n        let data = (await this.client.getContractState(this.address)).data;\n        let cell = __1.Cell.fromBoc(data)[0];\n        let reader = new BitStringReader_1.BitStringReader(cell.bits);\n        reader.readUint(32); // Seqno\n        return reader.readUint(256); // Public Key\n    }\n    async getConfigsRaw() {\n        let data = (await this.client.getContractState(this.address)).data;\n        let slice = __1.Cell.fromBoc(data)[0].beginParse();\n        let dict = slice.readRef();\n        let res = (0, parseDict_1.parseDictRefs)(dict, 32);\n        return res;\n    }\n    async getConfigs() {\n        let configs = await this.getConfigsRaw();\n        return {\n            configAddress: (0, configParsing_1.configParseMasterAddressRequired)(configs.get('0')),\n            electorAddress: (0, configParsing_1.configParseMasterAddressRequired)(configs.get('1')),\n            minterAddress: (0, configParsing_1.configParseMasterAddressRequired)(configs.get('2')),\n            feeCollectorAddress: (0, configParsing_1.configParseMasterAddress)(configs.get('3')),\n            dnsRootAddress: (0, configParsing_1.configParseMasterAddress)(configs.get('4')),\n            globalVersion: (0, configParsing_1.configParse8)(configs.get('8')),\n            workchains: (0, configParsing_1.configParse12)(configs.get('12')),\n            validators: {\n                ...(0, configParsing_1.configParse15)(configs.get('15')),\n                ...(0, configParsing_1.configParse16)(configs.get('16')),\n                ...(0, configParsing_1.configParse17)(configs.get('17'))\n            },\n            storagePrices: (0, configParsing_1.configParse18)(configs.get('18')),\n            validatorSets: {\n                prevValidators: (0, configParsing_1.configParseValidatorSet)(configs.get('32')),\n                prevTempValidators: (0, configParsing_1.configParseValidatorSet)(configs.get('33')),\n                currentValidators: (0, configParsing_1.configParseValidatorSet)(configs.get('34')),\n                currentTempValidators: (0, configParsing_1.configParseValidatorSet)(configs.get('35')),\n                nextValidators: (0, configParsing_1.configParseValidatorSet)(configs.get('36')),\n                nextTempValidators: (0, configParsing_1.configParseValidatorSet)(configs.get('37'))\n            },\n            validatorsPunish: (0, configParsing_1.configParse40)(configs.get('40')),\n            bridges: {\n                ethereum: (0, configParsing_1.configParseBridge)(configs.get('71')),\n                binance: (0, configParsing_1.configParseBridge)(configs.get('72')),\n                polygon: (0, configParsing_1.configParseBridge)(configs.get('73'))\n            },\n            gasPrices: {\n                masterchain: (0, configParsing_1.configParseGasLImitsPrices)(configs.get('20')),\n                workchain: (0, configParsing_1.configParseGasLImitsPrices)(configs.get('21')),\n            }\n            // TODO: mint_new_price:Grams mint_add_price:Grams = ConfigParam 6;\n            // TODO: to_mint:ExtraCurrencyCollection = ConfigParam 7\n            // TODO: mandatory_params:(Hashmap 32 True) = ConfigParam 9\n            // TODO: critical_params:(Hashmap 32 True) = ConfigParam 10\n            // TODO: ConfigVotingSetup = ConfigParam 11\n            // TODO: ComplaintPricing = ConfigParam 13\n            // TODO: BlockCreateFees = ConfigParam 14\n        };\n    }\n}\nexports.ConfigContract = ConfigContract;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InMemoryCache = void 0;\nclass InMemoryCache {\n    constructor() {\n        this.cache = new Map();\n        this.set = async (namespace, key, value) => {\n            if (value !== null) {\n                this.cache.set(namespace + '$$' + key, value);\n            }\n            else {\n                this.cache.delete(namespace + '$$' + key);\n            }\n        };\n        this.get = async (namespace, key) => {\n            let res = this.cache.get(namespace + '$$' + key);\n            if (res !== undefined) {\n                return res;\n            }\n            else {\n                return null;\n            }\n        };\n    }\n}\nexports.InMemoryCache = InMemoryCache;\n", "\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _TonClient_api;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TonClient = void 0;\nconst ton_crypto_1 = require(\"ton-crypto\");\nconst Address_1 = require(\"../address/Address\");\nconst Cell_1 = require(\"../boc/Cell\");\nconst HttpApi_1 = require(\"./api/HttpApi\");\nconst ExternalMessage_1 = require(\"../messages/ExternalMessage\");\nconst CommonMessageInfo_1 = require(\"../messages/CommonMessageInfo\");\nconst StateInit_1 = require(\"../messages/StateInit\");\nconst Wallet_1 = require(\"./Wallet\");\nconst bn_js_1 = require(\"bn.js\");\nconst __1 = require(\"..\");\nconst ConfigContract_1 = require(\"../contracts/ConfigContract\");\nconst TonCache_1 = require(\"./TonCache\");\nfunction convertMessage(t) {\n    return {\n        source: t.source !== '' ? Address_1.Address.parseFriendly(t.source).address : null,\n        destination: t.destination !== '' ? Address_1.Address.parseFriendly(t.destination).address : null,\n        forwardFee: new bn_js_1.BN(t.fwd_fee),\n        ihrFee: new bn_js_1.BN(t.ihr_fee),\n        value: new bn_js_1.BN(t.value),\n        createdLt: t.created_lt,\n        body: (t.msg_data['@type'] === 'msg.dataRaw'\n            ? { type: 'data', data: Buffer.from(t.msg_data.body, 'base64') }\n            : (t.msg_data['@type'] === 'msg.dataText'\n                ? { type: 'text', text: Buffer.from(t.msg_data.text, 'base64').toString('utf-8') }\n                : null))\n    };\n}\nfunction convertTransaction(r) {\n    return {\n        id: { lt: r.transaction_id.lt, hash: r.transaction_id.hash },\n        time: r.utime,\n        data: r.data,\n        storageFee: new bn_js_1.BN(r.storage_fee),\n        otherFee: new bn_js_1.BN(r.other_fee),\n        fee: new bn_js_1.BN(r.fee),\n        inMessage: r.in_msg ? convertMessage(r.in_msg) : null,\n        outMessages: r.out_msgs.map(convertMessage)\n    };\n}\nclass TonClient {\n    constructor(parameters) {\n        _TonClient_api.set(this, void 0);\n        this.services = {\n            configs: new ConfigContract_1.ConfigContract(this)\n        };\n        this.parameters = {\n            endpoint: parameters.endpoint,\n            cache: parameters.cache ? parameters.cache : new TonCache_1.InMemoryCache()\n        };\n        __classPrivateFieldSet(this, _TonClient_api, new HttpApi_1.HttpApi(this.parameters.endpoint, this.parameters.cache, {\n            timeout: parameters.timeout,\n            apiKey: parameters.apiKey,\n            adapter: parameters.httpAdapter\n        }), \"f\");\n    }\n    /**\n     * Get Address Balance\n     * @param address address for balance check\n     * @returns balance\n     */\n    async getBalance(address) {\n        return (await this.getContractState(address)).balance;\n    }\n    /**\n     * Invoke get method\n     * @param address contract address\n     * @param name name of method\n     * @param params optional parameters\n     * @returns stack and gas_used field\n     */\n    async callGetMethod(address, name, params = []) {\n        let res = await __classPrivateFieldGet(this, _TonClient_api, \"f\").callGetMethod(address, name, params);\n        if (res.exit_code !== 0) {\n            throw Error('Unable to execute get method. Got exit_code: ' + res.exit_code);\n        }\n        return { gas_used: res.gas_used, stack: res.stack };\n    }\n    /**\n     * Invoke get method that returns error code instead of throwing error\n     * @param address contract address\n     * @param name name of method\n     * @param params optional parameters\n     * @returns stack and gas_used field\n    */\n    async callGetMethodWithError(address, name, params = []) {\n        let res = await __classPrivateFieldGet(this, _TonClient_api, \"f\").callGetMethod(address, name, params);\n        return { gas_used: res.gas_used, stack: res.stack, exit_code: res.exit_code };\n    }\n    /**\n     * Get transactions\n     * @param address address\n     */\n    async getTransactions(address, opts) {\n        // Fetch transactions\n        let tx = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getTransactions(address, opts);\n        let res = [];\n        for (let r of tx) {\n            res.push(convertTransaction(r));\n        }\n        return res;\n    }\n    /**\n     * Get transaction by it's id\n     * @param address address\n     * @param lt logical time\n     * @param hash transaction hash\n     * @returns transaction or null if not exist\n     */\n    async getTransaction(address, lt, hash) {\n        let res = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getTransaction(address, lt, hash);\n        if (res) {\n            return convertTransaction(res);\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Fetch latest masterchain info\n     * @returns masterchain info\n     */\n    async getMasterchainInfo() {\n        let r = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getMasterchainInfo();\n        return {\n            workchain: r.init.workchain,\n            shard: r.last.shard,\n            initSeqno: r.init.seqno,\n            latestSeqno: r.last.seqno\n        };\n    }\n    /**\n     * Fetch latest workchain shards\n     * @param seqno masterchain seqno\n     */\n    async getWorkchainShards(seqno) {\n        let r = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getShards(seqno);\n        return r.map((m) => ({\n            workchain: m.workchain,\n            shard: m.shard,\n            seqno: m.seqno\n        }));\n    }\n    /**\n     * Fetch transactions inf shards\n     * @param workchain\n     * @param seqno\n     * @param shard\n     */\n    async getShardTransactions(workchain, seqno, shard) {\n        let tx = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getBlockTransactions(workchain, seqno, shard);\n        if (tx.incomplete) {\n            throw Error('Unsupported');\n        }\n        return tx.transactions.map((v) => ({\n            account: Address_1.Address.parseRaw(v.account),\n            lt: v.lt,\n            hash: v.hash\n        }));\n    }\n    /**\n     * Send message to a network\n     * @param src source message\n     */\n    async sendMessage(src) {\n        const cell = new Cell_1.Cell();\n        src.writeTo(cell);\n        const boc = await cell.toBoc({ idx: false });\n        await __classPrivateFieldGet(this, _TonClient_api, \"f\").sendBoc(boc);\n    }\n    /**\n     * Send file to a network\n     * @param src source file\n     */\n    async sendFile(src) {\n        await __classPrivateFieldGet(this, _TonClient_api, \"f\").sendBoc(src);\n    }\n    /**\n     * Estimate fees for external message\n     * @param address target address\n     * @returns\n     */\n    async estimateExternalMessageFee(address, args) {\n        return await __classPrivateFieldGet(this, _TonClient_api, \"f\").estimateFee(address, { body: args.body, initCode: args.initCode, initData: args.initData, ignoreSignature: args.ignoreSignature });\n    }\n    /**\n     * Send external message to contract\n     * @param contract contract to send message\n     * @param src message body\n     */\n    async sendExternalMessage(contract, src) {\n        if (await this.isContractDeployed(contract.address)) {\n            const message = new ExternalMessage_1.ExternalMessage({\n                to: contract.address,\n                body: new CommonMessageInfo_1.CommonMessageInfo({\n                    body: new __1.CellMessage(src)\n                })\n            });\n            await this.sendMessage(message);\n        }\n        else {\n            const message = new ExternalMessage_1.ExternalMessage({\n                to: contract.address,\n                body: new CommonMessageInfo_1.CommonMessageInfo({\n                    stateInit: new StateInit_1.StateInit({ code: contract.source.initialCode, data: contract.source.initialData }),\n                    body: new __1.CellMessage(src)\n                })\n            });\n            await this.sendMessage(message);\n        }\n    }\n    /**\n     * Check if contract is deployed\n     * @param address addres to check\n     * @returns true if contract is in active state\n     */\n    async isContractDeployed(address) {\n        return (await this.getContractState(address)).state === 'active';\n    }\n    /**\n     * Resolves contract state\n     * @param address contract address\n     */\n    async getContractState(address) {\n        let info = await __classPrivateFieldGet(this, _TonClient_api, \"f\").getAddressInformation(address);\n        let balance = new bn_js_1.BN(info.balance);\n        let state = info.state;\n        return {\n            balance,\n            state,\n            code: info.code !== '' ? Buffer.from(info.code, 'base64') : null,\n            data: info.data !== '' ? Buffer.from(info.data, 'base64') : null,\n            lastTransaction: info.last_transaction_id.lt !== '0' ? {\n                lt: info.last_transaction_id.lt,\n                hash: info.last_transaction_id.hash,\n            } : null,\n            blockId: {\n                workchain: info.block_id.workchain,\n                shard: info.block_id.shard,\n                seqno: info.block_id.seqno\n            },\n            timestampt: info.sync_utime\n        };\n    }\n    /**\n     * Open Wallet from address\n     * @param source wallet address\n     * @returns wallet with specified address\n     */\n    openWalletFromAddress(args) {\n        return Wallet_1.Wallet.open(this, args.source);\n    }\n    /**\n     * Open Wallet from secret key. Searches for best wallet contract.\n     * @param workchain wallet workchain\n     * @param secretKey wallet secret key\n     * @returns best matched wallet\n     */\n    findWalletFromSecretKey(args) {\n        return Wallet_1.Wallet.findBestBySecretKey(this, args.workchain, args.secretKey);\n    }\n    /**\n     * Open wallet with default contract\n     * @param args workchain and secret key\n     * @returns wallet\n     */\n    openWalletDefaultFromSecretKey(args) {\n        return Wallet_1.Wallet.openDefault(this, args.workchain, args.secretKey);\n    }\n    /**\n     * Open wallet with default contract\n     * @param args workchain and secret key\n     * @returns wallet\n     */\n    openWalletFromSecretKey(args) {\n        return Wallet_1.Wallet.openByType(this, args.workchain, args.secretKey, args.type);\n    }\n    /**\n     * Opens wallet from custom contract\n     * @param src source\n     * @returns wallet\n     */\n    openWalletFromCustomContract(src) {\n        return Wallet_1.Wallet.openFromSource(this, src);\n    }\n    /**\n     * Securely creates new wallet\n     * @param password optional password\n     */\n    async createNewWallet(args) {\n        let mnemonic = await (0, ton_crypto_1.mnemonicNew)(24, args.password);\n        let key = await (0, ton_crypto_1.mnemonicToWalletKey)(mnemonic, args.password);\n        let kind = args.type || 'org.ton.wallets.v3';\n        let wallet = Wallet_1.Wallet.openByType(this, args.workchain, key.secretKey, kind);\n        return {\n            mnemonic,\n            key,\n            wallet\n        };\n    }\n}\nexports.TonClient = TonClient;\n_TonClient_api = new WeakMap();\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromNano = exports.toNano = void 0;\nconst ethUnit = require('ethjs-unit');\nfunction toNano(src) {\n    return ethUnit.toWei(src, 'gwei');\n}\nexports.toNano = toNano;\nfunction fromNano(src) {\n    return ethUnit.fromWei(src, 'gwei');\n}\nexports.fromNano = fromNano;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _KeyStore_salt, _KeyStore_publicKey, _KeyStore_records;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KeyStore = exports.createKeyStoreKey = void 0;\nconst ton_crypto_1 = require(\"ton-crypto\");\nconst t = __importStar(require(\"io-ts\"));\nconst Either_1 = require(\"fp-ts/lib/Either\");\nconst __1 = require(\"..\");\nconst tweetnacl_1 = __importDefault(require(\"tweetnacl\"));\nconst codec = t.type({\n    version: t.number,\n    salt: t.string,\n    publicKey: t.string,\n    records: t.array(t.type({\n        name: t.string,\n        address: t.string,\n        kind: t.string,\n        config: t.string,\n        publicKey: t.string,\n        secretKey: t.string,\n        comment: t.string\n    }))\n});\nasync function createKeyStoreKey(password, salt) {\n    let secretKey = await (0, ton_crypto_1.pbkdf2_sha512)(password, salt, 400000, 32);\n    let r = tweetnacl_1.default.box.keyPair.fromSecretKey(secretKey);\n    return {\n        secretKey: Buffer.from(r.secretKey),\n        publicKey: Buffer.from(r.publicKey)\n    };\n}\nexports.createKeyStoreKey = createKeyStoreKey;\nclass KeyStore {\n    constructor(src) {\n        _KeyStore_salt.set(this, void 0);\n        _KeyStore_publicKey.set(this, void 0);\n        _KeyStore_records.set(this, new Map());\n        this.checkPassword = async (password) => {\n            let key = await createKeyStoreKey(password, Buffer.from(__classPrivateFieldGet(this, _KeyStore_salt, \"f\"), 'hex'));\n            if (!key.publicKey.equals(Buffer.from(__classPrivateFieldGet(this, _KeyStore_publicKey, \"f\"), 'hex'))) {\n                return false;\n            }\n            else {\n                return true;\n            }\n        };\n        this.hasKey = (name) => {\n            return __classPrivateFieldGet(this, _KeyStore_records, \"f\").has(name);\n        };\n        this.getKey = (name) => {\n            let ex = __classPrivateFieldGet(this, _KeyStore_records, \"f\").get(name);\n            if (ex) {\n                return {\n                    name: ex.name,\n                    address: ex.address,\n                    kind: ex.kind,\n                    config: ex.config,\n                    comment: ex.comment,\n                    publicKey: Buffer.from(ex.publicKey, 'hex')\n                };\n            }\n            return null;\n        };\n        this.getSecret = async (name, password) => {\n            if (!__classPrivateFieldGet(this, _KeyStore_records, \"f\").has(name)) {\n                throw Error('Key with name ' + name + ' does not exist');\n            }\n            let record = __classPrivateFieldGet(this, _KeyStore_records, \"f\").get(name);\n            let src = Buffer.from(record.secretKey, 'hex');\n            let nonce = src.slice(0, 24);\n            let publicKey = src.slice(24, 24 + 32);\n            let data = src.slice(24 + 32);\n            // Derive key\n            let key = await createKeyStoreKey(password, Buffer.from(__classPrivateFieldGet(this, _KeyStore_salt, \"f\"), 'hex'));\n            if (!key.publicKey.equals(Buffer.from(__classPrivateFieldGet(this, _KeyStore_publicKey, \"f\"), 'hex'))) {\n                throw Error('Invalid password');\n            }\n            // Decode\n            let decoded = tweetnacl_1.default.box.open(data, nonce, publicKey, key.secretKey);\n            if (!decoded) {\n                throw Error('Invalid password');\n            }\n            return Buffer.from(decoded);\n        };\n        this.addKey = async (record, key) => {\n            if (__classPrivateFieldGet(this, _KeyStore_records, \"f\").has(record.name)) {\n                throw Error('Key with name ' + record.name + ' already exists');\n            }\n            // Create key\n            let ephemeralKeySecret = await (0, ton_crypto_1.getSecureRandomBytes)(32);\n            let ephemeralKeyPublic = Buffer.from((tweetnacl_1.default.box.keyPair.fromSecretKey(ephemeralKeySecret)).publicKey);\n            let nonce = await (0, ton_crypto_1.getSecureRandomBytes)(24);\n            let encrypted = tweetnacl_1.default.box(key, nonce, Buffer.from(__classPrivateFieldGet(this, _KeyStore_publicKey, \"f\"), 'hex'), ephemeralKeySecret);\n            let data = Buffer.concat([nonce, ephemeralKeyPublic, encrypted]);\n            // Create record\n            let rec = {\n                name: record.name,\n                address: record.address,\n                kind: record.kind,\n                config: record.config,\n                comment: record.comment,\n                publicKey: record.publicKey.toString('hex'),\n                secretKey: data.toString('hex')\n            };\n            Object.freeze(rec);\n            __classPrivateFieldGet(this, _KeyStore_records, \"f\").set(record.name, rec);\n        };\n        this.removeKey = (name) => {\n            if (!__classPrivateFieldGet(this, _KeyStore_records, \"f\").has(name)) {\n                throw Error('Key with name ' + name + ' does not exist');\n            }\n            __classPrivateFieldGet(this, _KeyStore_records, \"f\").delete(name);\n        };\n        if (src.version !== 1) {\n            throw Error('Unsupported keystore');\n        }\n        __classPrivateFieldSet(this, _KeyStore_salt, src.salt, \"f\");\n        __classPrivateFieldSet(this, _KeyStore_publicKey, src.publicKey, \"f\");\n        for (let r of src.records) {\n            if (__classPrivateFieldGet(this, _KeyStore_records, \"f\").has(r.name)) {\n                throw Error('Broken keystore');\n            }\n            const record = {\n                name: r.name,\n                address: __1.Address.parseRaw(r.address),\n                kind: r.kind,\n                config: r.config,\n                comment: r.comment,\n                publicKey: r.publicKey,\n                secretKey: r.secretKey\n            };\n            Object.freeze(record);\n            __classPrivateFieldGet(this, _KeyStore_records, \"f\").set(r.name, record);\n        }\n    }\n    static async createNew(password) {\n        let salt = await (0, ton_crypto_1.getSecureRandomBytes)(32);\n        let key = await createKeyStoreKey(password, salt);\n        return new KeyStore({ version: 1, salt: salt.toString('hex'), publicKey: key.publicKey.toString('hex'), records: [] });\n    }\n    static async load(source) {\n        // Validate checksum\n        if (source.length < 32) {\n            throw Error('Broken keystore');\n        }\n        let hash = source.slice(0, 32);\n        let data = source.slice(32);\n        let hash2 = await (0, ton_crypto_1.sha256)(data);\n        if (!hash.equals(hash2)) { // We don't care about timing attacks here\n            throw Error('Broken keystore');\n        }\n        // Parse storage\n        let parsed = JSON.parse(data.toString('utf-8'));\n        let decoded = codec.decode(parsed);\n        if ((0, Either_1.isLeft)(decoded)) {\n            throw Error('Broken keystore');\n        }\n        return new KeyStore(decoded.right);\n    }\n    get allKeys() {\n        let res = [];\n        for (let k of __classPrivateFieldGet(this, _KeyStore_records, \"f\").keys()) {\n            let r = __classPrivateFieldGet(this, _KeyStore_records, \"f\").get(k);\n            res.push({\n                name: r.name,\n                address: r.address,\n                kind: r.kind,\n                config: r.config,\n                comment: r.comment,\n                publicKey: Buffer.from(r.publicKey, 'hex')\n            });\n        }\n        return res;\n    }\n    async save() {\n        let store = {\n            version: 1,\n            salt: __classPrivateFieldGet(this, _KeyStore_salt, \"f\"),\n            publicKey: __classPrivateFieldGet(this, _KeyStore_publicKey, \"f\"),\n            records: Array.from(__classPrivateFieldGet(this, _KeyStore_records, \"f\").entries()).map((v) => ({\n                name: v[1].name,\n                address: v[1].address.toString(),\n                kind: v[1].kind,\n                config: v[1].config,\n                comment: v[1].comment,\n                publicKey: v[1].publicKey,\n                secretKey: v[1].secretKey\n            }))\n        };\n        let data = Buffer.from(JSON.stringify(store), 'utf-8');\n        let hash = await (0, ton_crypto_1.sha256)(data);\n        return Buffer.concat([hash, data]);\n    }\n}\nexports.KeyStore = KeyStore;\n_KeyStore_salt = new WeakMap(), _KeyStore_publicKey = new WeakMap(), _KeyStore_records = new WeakMap();\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Slice = void 0;\nconst __1 = require(\"..\");\nclass Slice {\n    constructor(sourceBits, sourceRefs) {\n        this.refs = [];\n        this.skip = (bits) => {\n            this.bits.skip(bits);\n        };\n        this.readUint = (bits) => {\n            return this.bits.readUint(bits);\n        };\n        this.readUintNumber = (bits) => {\n            return this.bits.readUintNumber(bits);\n        };\n        this.readInt = (bits) => {\n            return this.bits.readInt(bits);\n        };\n        this.readIntNumber = (bits) => {\n            return this.bits.readIntNumber(bits);\n        };\n        this.readBuffer = (size) => {\n            return this.bits.readBuffer(size);\n        };\n        this.readBit = () => {\n            return this.bits.readBit();\n        };\n        this.readCoins = () => {\n            return this.bits.readCoins();\n        };\n        this.readVarUInt = (headerBits) => {\n            return this.bits.readVarUInt(headerBits);\n        };\n        this.readVarUIntNumber = (headerBits) => {\n            return this.bits.readVarUIntNumber(headerBits);\n        };\n        this.readRemaining = () => {\n            return this.bits.readRemaining();\n        };\n        this.readRemainingBytes = () => {\n            if (this.bits.remaining % 8 !== 0) {\n                throw Error('Number remaining of bits is not multiply of 8');\n            }\n            return this.bits.readBuffer(this.bits.remaining / 8);\n        };\n        this.readAddress = () => {\n            return this.bits.readAddress();\n        };\n        this.readUnaryLength = () => {\n            return this.bits.readUnaryLength();\n        };\n        this.readOptDict = (keySize, extractor) => {\n            if (this.readBit()) {\n                return this.readDict(keySize, extractor);\n            }\n            else {\n                return null;\n            }\n        };\n        this.readDict = (keySize, extractor) => {\n            let first = this.refs.shift();\n            if (first) {\n                return (0, __1.parseDict)(first.beginParse(), keySize, extractor);\n            }\n            else {\n                throw Error('No ref');\n            }\n        };\n        this.readRef = () => {\n            let first = this.refs.shift();\n            if (first) {\n                return Slice.fromCell(first);\n            }\n            else {\n                throw Error('No ref');\n            }\n        };\n        this.readCell = () => {\n            let first = this.refs.shift();\n            if (first) {\n                return first;\n            }\n            else {\n                throw Error('No ref');\n            }\n        };\n        this.clone = () => {\n            // Copy remaining\n            const cloned = this.sourceBits.clone();\n            const reader = new __1.BitStringReader(cloned);\n            reader.skip(this.bits.currentOffset);\n            const remaining = reader.readRemaining();\n            const remainingRefs = [...this.refs];\n            // Build slice\n            return new Slice(remaining, remainingRefs);\n        };\n        this.toCell = () => {\n            // Copy remaining\n            const cloned = this.sourceBits.clone();\n            const reader = new __1.BitStringReader(cloned);\n            reader.skip(this.bits.currentOffset);\n            const remaining = reader.readRemaining();\n            let cell = new __1.Cell(false, remaining);\n            for (let r of this.refs) {\n                cell.refs.push(r);\n            }\n            return cell;\n        };\n        this.sourceBits = sourceBits.clone();\n        this.refs = [...sourceRefs];\n        this.bits = new __1.BitStringReader(this.sourceBits);\n    }\n    static fromCell(cell) {\n        return new Slice(cell.bits, cell.refs);\n    }\n    get remaining() {\n        return this.bits.remaining;\n    }\n    get remainingRefs() {\n        return this.refs.length;\n    }\n}\nexports.Slice = Slice;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.base32Decode = exports.base32Encode = void 0;\nconst alphabet = 'abcdefghijklmnopqrstuvwxyz234567';\nfunction base32Encode(buffer) {\n    const length = buffer.byteLength;\n    let bits = 0;\n    let value = 0;\n    let output = '';\n    for (let i = 0; i < length; i++) {\n        value = (value << 8) | buffer[i];\n        bits += 8;\n        while (bits >= 5) {\n            output += alphabet[(value >>> (bits - 5)) & 31];\n            bits -= 5;\n        }\n    }\n    if (bits > 0) {\n        output += alphabet[(value << (5 - bits)) & 31];\n    }\n    return output;\n}\nexports.base32Encode = base32Encode;\nfunction readChar(alphabet, char) {\n    const idx = alphabet.indexOf(char);\n    if (idx === -1) {\n        throw new Error('Invalid character found: ' + char);\n    }\n    return idx;\n}\nfunction base32Decode(input) {\n    let cleanedInput;\n    cleanedInput = input.toLowerCase();\n    const { length } = cleanedInput;\n    let bits = 0;\n    let value = 0;\n    let index = 0;\n    const output = Buffer.alloc(((length * 5) / 8) | 0);\n    for (let i = 0; i < length; i++) {\n        value = (value << 5) | readChar(alphabet, cleanedInput[i]);\n        bits += 5;\n        if (bits >= 8) {\n            output[index++] = (value >>> (bits - 8)) & 255;\n            bits -= 8;\n        }\n    }\n    return output;\n}\nexports.base32Decode = base32Decode;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ADNLAddress = void 0;\nconst symbol_inspect_1 = __importDefault(require(\"symbol.inspect\"));\nconst base32_1 = require(\"../utils/base32\");\nconst crc16_1 = require(\"../utils/crc16\");\nclass ADNLAddress {\n    constructor(address) {\n        this.toString = () => {\n            return this.toFriendly();\n        };\n        this.toRaw = () => {\n            return this.address.toString('hex').toUpperCase();\n        };\n        this.toFriendly = () => {\n            let data = Buffer.concat([Buffer.from([0x2D]), this.address]);\n            let hash = (0, crc16_1.crc16)(data);\n            data = Buffer.concat([data, hash]);\n            return (0, base32_1.base32Encode)(data).slice(1);\n        };\n        this[_a] = () => this.toFriendly();\n        if (address.length !== 32) {\n            throw Error('Invalid address');\n        }\n        this.address = address;\n    }\n    static parseFriendly(src) {\n        if (src.length !== 55) {\n            throw Error('Invalid address');\n        }\n        // Decoding\n        src = 'f' + src;\n        let decoded = (0, base32_1.base32Decode)(src);\n        if (decoded[0] !== 0x2d) {\n            throw Error('Invalid address');\n        }\n        let gotHash = decoded.slice(33);\n        let hash = (0, crc16_1.crc16)(decoded.slice(0, 33));\n        if (!hash.equals(gotHash)) {\n            throw Error('Invalid address');\n        }\n        return new ADNLAddress(decoded.slice(1, 33));\n    }\n    static parseRaw(src) {\n        const data = Buffer.from(src, 'base64');\n        return new ADNLAddress(data);\n    }\n    equals(b) {\n        return this.address.equals(b.address);\n    }\n}\nexports.ADNLAddress = ADNLAddress;\n_a = symbol_inspect_1.default;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ADNLKey = void 0;\nconst ton_crypto_1 = require(\"ton-crypto\");\nconst ADNLAddress_1 = require(\"../address/ADNLAddress\");\nconst KEY_PREFIX = Buffer.from('17236849', 'hex');\nclass ADNLKey {\n    constructor(address, keyPair) {\n        this.address = address;\n        this.keyPair = keyPair;\n    }\n    static async fromKey(src) {\n        if (src.length !== 36) {\n            throw Error('Invalid key');\n        }\n        if (!src.slice(0, 4).equals(KEY_PREFIX)) {\n            throw Error('Invalid key');\n        }\n        const keySeed = src.slice(4);\n        // Create keypair\n        const keyPair = (0, ton_crypto_1.keyPairFromSeed)(keySeed);\n        // Create address\n        const address = await (0, ton_crypto_1.sha256)(Buffer.concat([Buffer.from([0xC6, 0xB4, 0x13, 0x48]), keyPair.publicKey]));\n        return new ADNLKey(new ADNLAddress_1.ADNLAddress(address), keyPair);\n    }\n}\nexports.ADNLKey = ADNLKey;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.beginCell = exports.Builder = void 0;\nconst BitString_1 = require(\"./BitString\");\nconst Cell_1 = require(\"./Cell\");\nclass Builder {\n    constructor() {\n        this.bits = BitString_1.BitString.alloc(1023);\n        this.refs = [];\n        this.ended = false;\n        this.storeRef = (src) => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            this.refs.push(src);\n            return this;\n        };\n        this.storeBit = (value) => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            this.bits.writeBit(value);\n            return this;\n        };\n        this.storeBitArray = (value) => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            this.bits.writeBitArray(value);\n            return this;\n        };\n        this.storeUint = (value, bitLength) => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            this.bits.writeUint(value, bitLength);\n            return this;\n        };\n        this.storeInt = (value, bitLength) => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            this.bits.writeInt(value, bitLength);\n            return this;\n        };\n        this.storeUint8 = (value) => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            this.bits.writeUint8(value);\n            return this;\n        };\n        this.storeBuffer = (buffer) => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            this.bits.writeBuffer(buffer);\n            return this;\n        };\n        this.storeCoins = (amount) => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            this.bits.writeCoins(amount);\n            return this;\n        };\n        this.storeAddress = (address) => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            this.bits.writeAddress(address);\n            return this;\n        };\n        this.storeBitString = (value) => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            this.bits.writeBitString(value);\n            return this;\n        };\n        this.storeDict = (src) => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            if (src) {\n                this.bits.writeBit(true);\n                this.refs.push(src);\n            }\n            else {\n                this.bits.writeBit(false);\n            }\n            return this;\n        };\n        this.storeRefMaybe = (src) => {\n            return this.storeDict(src);\n        };\n    }\n    endCell() {\n        if (this.ended) {\n            throw Error('Already ended');\n        }\n        this.ended = true;\n        let res = new Cell_1.Cell(false, this.bits);\n        for (let r of this.refs) {\n            res.refs.push(r);\n        }\n        return res;\n    }\n}\nexports.Builder = Builder;\nfunction beginCell() {\n    return new Builder();\n}\nexports.beginCell = beginCell;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findCommonPrefix = void 0;\nfunction findCommonPrefix(src) {\n    // Corner cases\n    if (src.length === 0) {\n        return '';\n    }\n    if (src.length === 1) {\n        return src[0];\n    }\n    // Searching for prefix\n    const sorted = [...src].sort();\n    let size = 0;\n    for (let i = 0; i < sorted[0].length; i++) {\n        if (sorted[0][i] !== sorted[sorted.length - 1][i]) {\n            break;\n        }\n        size++;\n    }\n    return src[0].slice(0, size);\n}\nexports.findCommonPrefix = findCommonPrefix;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeDict = exports.detectLabelType = exports.writeLabelSame = exports.writeLabelLong = exports.writeLabelShort = exports.buildTree = void 0;\nconst bn_js_1 = require(\"bn.js\");\nconst Cell_1 = require(\"../Cell\");\nconst findCommonPrefix_1 = require(\"./utils/findCommonPrefix\");\n//\n// Tree Build\n//\nfunction pad(src, size) {\n    while (src.length < size) {\n        src = '0' + src;\n    }\n    return src;\n}\nfunction removePrefixMap(src, length) {\n    if (length === 0) {\n        return src;\n    }\n    else {\n        let res = new Map();\n        for (let k of src.keys()) {\n            let d = src.get(k);\n            res.set(k.slice(length), d);\n        }\n        return res;\n    }\n}\nfunction forkMap(src) {\n    if (src.size === 0) {\n        throw Error('Internal inconsistency');\n    }\n    let left = new Map();\n    let right = new Map();\n    for (let k of src.keys()) {\n        let d = src.get(k);\n        if (k.startsWith('0')) {\n            left.set(k.substr(1), d);\n        }\n        else {\n            right.set(k.substr(1), d);\n        }\n    }\n    if (left.size === 0) {\n        throw Error('Internal inconsistency. Left emtpy.');\n    }\n    if (right.size === 0) {\n        throw Error('Internal inconsistency. Right emtpy.');\n    }\n    return { left, right };\n}\nfunction buildNode(src) {\n    if (src.size === 0) {\n        throw Error('Internal inconsistency');\n    }\n    if (src.size === 1) {\n        return { type: 'leaf', value: Array.from(src.values())[0] };\n    }\n    let { left, right } = forkMap(src);\n    return {\n        type: 'fork',\n        left: buildEdge(left),\n        right: buildEdge(right)\n    };\n}\nfunction buildEdge(src) {\n    if (src.size === 0) {\n        throw Error('Internal inconsistency');\n    }\n    const label = (0, findCommonPrefix_1.findCommonPrefix)(Array.from(src.keys()));\n    return { label, node: buildNode(removePrefixMap(src, label.length)) };\n}\nfunction buildTree(src, keyLength) {\n    // Convert map keys\n    let converted = new Map();\n    for (let k of Array.from(src.keys())) {\n        const padded = pad(new bn_js_1.BN(k).toString(2), keyLength);\n        converted.set(padded, src.get(k));\n    }\n    // Calculate root label\n    return buildEdge(converted);\n}\nexports.buildTree = buildTree;\n//\n// Serialization\n//\nfunction writeLabelShort(src, to) {\n    // Header\n    to.writeBit(0);\n    // Unary length\n    for (let i = 0; i < src.length; i++) {\n        to.writeBit(1);\n    }\n    to.writeBit(0);\n    // Value\n    for (let i = 0; i < src.length; i++) {\n        to.writeBit(src[i] === '1');\n    }\n    return to;\n}\nexports.writeLabelShort = writeLabelShort;\nfunction labelShortLength(src) {\n    return 1 + src.length + 1 + src.length;\n}\nfunction writeLabelLong(src, keyLength, to) {\n    // Header\n    to.writeBit(1);\n    to.writeBit(0);\n    // Length\n    let length = Math.ceil(Math.log2(keyLength + 1));\n    to.writeUint(src.length, length);\n    // Value\n    for (let i = 0; i < src.length; i++) {\n        to.writeBit(src[i] === '1');\n    }\n    return to;\n}\nexports.writeLabelLong = writeLabelLong;\nfunction labelLongLength(src, keyLength) {\n    return 1 + 1 + Math.ceil(Math.log2(keyLength + 1)) + src.length;\n}\nfunction writeLabelSame(value, length, keyLength, to) {\n    // Header\n    to.writeBit(1);\n    to.writeBit(1);\n    // Value\n    to.writeBit(value);\n    // Length\n    let lenLen = Math.ceil(Math.log2(keyLength + 1));\n    to.writeUint(length, lenLen);\n}\nexports.writeLabelSame = writeLabelSame;\nfunction labelSameLength(keyLength) {\n    return 1 + 1 + 1 + Math.ceil(Math.log2(keyLength + 1));\n}\nfunction isSame(src) {\n    if (src.length === 0 || src.length === 1) {\n        return true;\n    }\n    for (let i = 1; i < src.length; i++) {\n        if (src[i] !== src[0]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction detectLabelType(src, keyLength) {\n    let kind = 'short';\n    let kindLength = labelShortLength(src);\n    let longLength = labelLongLength(src, keyLength);\n    if (longLength < kindLength) {\n        kindLength = longLength;\n        kind = 'long';\n    }\n    if (isSame(src)) {\n        let sameLength = labelSameLength(keyLength);\n        if (sameLength < kindLength) {\n            kindLength = sameLength;\n            kind = 'same';\n        }\n    }\n    return kind;\n}\nexports.detectLabelType = detectLabelType;\nfunction writeLabel(src, keyLength, to) {\n    let type = detectLabelType(src, keyLength);\n    if (type === 'short') {\n        writeLabelShort(src, to);\n    }\n    if (type === 'long') {\n        writeLabelLong(src, keyLength, to);\n    }\n    if (type === 'same') {\n        writeLabelSame(src[0] === '1', src.length, keyLength, to);\n    }\n}\nfunction writeNode(src, keyLength, serializer, to) {\n    if (src.type === 'leaf') {\n        serializer(src.value, to);\n    }\n    if (src.type === 'fork') {\n        const leftCell = new Cell_1.Cell();\n        const rightCell = new Cell_1.Cell();\n        writeEdge(src.left, keyLength - 1, serializer, leftCell);\n        writeEdge(src.right, keyLength - 1, serializer, rightCell);\n        to.refs.push(leftCell);\n        to.refs.push(rightCell);\n    }\n}\nfunction writeEdge(src, keyLength, serializer, to) {\n    writeLabel(src.label, keyLength, to.bits);\n    writeNode(src.node, keyLength - src.label.length, serializer, to);\n}\nfunction serializeDict(src, keyLength, serializer) {\n    const tree = buildTree(src, keyLength);\n    const dest = new Cell_1.Cell();\n    writeEdge(tree, keyLength, serializer, dest);\n    return dest;\n}\nexports.serializeDict = serializeDict;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.beginDict = exports.DictBuilder = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst Builder_1 = require(\"./Builder\");\nconst serializeDict_1 = require(\"./dict/serializeDict\");\nclass DictBuilder {\n    constructor(keySize) {\n        this.items = new Map();\n        this.ended = false;\n        this.storeCell = (index, value) => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            let key;\n            if (typeof index === 'number') {\n                key = index.toString(10);\n            }\n            else if (bn_js_1.default.isBN(index)) {\n                key = index.toString(10);\n            }\n            else if (Buffer.isBuffer(index)) {\n                key = new bn_js_1.default(index.toString('hex'), 'hex').toString(10);\n            }\n            else {\n                throw Error('Invalid index type');\n            }\n            if (this.items.has(key)) {\n                throw Error('Item ' + index + ' already exist');\n            }\n            this.items.set(key, value);\n        };\n        this.storeRef = (index, value) => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            this.storeCell(index, (0, Builder_1.beginCell)()\n                .storeRef(value)\n                .endCell());\n        };\n        this.endDict = () => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            this.ended = true;\n            if (this.items.size === 0) {\n                return null;\n            }\n            return (0, serializeDict_1.serializeDict)(this.items, this.keySize, (src, dst) => dst.writeCell(src));\n        };\n        this.endCell = () => {\n            if (this.ended) {\n                throw Error('Already ended');\n            }\n            if (this.items.size === 0) {\n                throw Error('Dict is empty');\n            }\n            return this.endDict();\n        };\n        this.keySize = keySize;\n    }\n}\nexports.DictBuilder = DictBuilder;\nfunction beginDict(keyLength) {\n    return new DictBuilder(keyLength);\n}\nexports.beginDict = beginDict;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bnToAddress = void 0;\nconst Address_1 = require(\"../address/Address\");\nfunction bnToAddress(chain, bn) {\n    let r = bn.toString(\"hex\");\n    while (r.length < 64) {\n        r = \"0\" + r;\n    }\n    return new Address_1.Address(chain, Buffer.from(r, \"hex\"));\n}\nexports.bnToAddress = bnToAddress;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TupleSlice = void 0;\nconst bn_js_1 = require(\"bn.js\");\nconst bnToAddress_1 = require(\"../utils/bnToAddress\");\nconst Cell_1 = require(\"./Cell\");\nclass TupleSlice {\n    constructor(items) {\n        this.items = [...items];\n    }\n    get remaining() {\n        return this.items.length;\n    }\n    readNumber() {\n        if (this.items[0][0] !== 'num') {\n            throw Error('Not a number');\n        }\n        let res = parseInt(this.items[0][1]);\n        this.items.splice(0, 1);\n        return res;\n    }\n    readBoolean() {\n        if (this.items[0][0] !== 'num') {\n            throw Error('Not a number');\n        }\n        let res = parseInt(this.items[0][1]);\n        this.items.splice(0, 1);\n        return res === 0 ? false : true;\n    }\n    readBigNumber() {\n        if (this.items[0][0] !== 'num') {\n            throw Error('Not a number');\n        }\n        let res = new bn_js_1.BN(this.items[0][1].slice(2), 'hex');\n        this.items.splice(0, 1);\n        return res;\n    }\n    readCell() {\n        if (this.items[0][0] !== 'cell') {\n            throw Error('Not a cell');\n        }\n        let res = Cell_1.Cell.fromBoc(Buffer.from(this.items[0][1].bytes, 'base64'))[0];\n        this.items.splice(0, 1);\n        return res;\n    }\n    readNumericAddress(chain) {\n        if (this.items[0][0] !== 'num') {\n            throw Error('Not a number');\n        }\n        let bn = this.readBigNumber();\n        return (0, bnToAddress_1.bnToAddress)(chain, bn);\n    }\n}\nexports.TupleSlice = TupleSlice;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSupportedInterfaces = exports.getSupportedInterfacesRaw = exports.resolveKnownInterface = void 0;\nconst TupleSlice_1 = require(\"../boc/TupleSlice\");\nconst known = {\n    ['123515602279859691144772641439386770278']: 'org.ton.introspection.v0',\n    ['256184278959413194623484780286929323492']: 'com.tonwhales.nominators:v0'\n};\n/**\n * Resolves known interface\n * @param src source id\n * @returns known interface\n */\nfunction resolveKnownInterface(src) {\n    let kn = known[src];\n    if (kn) {\n        return kn;\n    }\n    else {\n        return null;\n    }\n}\nexports.resolveKnownInterface = resolveKnownInterface;\n/**\n * Fetching supported interfaces\n * @param src address\n * @param client client\n * @returns array of supported interfaces\n */\nasync function getSupportedInterfacesRaw(src, client) {\n    // Query interfaces\n    let res = await client.callGetMethodWithError(src, 'supported_interfaces');\n    // If not successful: return empty\n    if (res.exit_code !== 0 && res.exit_code !== 1) {\n        return [];\n    }\n    try {\n        let slice = new TupleSlice_1.TupleSlice(res.stack);\n        // First interface have to be introspection\n        let firstNumber = slice.readBigNumber().toString();\n        if (firstNumber !== '123515602279859691144772641439386770278') {\n            return [];\n        }\n        // Read all remaining\n        let interfaces = [];\n        while (slice.remaining > 0) {\n            interfaces.push(slice.readBigNumber().toString());\n        }\n        return interfaces;\n    }\n    catch (e) {\n        // In case of error: exit\n        console.warn(e);\n        return [];\n    }\n}\nexports.getSupportedInterfacesRaw = getSupportedInterfacesRaw;\n/**\n * Fetching supported interfaces\n * @param src address\n * @param client client\n * @returns array of supported interfaces\n */\nasync function getSupportedInterfaces(src, client) {\n    let supprotedRaw = await getSupportedInterfacesRaw(src, client);\n    return supprotedRaw.map((v) => {\n        let k = resolveKnownInterface(v);\n        if (k) {\n            return { type: 'known', name: k };\n        }\n        else {\n            return { type: 'unknown', value: v };\n        }\n    });\n}\nexports.getSupportedInterfaces = getSupportedInterfaces;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crc32str = exports.crc32 = void 0;\nconst POLYNOMIAL = -306674912;\nlet crc32_table = undefined;\nfunction calcTable() {\n    crc32_table = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n        let r = i;\n        for (let bit = 8; bit > 0; --bit)\n            r = ((r & 1) ? ((r >>> 1) ^ POLYNOMIAL) : (r >>> 1));\n        crc32_table[i] = r;\n    }\n}\nfunction crc32(bytes) {\n    let crc = 0xFFFFFFFF;\n    if (crc32_table === undefined) {\n        calcTable();\n    }\n    for (let i = 0; i < bytes.length; ++i)\n        crc = crc32_table[(crc ^ bytes[i]) & 0xff] ^ (crc >>> 8);\n    return (crc ^ -1) >>> 0;\n}\nexports.crc32 = crc32;\nfunction crc32str(src) {\n    return crc32(Buffer.from(src));\n}\nexports.crc32str = crc32str;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseSupportedMessage = void 0;\nconst crc32_1 = require(\"../utils/crc32\");\nfunction parseNominatorsMessage(op, sc) {\n    // Deposit\n    if (op === (0, crc32_1.crc32str)('op::stake_deposit')) {\n        let queryId = sc.readUint(64);\n        let gasLimit = sc.readCoins().toNumber();\n        return {\n            type: 'deposit',\n            data: {\n                'query_id': queryId,\n                'gas_limit': gasLimit\n            }\n        };\n    }\n    if (op === (0, crc32_1.crc32str)('op::stake_deposit::response')) {\n        return {\n            type: 'deposit::ok',\n            data: {}\n        };\n    }\n    // Withdraw\n    if (op === (0, crc32_1.crc32str)('op::stake_withdraw')) {\n        let queryId = sc.readUint(64);\n        let gasLimit = sc.readCoins().toNumber();\n        const stake = sc.readCoins();\n        return {\n            type: 'withdraw',\n            data: {\n                'stake': stake,\n                'query_id': queryId,\n                'gas_limit': gasLimit\n            }\n        };\n    }\n    if (op === (0, crc32_1.crc32str)('op::stake_withdraw::delayed')) {\n        return {\n            type: 'withdraw::delayed',\n            data: {}\n        };\n    }\n    if (op === (0, crc32_1.crc32str)('op::stake_withdraw::response')) {\n        return {\n            type: 'withdraw::ok',\n            data: {}\n        };\n    }\n    // Upgrade\n    if (op === (0, crc32_1.crc32str)('op::upgrade')) {\n        let queryId = sc.readUint(64);\n        let gasLimit = sc.readCoins().toNumber();\n        const code = sc.readCell();\n        return {\n            type: 'upgrade',\n            data: {\n                'code': code,\n                'query_id': queryId,\n                'gas_limit': gasLimit\n            }\n        };\n    }\n    if (op === (0, crc32_1.crc32str)('op::upgrade::response')) {\n        return {\n            type: 'upgrade::ok',\n            data: {}\n        };\n    }\n    // Upgrade\n    if (op === (0, crc32_1.crc32str)('op::upgrade')) {\n        let queryId = sc.readUint(64);\n        let gasLimit = sc.readCoins().toNumber();\n        const code = sc.readCell();\n        return {\n            type: 'upgrade',\n            data: {\n                'code': code,\n                'query_id': queryId,\n                'gas_limit': gasLimit\n            }\n        };\n    }\n    if (op === (0, crc32_1.crc32str)('op::upgrade::ok')) {\n        return {\n            type: 'upgrade::ok',\n            data: {}\n        };\n    }\n    // Update\n    if (op === (0, crc32_1.crc32str)('op::update')) {\n        let queryId = sc.readUint(64);\n        let gasLimit = sc.readCoins().toNumber();\n        const params = sc.readCell();\n        return {\n            type: 'update',\n            data: {\n                'code': params,\n                'query_id': queryId,\n                'gas_limit': gasLimit\n            }\n        };\n    }\n    if (op === (0, crc32_1.crc32str)('op::update::ok')) {\n        return {\n            type: 'update::ok',\n            data: {}\n        };\n    }\n    return null;\n}\nfunction parseSupportedMessage(knownInteface, message) {\n    try {\n        // Load OP\n        let sc = message.beginParse();\n        if (sc.remaining < 32) {\n            return null;\n        }\n        let op = sc.readUintNumber(32);\n        if (op === 0) {\n            return null;\n        }\n        // Nominators parsing\n        if (knownInteface === 'com.tonwhales.nominators:v0') {\n            return parseNominatorsMessage(op, sc);\n        }\n    }\n    catch (e) {\n        console.warn(e);\n    }\n    return null;\n}\nexports.parseSupportedMessage = parseSupportedMessage;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CellMessage = void 0;\nclass CellMessage {\n    constructor(cell) {\n        this.cell = cell;\n    }\n    writeTo(cell) {\n        cell.writeCell(this.cell);\n    }\n}\nexports.CellMessage = CellMessage;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmptyMessage = void 0;\nclass EmptyMessage {\n    writeTo(cell) {\n        // Nothing to do\n    }\n}\nexports.EmptyMessage = EmptyMessage;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommentMessage = void 0;\nconst Cell_1 = require(\"../boc/Cell\");\nclass CommentMessage {\n    constructor(comment) {\n        this.comment = comment;\n    }\n    writeTo(cell) {\n        if (this.comment.length > 0) {\n            cell.bits.writeUint(0, 32);\n            let bytes = Buffer.from(this.comment);\n            let dest = cell;\n            while (bytes.length > 0) {\n                let avaliable = Math.floor(dest.bits.available / 8);\n                if (bytes.length <= avaliable) {\n                    dest.bits.writeBuffer(bytes);\n                    break;\n                }\n                dest.bits.writeBuffer(bytes.slice(0, avaliable));\n                bytes = bytes.slice(avaliable, bytes.length);\n                let nc = new Cell_1.Cell();\n                dest.refs.push(nc);\n                dest = nc;\n            }\n        }\n    }\n}\nexports.CommentMessage = CommentMessage;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BinaryMessage = void 0;\nclass BinaryMessage {\n    constructor(payload) {\n        this.payload = payload;\n    }\n    writeTo(cell) {\n        cell.bits.writeBuffer(this.payload);\n    }\n}\nexports.BinaryMessage = BinaryMessage;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UnknownContractSource = void 0;\nclass UnknownContractSource {\n    constructor(type, workchain, description) {\n        this.backup = () => {\n            throw Error('Unknown');\n        };\n        this.describe = () => {\n            return this.description;\n        };\n        this.type = type;\n        this.workchain = workchain;\n        this.description = description;\n    }\n    get initialCode() {\n        throw Error('Unknown');\n    }\n    get initialData() {\n        throw Error('Unknown');\n    }\n}\nexports.UnknownContractSource = UnknownContractSource;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletV1R1Source = void 0;\nconst __1 = require(\"../..\");\nclass WalletV1R1Source {\n    constructor(opts) {\n        this.type = 'org.ton.wallets.simple';\n        this.walletVersion = 'v1';\n        this.backup = () => {\n            const store = new __1.ConfigStore();\n            store.setInt('wc', this.workchain);\n            store.setBuffer('pk', this.publicKey);\n            return store.save();\n        };\n        this.describe = () => {\n            return 'Simple Wallet Contract';\n        };\n        this.publicKey = opts.publicKey;\n        this.initialCode = opts.initialCode;\n        this.initialData = opts.initialData;\n        this.workchain = opts.workchain;\n        Object.freeze(this);\n    }\n    static create(opts) {\n        // Resolve parameters\n        let publicKey = opts.publicKey;\n        let workchain = opts.workchain;\n        // Build initial code and data\n        let initialCode = __1.Cell.fromBoc('B5EE9C72410101010044000084FF0020DDA4F260810200D71820D70B1FED44D0D31FD3FFD15112BAF2A122F901541044F910F2A2F80001D31F3120D74A96D307D402FB00DED1A4C8CB1FCBFFC9ED5441FDF089')[0];\n        let initialData = new __1.Cell();\n        initialData.bits.writeUint(0, 32); // SeqNo\n        initialData.bits.writeBuffer(publicKey); // Public key\n        return new WalletV1R1Source({ publicKey, initialCode, initialData, workchain });\n    }\n    static restore(backup) {\n        const store = new __1.ConfigStore(backup);\n        return WalletV1R1Source.create({ publicKey: store.getBuffer('pk'), workchain: store.getInt('wc') });\n    }\n}\nexports.WalletV1R1Source = WalletV1R1Source;\n", "\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ConfigStore_map;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConfigStore = void 0;\nconst __1 = require(\"..\");\nclass ConfigStore {\n    constructor(source) {\n        _ConfigStore_map.set(this, new Map());\n        this.getString = (key) => {\n            let ex = __classPrivateFieldGet(this, _ConfigStore_map, \"f\").get(key);\n            if (!ex) {\n                throw Error('Unable to find key ' + key);\n            }\n            return ex;\n        };\n        this.getBuffer = (key) => {\n            return Buffer.from(this.getString(key), 'hex');\n        };\n        this.getAddress = (key) => {\n            return __1.Address.parseFriendly(this.getString(key)).address;\n        };\n        this.getInt = (key) => {\n            return parseInt(this.getString(key));\n        };\n        this.setBuffer = (key, value) => {\n            this.setString(key, value.toString('hex'));\n        };\n        this.setAddress = (key, address) => {\n            this.setString(key, address.toFriendly());\n        };\n        if (source) {\n            let parts = source.split(',');\n            for (let p of parts) {\n                let pp = p.split('=');\n                if (pp.length !== 2) {\n                    throw Error('Mailformed input');\n                }\n                if (__classPrivateFieldGet(this, _ConfigStore_map, \"f\").has(pp[0])) {\n                    throw Error('Mailformed input');\n                }\n                __classPrivateFieldGet(this, _ConfigStore_map, \"f\").set(pp[0], pp[1]);\n            }\n        }\n    }\n    setString(key, value) {\n        if (key.indexOf('=') >= 0 || key.indexOf(',') >= 0) {\n            throw Error('Mailformed input');\n        }\n        if (value.indexOf('=') >= 0 || value.indexOf(',') >= 0) {\n            throw Error('Mailformed input');\n        }\n        __classPrivateFieldGet(this, _ConfigStore_map, \"f\").set(key, value);\n    }\n    setInt(key, value) {\n        this.setString(key, value.toString(10));\n    }\n    save() {\n        let res = '';\n        for (let e of __classPrivateFieldGet(this, _ConfigStore_map, \"f\")) {\n            if (res !== '') {\n                res += ',';\n            }\n            res += e[0] + '=' + e[1];\n        }\n        return res;\n    }\n}\nexports.ConfigStore = ConfigStore;\n_ConfigStore_map = new WeakMap();\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.safeSignVerify = exports.safeSign = void 0;\nconst ton_crypto_1 = require(\"ton-crypto\");\nfunction createSafeSignHash(cell) {\n    return (0, ton_crypto_1.sha256_sync)(Buffer.concat([Buffer.from([0xff, 0xff]), Buffer.from('ton-safe-sign-magic'), cell.hash()]));\n}\nfunction safeSign(cell, secretKey) {\n    return (0, ton_crypto_1.sign)(createSafeSignHash(cell), secretKey);\n}\nexports.safeSign = safeSign;\nfunction safeSignVerify(cell, signature, publicKey) {\n    return (0, ton_crypto_1.signVerify)(createSafeSignHash(cell), signature, publicKey);\n}\nexports.safeSignVerify = safeSignVerify;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseTransaction = exports.parseTransactionDescription = exports.parseBouncePhase = exports.parseActionPhase = exports.parseComputePhase = exports.parseCreditPhase = exports.parseStoragePhase = exports.parseStorageUsedShort = exports.parseAccountChange = exports.parseHashUpdate = exports.parseMessage = exports.parseStateInit = exports.parseCommonMsgInfo = exports.parseCurrencyCollection = exports.parseAccountStatus = void 0;\nconst __1 = require(\"..\");\nfunction parseAccountStatus(slice) {\n    const status = slice.readUintNumber(2);\n    if (status === 0x00) {\n        return 'uninitialized';\n    }\n    if (status === 0x01) {\n        return 'frozen';\n    }\n    if (status === 0x02) {\n        return 'active';\n    }\n    if (status === 0x03) {\n        return 'non-existing';\n    }\n    throw Error('Unreachable');\n}\nexports.parseAccountStatus = parseAccountStatus;\nfunction parseCurrencyCollection(slice) {\n    const coins = slice.readCoins();\n    if (slice.readBit()) {\n        throw Error('Currency collctions are not supported yet');\n    }\n    return { coins };\n}\nexports.parseCurrencyCollection = parseCurrencyCollection;\nfunction parseCommonMsgInfo(slice) {\n    if (!slice.readBit()) {\n        // Internal\n        let ihrDisabled = slice.readBit();\n        let bounce = slice.readBit();\n        let bounced = slice.readBit();\n        let src = slice.readAddress();\n        let dest = slice.readAddress();\n        let value = parseCurrencyCollection(slice);\n        let ihrFee = slice.readCoins();\n        let fwdFee = slice.readCoins();\n        let createdLt = slice.readUint(64);\n        let createdAt = slice.readUintNumber(32);\n        return {\n            type: 'internal',\n            ihrDisabled,\n            bounce,\n            bounced,\n            src,\n            dest,\n            value,\n            ihrFee,\n            fwdFee,\n            createdLt,\n            createdAt\n        };\n    }\n    else if (slice.readBit()) {\n        // Outgoing external\n        let src = slice.readAddress();\n        let dest = slice.readAddress();\n        let createdLt = slice.readUint(64);\n        let createdAt = slice.readUintNumber(32);\n        return {\n            type: 'external-out',\n            src,\n            dest,\n            createdLt,\n            createdAt\n        };\n    }\n    else {\n        // Incoming external\n        let src = slice.readAddress();\n        let dest = slice.readAddress();\n        let importFee = slice.readCoins();\n        return {\n            type: 'external-in',\n            src,\n            dest,\n            importFee\n        };\n    }\n}\nexports.parseCommonMsgInfo = parseCommonMsgInfo;\nfunction parseStateInit(slice) {\n    if (slice.readBit()) {\n        throw Error('Unsupported');\n    }\n    if (slice.readBit()) {\n        throw Error('Unsupported');\n    }\n    const hasCode = slice.readBit();\n    const code = hasCode ? slice.readCell() : null;\n    const hasData = slice.readBit();\n    const data = hasData ? slice.readCell() : null;\n    if (slice.readBit()) {\n        throw Error('Unsupported');\n    }\n    return { data, code };\n}\nexports.parseStateInit = parseStateInit;\nfunction parseMessage(slice) {\n    const info = parseCommonMsgInfo(slice);\n    const hasInit = slice.readBit();\n    let init = null;\n    if (hasInit) {\n        if (!slice.readBit()) {\n            init = parseStateInit(slice);\n        }\n        else {\n            init = parseStateInit(slice.readRef());\n        }\n    }\n    const body = slice.readBit() ? slice.readRef().toCell() : slice.toCell();\n    return {\n        info,\n        init,\n        body\n    };\n}\nexports.parseMessage = parseMessage;\nfunction parseHashUpdate(slice) {\n    if (slice.readUintNumber(8) !== 0x72) {\n        throw Error('Invalid transaction');\n    }\n    const oldHash = slice.readBuffer(32);\n    const newHash = slice.readBuffer(32);\n    return { oldHash, newHash };\n}\nexports.parseHashUpdate = parseHashUpdate;\nfunction parseAccountChange(slice) {\n    if (!slice.readBit()) {\n        return 'unchanged';\n    }\n    if (slice.readBit()) {\n        return 'frozen';\n    }\n    else {\n        return 'deleted';\n    }\n}\nexports.parseAccountChange = parseAccountChange;\nfunction parseStorageUsedShort(slice) {\n    return {\n        cells: slice.readVarUIntNumber(3),\n        bits: slice.readVarUIntNumber(3)\n    };\n}\nexports.parseStorageUsedShort = parseStorageUsedShort;\nfunction parseStoragePhase(slice) {\n    const storageFeesCollected = slice.readCoins();\n    let storageFeesDue = null;\n    if (slice.readBit()) {\n        storageFeesDue = slice.readCoins();\n    }\n    const statusChange = parseAccountChange(slice);\n    return {\n        storageFeesCollected,\n        storageFeesDue,\n        statusChange\n    };\n}\nexports.parseStoragePhase = parseStoragePhase;\nfunction parseCreditPhase(slice) {\n    let dueFeesColelcted = slice.readBit() ? slice.readCoins() : null;\n    const credit = parseCurrencyCollection(slice);\n    return {\n        dueFeesColelcted,\n        credit\n    };\n}\nexports.parseCreditPhase = parseCreditPhase;\nfunction parseComputePhase(slice) {\n    if (!slice.readBit()) {\n        const skipReason = slice.readUintNumber(2);\n        if (skipReason === 0x00) {\n            return {\n                type: 'skipped',\n                reason: 'no-state'\n            };\n        }\n        if (skipReason === 0x01) {\n            return {\n                type: 'skipped',\n                reason: 'bad-state'\n            };\n        }\n        if (skipReason === 0x02) {\n            return {\n                type: 'skipped',\n                reason: 'no-gas'\n            };\n        }\n    }\n    const success = slice.readBit();\n    const messageStateUsed = slice.readBit();\n    const accountActivated = slice.readBit();\n    let gasFees = slice.readCoins();\n    const vmState = slice.readRef();\n    let gasUsed = vmState.readVarUInt(3);\n    let gasLimit = vmState.readVarUInt(3);\n    let gasCredit = vmState.readBit() ? vmState.readVarUInt(2) : null;\n    let mode = vmState.readUintNumber(8);\n    let exitCode = vmState.readUintNumber(32);\n    let exitArg = vmState.readBit() ? vmState.readUintNumber(32) : null; // TODO: change to int\n    let vmSteps = vmState.readUintNumber(32);\n    let vmInitStateHash = vmState.readBuffer(32);\n    let vmFinalStateHash = vmState.readBuffer(32);\n    return {\n        type: 'computed',\n        success,\n        messageStateUsed,\n        accountActivated,\n        gasFees,\n        gasUsed,\n        gasLimit,\n        gasCredit,\n        mode,\n        exitCode,\n        exitArg,\n        vmSteps,\n        vmInitStateHash,\n        vmFinalStateHash\n    };\n}\nexports.parseComputePhase = parseComputePhase;\nfunction parseActionPhase(slice) {\n    const success = slice.readBit();\n    const valid = slice.readBit();\n    const noFunds = slice.readBit();\n    const statusChange = parseAccountChange(slice);\n    const totalFwdFees = slice.readBit() ? slice.readCoins() : null;\n    const totalActionFees = slice.readBit() ? slice.readCoins() : null;\n    const resultCode = slice.readUintNumber(32); // TODO: Change to int32\n    const resultArg = slice.readBit() ? slice.readUintNumber(32) : null; // TODO: Change to int32\n    const totalActions = slice.readUintNumber(16);\n    const specialActions = slice.readUintNumber(16);\n    const skippedActions = slice.readUintNumber(16);\n    const messagesCreated = slice.readUintNumber(16);\n    const actionListHash = slice.readBuffer(32);\n    const totalMessageSizes = parseStorageUsedShort(slice);\n    return {\n        success,\n        valid,\n        noFunds,\n        statusChange,\n        totalFwdFees,\n        totalActionFees,\n        resultCode,\n        resultArg,\n        totalActions,\n        specialActions,\n        skippedActions,\n        messagesCreated,\n        actionListHash,\n        totalMessageSizes\n    };\n}\nexports.parseActionPhase = parseActionPhase;\nfunction parseBouncePhase(slice) {\n    // Is OK\n    if (slice.readBit()) {\n        const msgSize = parseStorageUsedShort(slice);\n        const msgFees = slice.readCoins();\n        const fwdFees = slice.readCoins();\n        return {\n            type: 'ok',\n            msgSize,\n            msgFees,\n            fwdFees\n        };\n    }\n    // No funds\n    if (slice.readBit()) {\n        const msgSize = parseStorageUsedShort(slice);\n        const fwdFees = slice.readCoins();\n        return {\n            type: 'no-funds',\n            msgSize,\n            fwdFees\n        };\n    }\n    return {\n        type: 'negative-funds'\n    };\n}\nexports.parseBouncePhase = parseBouncePhase;\nfunction parseTransactionDescription(slice) {\n    const type = slice.readUintNumber(4);\n    if (type === 0x00) {\n        const creditFirst = slice.readBit();\n        let storagePhase = null;\n        let creditPhase = null;\n        if (slice.readBit()) {\n            storagePhase = parseStoragePhase(slice);\n        }\n        if (slice.readBit()) {\n            creditPhase = parseCreditPhase(slice);\n        }\n        let computePhase = parseComputePhase(slice);\n        let actionPhase = null;\n        if (slice.readBit()) {\n            actionPhase = parseActionPhase(slice.readRef());\n        }\n        let aborted = slice.readBit();\n        let bouncePhase = null;\n        if (slice.readBit()) {\n            bouncePhase = parseBouncePhase(slice);\n        }\n        const destroyed = slice.readBit();\n        return {\n            type: 'generic',\n            creditFirst,\n            storagePhase,\n            creditPhase,\n            computePhase,\n            actionPhase,\n            bouncePhase,\n            aborted,\n            destroyed\n        };\n    }\n    if (type === 0x01) {\n        let storagePhase = parseStoragePhase(slice);\n        return {\n            type: 'storage',\n            storagePhase\n        };\n    }\n    if (type === 0x2 || type === 0x03) {\n        const isTock = type === 0x03;\n        let storagePhase = parseStoragePhase(slice);\n        let computePhase = parseComputePhase(slice);\n        let actionPhase = null;\n        if (slice.readBit()) {\n            actionPhase = parseActionPhase(slice.readRef());\n        }\n        const aborted = slice.readBit();\n        const destroyed = slice.readBit();\n        return {\n            type: 'tick-tock',\n            isTock,\n            storagePhase,\n            computePhase,\n            actionPhase,\n            aborted,\n            destroyed\n        };\n    }\n    throw Error('Unsupported transaction type');\n}\nexports.parseTransactionDescription = parseTransactionDescription;\nfunction parseTransaction(workchain, slice) {\n    if (slice.readUintNumber(4) !== 0x07) {\n        throw Error('Invalid transaction');\n    }\n    // Read address\n    const addressHash = slice.readBuffer(32);\n    const address = new __1.Address(workchain, addressHash);\n    // Read lt\n    const lt = slice.readUint(64);\n    // Read prevTrans\n    const prevTransHash = slice.readBuffer(32);\n    const prevTransLt = slice.readUint(64);\n    // Read time\n    const time = slice.readUintNumber(32);\n    // Output messages\n    const outMessagesCount = slice.readUintNumber(15);\n    // Status\n    const oldStatus = parseAccountStatus(slice);\n    const newStatus = parseAccountStatus(slice);\n    // Messages ref\n    const messages = slice.readRef();\n    let hasInMessage = messages.readBit();\n    let hasOutMessages = messages.readBit();\n    let inMessage = null;\n    if (hasInMessage) {\n        inMessage = parseMessage(messages.readRef());\n    }\n    let outMessages = [];\n    if (hasOutMessages) {\n        let dict = messages.readDict(15, (slice) => parseMessage(slice.readRef()));\n        for (let msg of Array.from(dict.values())) {\n            outMessages.push(msg);\n        }\n    }\n    // Currency collections\n    let fees = parseCurrencyCollection(slice);\n    // Hash update\n    let update = parseHashUpdate(slice.readRef());\n    // Description\n    let description = parseTransactionDescription(slice.readRef());\n    return {\n        address,\n        lt,\n        time,\n        outMessagesCount,\n        oldStatus,\n        newStatus,\n        fees,\n        update,\n        description,\n        inMessage,\n        outMessages,\n        prevTransaction: {\n            hash: prevTransHash,\n            lt: prevTransLt\n        }\n    };\n}\nexports.parseTransaction = parseTransaction;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseDictBitString = exports.parseDict = exports.ConfigStore = exports.WalletV3R2Source = exports.WalletV3R1Source = exports.WalletV2R2Source = exports.WalletV2R1Source = exports.WalletV1R3Source = exports.WalletV1R2Source = exports.WalletV1R1Source = exports.UnknownContractSource = exports.contractAddress = exports.createWalletTransferV3 = exports.createWalletTransferV2 = exports.createWalletTransferV1 = exports.WalletContract = exports.BinaryMessage = exports.CommentMessage = exports.CommonMessageInfo = exports.StateInit = exports.EmptyMessage = exports.ExternalMessage = exports.InternalMessage = exports.CellMessage = exports.parseSupportedMessage = exports.getSupportedInterfacesRaw = exports.resolveKnownInterface = exports.getSupportedInterfaces = exports.TupleSlice = exports.bnToAddress = exports.beginDict = exports.DictBuilder = exports.beginCell = exports.Builder = exports.ADNLKey = exports.ADNLAddress = exports.Slice = exports.HttpApi = exports.InMemoryCache = exports.SendMode = exports.KeyStore = exports.fromNano = exports.toNano = exports.Address = exports.validateWalletType = exports.Wallet = exports.TonClient = exports.Cell = exports.BitStringReader = exports.BitString = void 0;\nexports.parseTransactionDescription = exports.parseBouncePhase = exports.parseActionPhase = exports.parseComputePhase = exports.parseCreditPhase = exports.parseStoragePhase = exports.parseStorageUsedShort = exports.parseAccountChange = exports.parseHashUpdate = exports.parseMessage = exports.parseStateInit = exports.parseCommonMsgInfo = exports.parseCurrencyCollection = exports.parseAccountStatus = exports.parseTransaction = exports.safeSignVerify = exports.safeSign = exports.serializeDict = exports.parseDictRefs = void 0;\nvar BitString_1 = require(\"./boc/BitString\");\nObject.defineProperty(exports, \"BitString\", { enumerable: true, get: function () { return BitString_1.BitString; } });\nvar BitStringReader_1 = require(\"./boc/BitStringReader\");\nObject.defineProperty(exports, \"BitStringReader\", { enumerable: true, get: function () { return BitStringReader_1.BitStringReader; } });\nvar Cell_1 = require(\"./boc/Cell\");\nObject.defineProperty(exports, \"Cell\", { enumerable: true, get: function () { return Cell_1.Cell; } });\nvar TonClient_1 = require(\"./client/TonClient\");\nObject.defineProperty(exports, \"TonClient\", { enumerable: true, get: function () { return TonClient_1.TonClient; } });\nvar Wallet_1 = require(\"./client/Wallet\");\nObject.defineProperty(exports, \"Wallet\", { enumerable: true, get: function () { return Wallet_1.Wallet; } });\nObject.defineProperty(exports, \"validateWalletType\", { enumerable: true, get: function () { return Wallet_1.validateWalletType; } });\nvar Address_1 = require(\"./address/Address\");\nObject.defineProperty(exports, \"Address\", { enumerable: true, get: function () { return Address_1.Address; } });\nvar convert_1 = require(\"./utils/convert\");\nObject.defineProperty(exports, \"toNano\", { enumerable: true, get: function () { return convert_1.toNano; } });\nObject.defineProperty(exports, \"fromNano\", { enumerable: true, get: function () { return convert_1.fromNano; } });\nvar KeyStore_1 = require(\"./keystore/KeyStore\");\nObject.defineProperty(exports, \"KeyStore\", { enumerable: true, get: function () { return KeyStore_1.KeyStore; } });\nvar SendMode_1 = require(\"./client/SendMode\");\nObject.defineProperty(exports, \"SendMode\", { enumerable: true, get: function () { return SendMode_1.SendMode; } });\nvar TonCache_1 = require(\"./client/TonCache\");\nObject.defineProperty(exports, \"InMemoryCache\", { enumerable: true, get: function () { return TonCache_1.InMemoryCache; } });\nvar HttpApi_1 = require(\"./client/api/HttpApi\");\nObject.defineProperty(exports, \"HttpApi\", { enumerable: true, get: function () { return HttpApi_1.HttpApi; } });\nvar Slice_1 = require(\"./boc/Slice\");\nObject.defineProperty(exports, \"Slice\", { enumerable: true, get: function () { return Slice_1.Slice; } });\nvar ADNLAddress_1 = require(\"./address/ADNLAddress\");\nObject.defineProperty(exports, \"ADNLAddress\", { enumerable: true, get: function () { return ADNLAddress_1.ADNLAddress; } });\nvar ADNLKey_1 = require(\"./keystore/ADNLKey\");\nObject.defineProperty(exports, \"ADNLKey\", { enumerable: true, get: function () { return ADNLKey_1.ADNLKey; } });\nvar Builder_1 = require(\"./boc/Builder\");\nObject.defineProperty(exports, \"Builder\", { enumerable: true, get: function () { return Builder_1.Builder; } });\nObject.defineProperty(exports, \"beginCell\", { enumerable: true, get: function () { return Builder_1.beginCell; } });\nvar DictBuilder_1 = require(\"./boc/DictBuilder\");\nObject.defineProperty(exports, \"DictBuilder\", { enumerable: true, get: function () { return DictBuilder_1.DictBuilder; } });\nObject.defineProperty(exports, \"beginDict\", { enumerable: true, get: function () { return DictBuilder_1.beginDict; } });\nvar bnToAddress_1 = require(\"./utils/bnToAddress\");\nObject.defineProperty(exports, \"bnToAddress\", { enumerable: true, get: function () { return bnToAddress_1.bnToAddress; } });\nvar TupleSlice_1 = require(\"./boc/TupleSlice\");\nObject.defineProperty(exports, \"TupleSlice\", { enumerable: true, get: function () { return TupleSlice_1.TupleSlice; } });\nvar getSupportedInterfaces_1 = require(\"./introspection/getSupportedInterfaces\");\nObject.defineProperty(exports, \"getSupportedInterfaces\", { enumerable: true, get: function () { return getSupportedInterfaces_1.getSupportedInterfaces; } });\nObject.defineProperty(exports, \"resolveKnownInterface\", { enumerable: true, get: function () { return getSupportedInterfaces_1.resolveKnownInterface; } });\nObject.defineProperty(exports, \"getSupportedInterfacesRaw\", { enumerable: true, get: function () { return getSupportedInterfaces_1.getSupportedInterfacesRaw; } });\nvar parseSupportedMessage_1 = require(\"./introspection/parseSupportedMessage\");\nObject.defineProperty(exports, \"parseSupportedMessage\", { enumerable: true, get: function () { return parseSupportedMessage_1.parseSupportedMessage; } });\nvar CellMessage_1 = require(\"./messages/CellMessage\");\nObject.defineProperty(exports, \"CellMessage\", { enumerable: true, get: function () { return CellMessage_1.CellMessage; } });\nvar InternalMessage_1 = require(\"./messages/InternalMessage\");\nObject.defineProperty(exports, \"InternalMessage\", { enumerable: true, get: function () { return InternalMessage_1.InternalMessage; } });\nvar ExternalMessage_1 = require(\"./messages/ExternalMessage\");\nObject.defineProperty(exports, \"ExternalMessage\", { enumerable: true, get: function () { return ExternalMessage_1.ExternalMessage; } });\nvar EmptyMessage_1 = require(\"./messages/EmptyMessage\");\nObject.defineProperty(exports, \"EmptyMessage\", { enumerable: true, get: function () { return EmptyMessage_1.EmptyMessage; } });\nvar StateInit_1 = require(\"./messages/StateInit\");\nObject.defineProperty(exports, \"StateInit\", { enumerable: true, get: function () { return StateInit_1.StateInit; } });\nvar CommonMessageInfo_1 = require(\"./messages/CommonMessageInfo\");\nObject.defineProperty(exports, \"CommonMessageInfo\", { enumerable: true, get: function () { return CommonMessageInfo_1.CommonMessageInfo; } });\nvar CommentMessage_1 = require(\"./messages/CommentMessage\");\nObject.defineProperty(exports, \"CommentMessage\", { enumerable: true, get: function () { return CommentMessage_1.CommentMessage; } });\nvar BinaryMessage_1 = require(\"./messages/BinaryMessage\");\nObject.defineProperty(exports, \"BinaryMessage\", { enumerable: true, get: function () { return BinaryMessage_1.BinaryMessage; } });\nvar WalletContract_1 = require(\"./contracts/WalletContract\");\nObject.defineProperty(exports, \"WalletContract\", { enumerable: true, get: function () { return WalletContract_1.WalletContract; } });\nvar createWalletTransfer_1 = require(\"./contracts/messages/createWalletTransfer\");\nObject.defineProperty(exports, \"createWalletTransferV1\", { enumerable: true, get: function () { return createWalletTransfer_1.createWalletTransferV1; } });\nObject.defineProperty(exports, \"createWalletTransferV2\", { enumerable: true, get: function () { return createWalletTransfer_1.createWalletTransferV2; } });\nObject.defineProperty(exports, \"createWalletTransferV3\", { enumerable: true, get: function () { return createWalletTransfer_1.createWalletTransferV3; } });\n// Sources\nvar contractAddress_1 = require(\"./contracts/contractAddress\");\nObject.defineProperty(exports, \"contractAddress\", { enumerable: true, get: function () { return contractAddress_1.contractAddress; } });\nvar UnknownContractSource_1 = require(\"./contracts/sources/UnknownContractSource\");\nObject.defineProperty(exports, \"UnknownContractSource\", { enumerable: true, get: function () { return UnknownContractSource_1.UnknownContractSource; } });\nvar WalletV1R1Source_1 = require(\"./contracts/sources/WalletV1R1Source\");\nObject.defineProperty(exports, \"WalletV1R1Source\", { enumerable: true, get: function () { return WalletV1R1Source_1.WalletV1R1Source; } });\nvar WalletV1R2Source_1 = require(\"./contracts/sources/WalletV1R2Source\");\nObject.defineProperty(exports, \"WalletV1R2Source\", { enumerable: true, get: function () { return WalletV1R2Source_1.WalletV1R2Source; } });\nvar WalletV1R3Source_1 = require(\"./contracts/sources/WalletV1R3Source\");\nObject.defineProperty(exports, \"WalletV1R3Source\", { enumerable: true, get: function () { return WalletV1R3Source_1.WalletV1R3Source; } });\nvar WalletV2R1Source_1 = require(\"./contracts/sources/WalletV2R1Source\");\nObject.defineProperty(exports, \"WalletV2R1Source\", { enumerable: true, get: function () { return WalletV2R1Source_1.WalletV2R1Source; } });\nvar WalletV2R2Source_1 = require(\"./contracts/sources/WalletV2R2Source\");\nObject.defineProperty(exports, \"WalletV2R2Source\", { enumerable: true, get: function () { return WalletV2R2Source_1.WalletV2R2Source; } });\nvar WalletV3R1Source_1 = require(\"./contracts/sources/WalletV3R1Source\");\nObject.defineProperty(exports, \"WalletV3R1Source\", { enumerable: true, get: function () { return WalletV3R1Source_1.WalletV3R1Source; } });\nvar WalletV3R2Source_1 = require(\"./contracts/sources/WalletV3R2Source\");\nObject.defineProperty(exports, \"WalletV3R2Source\", { enumerable: true, get: function () { return WalletV3R2Source_1.WalletV3R2Source; } });\n// Utils\nvar ConfigStore_1 = require(\"./utils/ConfigStore\");\nObject.defineProperty(exports, \"ConfigStore\", { enumerable: true, get: function () { return ConfigStore_1.ConfigStore; } });\nvar parseDict_1 = require(\"./boc/dict/parseDict\");\nObject.defineProperty(exports, \"parseDict\", { enumerable: true, get: function () { return parseDict_1.parseDict; } });\nObject.defineProperty(exports, \"parseDictBitString\", { enumerable: true, get: function () { return parseDict_1.parseDictBitString; } });\nObject.defineProperty(exports, \"parseDictRefs\", { enumerable: true, get: function () { return parseDict_1.parseDictRefs; } });\nvar serializeDict_1 = require(\"./boc/dict/serializeDict\");\nObject.defineProperty(exports, \"serializeDict\", { enumerable: true, get: function () { return serializeDict_1.serializeDict; } });\nvar safeSign_1 = require(\"./client/safeSign\");\nObject.defineProperty(exports, \"safeSign\", { enumerable: true, get: function () { return safeSign_1.safeSign; } });\nObject.defineProperty(exports, \"safeSignVerify\", { enumerable: true, get: function () { return safeSign_1.safeSignVerify; } });\n// Transaction\nvar parseTransaction_1 = require(\"./block/parseTransaction\");\nObject.defineProperty(exports, \"parseTransaction\", { enumerable: true, get: function () { return parseTransaction_1.parseTransaction; } });\nObject.defineProperty(exports, \"parseAccountStatus\", { enumerable: true, get: function () { return parseTransaction_1.parseAccountStatus; } });\nObject.defineProperty(exports, \"parseCurrencyCollection\", { enumerable: true, get: function () { return parseTransaction_1.parseCurrencyCollection; } });\nObject.defineProperty(exports, \"parseCommonMsgInfo\", { enumerable: true, get: function () { return parseTransaction_1.parseCommonMsgInfo; } });\nObject.defineProperty(exports, \"parseStateInit\", { enumerable: true, get: function () { return parseTransaction_1.parseStateInit; } });\nObject.defineProperty(exports, \"parseMessage\", { enumerable: true, get: function () { return parseTransaction_1.parseMessage; } });\nObject.defineProperty(exports, \"parseHashUpdate\", { enumerable: true, get: function () { return parseTransaction_1.parseHashUpdate; } });\nObject.defineProperty(exports, \"parseAccountChange\", { enumerable: true, get: function () { return parseTransaction_1.parseAccountChange; } });\nObject.defineProperty(exports, \"parseStorageUsedShort\", { enumerable: true, get: function () { return parseTransaction_1.parseStorageUsedShort; } });\nObject.defineProperty(exports, \"parseStoragePhase\", { enumerable: true, get: function () { return parseTransaction_1.parseStoragePhase; } });\nObject.defineProperty(exports, \"parseCreditPhase\", { enumerable: true, get: function () { return parseTransaction_1.parseCreditPhase; } });\nObject.defineProperty(exports, \"parseComputePhase\", { enumerable: true, get: function () { return parseTransaction_1.parseComputePhase; } });\nObject.defineProperty(exports, \"parseActionPhase\", { enumerable: true, get: function () { return parseTransaction_1.parseActionPhase; } });\nObject.defineProperty(exports, \"parseBouncePhase\", { enumerable: true, get: function () { return parseTransaction_1.parseBouncePhase; } });\nObject.defineProperty(exports, \"parseTransactionDescription\", { enumerable: true, get: function () { return parseTransaction_1.parseTransactionDescription; } });\n", "'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n", "'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function} [filter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if (!merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object\n * @param {*} [thing]\n * @returns {Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  var i = thing.length;\n  if (isUndefined(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n", "'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n", "'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nvar prototype = AxiosError.prototype;\nvar descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED'\n// eslint-disable-next-line func-names\n].forEach(function(code) {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = function(error, code, config, request, response, customProps) {\n  var axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nmodule.exports = AxiosError;\n", "'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n", "'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Convert a data object to FormData\n * @param {Object} obj\n * @param {?Object} [formData]\n * @returns {Object}\n **/\n\nfunction toFormData(obj, formData) {\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new FormData();\n\n  var stack = [];\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  function build(data, parentKey) {\n    if (utils.isPlainObject(data) || utils.isArray(data)) {\n      if (stack.indexOf(data) !== -1) {\n        throw Error('Circular reference detected in ' + parentKey);\n      }\n\n      stack.push(data);\n\n      utils.forEach(data, function each(value, key) {\n        if (utils.isUndefined(value)) return;\n        var fullKey = parentKey ? parentKey + '.' + key : key;\n        var arr;\n\n        if (value && !parentKey && typeof value === 'object') {\n          if (utils.endsWith(key, '{}')) {\n            // eslint-disable-next-line no-param-reassign\n            value = JSON.stringify(value);\n          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {\n            // eslint-disable-next-line func-names\n            arr.forEach(function(el) {\n              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));\n            });\n            return;\n          }\n        }\n\n        build(value, fullKey);\n      });\n\n      stack.pop();\n    } else {\n      formData.append(parentKey, convertValue(data));\n    }\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nmodule.exports = toFormData;\n", "'use strict';\n\nvar AxiosError = require('./AxiosError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n", "'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n", "'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n", "'use strict';\n\nmodule.exports = function parseProtocol(url) {\n  var match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\nvar parseProtocol = require('../helpers/parseProtocol');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n", "// eslint-disable-next-line strict\nmodule.exports = null;\n", "'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar AxiosError = require('../core/AxiosError');\nvar transitionalDefaults = require('./transitional');\nvar toFormData = require('../helpers/toFormData');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    var isObjectPayload = utils.isObject(data);\n    var contentType = headers && headers['Content-Type'];\n\n    var isFileList;\n\n    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {\n      var _FormData = this.env && this.env.FormData;\n      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());\n    } else if (isObjectPayload || contentType === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: require('./env/FormData')\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n", "'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n", "'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar CanceledError = require('../cancel/CanceledError');\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n", "'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'beforeRedirect': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n", "module.exports = {\n  \"version\": \"0.27.2\"\n};", "'use strict';\n\nvar VERSION = require('../env/data').version;\nvar AxiosError = require('../core/AxiosError');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar buildFullPath = require('./buildFullPath');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  var fullPath = buildFullPath(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method: method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url: url,\n        data: data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nmodule.exports = Axios;\n", "'use strict';\n\nvar CanceledError = require('./CanceledError');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new CanceledError(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n", "'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = require('./cancel/CanceledError');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\naxios.toFormData = require('./helpers/toFormData');\n\n// Expose AxiosError class\naxios.AxiosError = require('../lib/core/AxiosError');\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n", "module.exports = require('./lib/axios');", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TonhubHttpTransport = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nclass TonhubHttpTransport {\n    constructor(config) {\n        this._endpoint = (config === null || config === void 0 ? void 0 : config.endpoint) || 'https://connect.tonhubapi.com';\n        this._timeout = (config === null || config === void 0 ? void 0 : config.timeout) || 5000;\n        this.adapter = config === null || config === void 0 ? void 0 : config.adapter;\n    }\n    getAxiosConfig() {\n        return this.adapter ? { timeout: this._timeout, adapter: this.adapter } : { timeout: this._timeout };\n    }\n    call(method, args) {\n        if (method === 'session_new') {\n            return this.createSession(args);\n        }\n        else if (method === 'session_get') {\n            return this.getSession(args);\n        }\n        else if (method === 'session_wait') {\n            return this.waitSession(args);\n        }\n        else if (method === 'command_new') {\n            return this.createCommand(args);\n        }\n        else if (method === 'command_get') {\n            return this.getCommand(args);\n        }\n        else {\n            throw new Error('Unsupported method');\n        }\n    }\n    async createSession(args) {\n        let session = await axios_1.default.post(`${this._endpoint}/connect/init`, args, this.getAxiosConfig());\n        return session.data;\n    }\n    async getSession(args) {\n        if (!args.id) {\n            throw new Error('Invalid session id');\n        }\n        let session = await axios_1.default.get(`${this._endpoint}/connect/` + args.id, this.getAxiosConfig());\n        return session.data;\n    }\n    async waitSession(args) {\n        if (!args.id) {\n            throw new Error('Invalid session id');\n        }\n        let session = await axios_1.default.get(`${this._endpoint}/connect/` + args.id + '/wait?lastUpdated=' + (args.lastUpdated || 0), { ...this.getAxiosConfig(), timeout: 30000 });\n        return session.data;\n    }\n    async createCommand(args) {\n        let result = await axios_1.default.post(`${this._endpoint}/connect/command`, args, this.getAxiosConfig());\n        return result.data;\n    }\n    async getCommand(args) {\n        return (await axios_1.default.get(`${this._endpoint}/connect/command/` + args.appk, this.getAxiosConfig())).data;\n    }\n}\nexports.TonhubHttpTransport = TonhubHttpTransport;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletV4Source = void 0;\nconst ton_1 = require(\"ton\");\nclass WalletV4Source {\n    constructor(args) {\n        this.type = 'org.ton.wallets.v4';\n        this.initialCode = args.initialCode;\n        this.initialData = args.initialData;\n        this.workchain = args.workchain;\n        this.walletId = args.walletId;\n        this.publicKey = args.publicKey;\n    }\n    static create(opts) {\n        // Build initial code and data\n        const walletId = opts.walletId ? opts.walletId : 698983191;\n        let initialCode = ton_1.Cell.fromBoc(WalletV4Source.SOURCE)[0];\n        let initialData = new ton_1.Cell();\n        initialData.bits.writeUint(0, 32);\n        initialData.bits.writeUint(walletId, 32);\n        initialData.bits.writeBuffer(opts.publicKey);\n        initialData.bits.writeBit(0);\n        return new WalletV4Source({ initialCode, initialData, workchain: opts.workchain, walletId, publicKey: opts.publicKey });\n    }\n    static restore(backup) {\n        const store = new ton_1.ConfigStore(backup);\n        return WalletV4Source.create({\n            workchain: store.getInt('wc'),\n            publicKey: store.getBuffer('pk'),\n            walletId: store.getInt('walletId'),\n        });\n    }\n    describe() {\n        return 'Wallet v4 #' + this.walletId;\n    }\n    backup() {\n        const config = new ton_1.ConfigStore();\n        config.setInt('wc', this.workchain);\n        config.setBuffer('pk', this.publicKey);\n        config.setInt('walletId', this.walletId);\n        return config.save();\n    }\n}\nexports.WalletV4Source = WalletV4Source;\nWalletV4Source.SOURCE = Buffer.from('te6ccgECFAEAAtQAART/APSkE/S88sgLAQIBIAIDAgFIBAUE+PKDCNcYINMf0x/THwL4I7vyZO1E0NMf0x/T//QE0VFDuvKhUVG68qIF+QFUEGT5EPKj+AAkpMjLH1JAyx9SMMv/UhD0AMntVPgPAdMHIcAAn2xRkyDXSpbTB9QC+wDoMOAhwAHjACHAAuMAAcADkTDjDQOkyMsfEssfy/8QERITAubQAdDTAyFxsJJfBOAi10nBIJJfBOAC0x8hghBwbHVnvSKCEGRzdHK9sJJfBeAD+kAwIPpEAcjKB8v/ydDtRNCBAUDXIfQEMFyBAQj0Cm+hMbOSXwfgBdM/yCWCEHBsdWe6kjgw4w0DghBkc3RyupJfBuMNBgcCASAICQB4AfoA9AQw+CdvIjBQCqEhvvLgUIIQcGx1Z4MesXCAGFAEywUmzxZY+gIZ9ADLaRfLH1Jgyz8gyYBA+wAGAIpQBIEBCPRZMO1E0IEBQNcgyAHPFvQAye1UAXKwjiOCEGRzdHKDHrFwgBhQBcsFUAPPFiP6AhPLassfyz/JgED7AJJfA+ICASAKCwBZvSQrb2omhAgKBrkPoCGEcNQICEekk30pkQzmkD6f+YN4EoAbeBAUiYcVnzGEAgFYDA0AEbjJftRNDXCx+AA9sp37UTQgQFA1yH0BDACyMoHy//J0AGBAQj0Cm+hMYAIBIA4PABmtznaiaEAga5Drhf/AABmvHfaiaEAQa5DrhY/AAG7SB/oA1NQi+QAFyMoHFcv/ydB3dIAYyMsFywIizxZQBfoCFMtrEszMyXP7AMhAFIEBCPRR8qcCAHCBAQjXGPoA0z/IVCBHgQEI9FHyp4IQbm90ZXB0gBjIywXLAlAGzxZQBPoCFMtqEssfyz/Jc/sAAgBsgQEI1xj6ANM/MFIkgQEI9Fnyp4IQZHN0cnB0gBjIywXLAlAFzxZQA/oCE8tqyx8Syz/Jc/sAAAr0AMntVA==', 'base64');\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractPublicKeyAndAddress = void 0;\nconst ton_1 = require(\"ton\");\nconst WalletV4Source_1 = require(\"./WalletV4Source\");\nfunction extractPublicKeyAndAddress(config) {\n    // Extract public key and address\n    let publicKey;\n    let restoredAddress;\n    if (config.walletType === 'org.ton.wallets.v4') {\n        let source = WalletV4Source_1.WalletV4Source.restore(config.walletConfig);\n        restoredAddress = (0, ton_1.contractAddress)(source);\n        publicKey = source.publicKey;\n    }\n    else {\n        return null;\n    }\n    // Public key\n    return { publicKey, address: restoredAddress };\n}\nexports.extractPublicKeyAndAddress = extractPublicKeyAndAddress;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.verifySignatureResponse = void 0;\nconst ton_1 = require(\"ton\");\nconst extractPublicKeyAndAddress_1 = require(\"../contracts/extractPublicKeyAndAddress\");\nfunction verifySignatureResponse(args) {\n    // Check address\n    const address = ton_1.Address.parseFriendly(args.config.address).address;\n    // Extract public key and address\n    let extracted = (0, extractPublicKeyAndAddress_1.extractPublicKeyAndAddress)(args.config);\n    if (!extracted) {\n        return false;\n    }\n    // Check address\n    if (!extracted.address.equals(address)) {\n        return false;\n    }\n    let publicKey = extracted.publicKey;\n    // Package\n    let textCell = new ton_1.Cell();\n    let payloadCell = new ton_1.Cell();\n    if (typeof args.text === 'string') {\n        new ton_1.CommentMessage(args.text).writeTo(textCell);\n    }\n    if (typeof args.payload === 'string') {\n        payloadCell = ton_1.Cell.fromBoc(Buffer.from(args.payload, 'base64'))[0];\n    }\n    // Check signature\n    const data = (0, ton_1.beginCell)()\n        .storeRef(textCell)\n        .storeRef(payloadCell)\n        .endCell();\n    const signed = (0, ton_1.safeSignVerify)(data, Buffer.from(args.signature, 'base64'), publicKey);\n    return signed;\n}\nexports.verifySignatureResponse = verifySignatureResponse;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TonhubConnector = void 0;\nconst ton_crypto_1 = require(\"ton-crypto\");\nconst backoff_1 = require(\"../utils/backoff\");\nconst toURLsafe_1 = require(\"../utils/toURLsafe\");\nconst t = __importStar(require(\"io-ts\"));\nconst teslabot_1 = require(\"teslabot\");\nconst ton_1 = require(\"ton\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst TonhubHttpTransport_1 = require(\"../transport/TonhubHttpTransport\");\nconst extractPublicKeyAndAddress_1 = require(\"../contracts/extractPublicKeyAndAddress\");\nconst crypto_1 = require(\"./crypto\");\nconst sessionStateCodec = t.union([\n    t.type({\n        state: t.literal('not_found')\n    }),\n    t.type({\n        state: t.literal('initing'),\n        name: t.string,\n        url: t.string,\n        testnet: t.boolean,\n        created: t.number,\n        updated: t.number,\n        revoked: t.boolean\n    }),\n    t.type({\n        state: t.literal('ready'),\n        name: t.string,\n        url: t.string,\n        wallet: t.type({\n            address: t.string,\n            endpoint: t.string,\n            walletConfig: t.string,\n            walletType: t.string,\n            walletSig: t.string,\n            appPublicKey: t.string\n        }),\n        testnet: t.boolean,\n        created: t.number,\n        updated: t.number,\n        revoked: t.boolean\n    })\n]);\nconst jobStateCodec = t.union([t.type({\n        state: t.union([t.literal('submitted'), t.literal('expired'), t.literal('rejected')]),\n        job: t.string,\n        created: t.number,\n        updated: t.number,\n        now: t.number\n    }), t.type({\n        state: t.literal('completed'),\n        job: t.string,\n        created: t.number,\n        updated: t.number,\n        result: t.string,\n        now: t.number\n    }), t.type({\n        state: t.literal('empty'),\n        now: t.number\n    })]);\nfunction idFromSeed(seed) {\n    let keyPair = (0, ton_crypto_1.keyPairFromSeed)(Buffer.from(seed, 'base64'));\n    return (0, toURLsafe_1.toUrlSafe)(keyPair.publicKey.toString('base64'));\n}\nfunction textToCell(src) {\n    let bytes = Buffer.from(src);\n    let res = new ton_1.Cell();\n    let dest = res;\n    while (bytes.length > 0) {\n        let avaliable = Math.floor(dest.bits.available / 8);\n        if (bytes.length <= avaliable) {\n            dest.bits.writeBuffer(bytes);\n            break;\n        }\n        dest.bits.writeBuffer(bytes.slice(0, avaliable));\n        bytes = bytes.slice(avaliable, bytes.length);\n        let nc = new ton_1.Cell();\n        dest.refs.push(nc);\n        dest = nc;\n    }\n    return res;\n}\nclass TonhubConnector {\n    constructor(args) {\n        this.createNewSession = async (args) => {\n            // Generate new key\n            let seed = await (0, ton_crypto_1.getSecureRandomBytes)(32);\n            let keyPair = (0, ton_crypto_1.keyPairFromSeed)(seed);\n            let sessionId = (0, toURLsafe_1.toUrlSafe)(keyPair.publicKey.toString('base64'));\n            // Request new session\n            await (0, backoff_1.backoff)(async () => {\n                let session = await this.transport.call('session_new', {\n                    key: sessionId,\n                    testnet: this.network === 'sandbox',\n                    name: args.name,\n                    url: args.url,\n                });\n                if (!session.ok) {\n                    throw Error('Unable to create state');\n                }\n            });\n            // Return session\n            return {\n                id: sessionId,\n                seed: seed.toString('base64'),\n                link: (this.network === 'sandbox' ? 'ton-test://connect/' : 'ton://connect/') + sessionId + '?endpoint=connect.tonhubapi.com'\n            };\n        };\n        this.ensureSessionStateCorrect = (sessionId, ex) => {\n            if (!sessionStateCodec.is(ex)) {\n                throw Error('Invalid response from server');\n            }\n            if (ex.state === 'initing') {\n                if (ex.testnet !== (this.network === 'sandbox')) {\n                    return { state: 'revoked' };\n                }\n                return {\n                    state: 'initing',\n                    name: ex.name,\n                    url: ex.url,\n                    created: ex.created,\n                    updated: ex.updated\n                };\n            }\n            if (ex.state === 'ready') {\n                if (ex.revoked) {\n                    return { state: 'revoked' };\n                }\n                if (ex.testnet !== (this.network === 'sandbox')) {\n                    return { state: 'revoked' };\n                }\n                if (!TonhubConnector.verifyWalletConfig(sessionId, ex.wallet)) {\n                    throw Error('Integrity check failed');\n                }\n                return {\n                    state: 'ready',\n                    name: ex.name,\n                    url: ex.url,\n                    created: ex.created,\n                    updated: ex.updated,\n                    wallet: {\n                        address: ex.wallet.address,\n                        endpoint: ex.wallet.endpoint,\n                        walletType: ex.wallet.walletType,\n                        walletConfig: ex.wallet.walletConfig,\n                        walletSig: ex.wallet.walletSig,\n                        appPublicKey: ex.wallet.appPublicKey\n                    }\n                };\n            }\n            return { state: 'revoked' };\n        };\n        this.getSessionState = async (sessionId) => {\n            return await (0, backoff_1.backoff)(async () => {\n                let session = await this.transport.call('session_get', {\n                    id: sessionId\n                });\n                return this.ensureSessionStateCorrect(sessionId, session);\n            });\n        };\n        this.waitForSessionState = async (sessionId, lastUpdated) => {\n            return await (0, backoff_1.backoff)(async () => {\n                let session = await this.transport.call('session_wait', {\n                    id: sessionId,\n                    lastUpdated\n                });\n                return this.ensureSessionStateCorrect(sessionId, session);\n            });\n        };\n        this.awaitSessionReady = async (sessionId, timeout, lastUpdated) => {\n            let expires = Date.now() + timeout;\n            let res = await (0, backoff_1.backoff)(async () => {\n                while (Date.now() < expires) {\n                    let existing = await this.waitForSessionState(sessionId, lastUpdated);\n                    if (existing.state !== 'initing') {\n                        if (existing.state === 'ready') {\n                            return existing;\n                        }\n                        else if (existing.state === 'revoked') {\n                            return existing;\n                        }\n                    }\n                    await (0, teslabot_1.delay)(1000);\n                }\n                return { state: 'expired' };\n            });\n            return res;\n        };\n        this.requestTransaction = async (request) => {\n            const sessionId = idFromSeed(request.seed);\n            // Check session\n            let session = await (0, backoff_1.backoff)(() => this.getSessionState(sessionId));\n            if (session.state !== 'ready') {\n                return { type: 'invalid_session' };\n            }\n            if (session.wallet.appPublicKey !== request.appPublicKey) {\n                return { type: 'invalid_session' };\n            }\n            // Parse address\n            let address = ton_1.Address.parseFriendly(request.to).address;\n            // Value\n            let value = new bn_js_1.default(request.value, 10);\n            // Parse data\n            let data = null;\n            if (typeof request.payload === 'string') {\n                data = ton_1.Cell.fromBoc(Buffer.from(request.payload, 'base64'))[0];\n            }\n            // StateInit\n            let stateInit = null;\n            if (typeof request.stateInit === 'string') {\n                stateInit = ton_1.Cell.fromBoc(Buffer.from(request.stateInit, 'base64'))[0];\n            }\n            // Comment\n            let comment = '';\n            if (typeof request.text === 'string') {\n                comment = request.text;\n            }\n            // Prepare cell\n            let expires = Math.floor((Date.now() + request.timeout) / 1000);\n            const job = (0, ton_1.beginCell)()\n                .storeBuffer(Buffer.from(session.wallet.appPublicKey, 'base64'))\n                .storeUint(expires, 32)\n                .storeCoins(0)\n                .storeRef((0, ton_1.beginCell)()\n                .storeAddress(address)\n                .storeCoins(value)\n                .storeRef(textToCell(comment))\n                .storeRefMaybe(data ? data : null)\n                .storeRefMaybe(stateInit ? stateInit : null)\n                .endCell())\n                .endCell();\n            // Sign\n            let keypair = (0, ton_crypto_1.keyPairFromSeed)(Buffer.from(request.seed, 'base64'));\n            let signature = (0, ton_1.safeSign)(job, keypair.secretKey);\n            // Create package\n            let pkg = (0, ton_1.beginCell)()\n                .storeBuffer(signature)\n                .storeBuffer(keypair.publicKey)\n                .storeRef(job)\n                .endCell();\n            let boc = pkg.toBoc({ idx: false }).toString('base64');\n            // Post command\n            await (0, backoff_1.backoff)(() => this.transport.call('command_new', {\n                job: boc,\n            }));\n            // Await result\n            let result = await this._awaitJobState(request.appPublicKey, boc);\n            if (result.type === 'completed') {\n                return { type: 'success', response: result.result };\n            }\n            else if (result.type === 'rejected') {\n                return { type: 'rejected' };\n            }\n            return { type: 'expired' };\n        };\n        this.requestSign = async (request) => {\n            const sessionId = idFromSeed(request.seed);\n            // Check session\n            let session = await (0, backoff_1.backoff)(() => this.getSessionState(sessionId));\n            if (session.state !== 'ready') {\n                return { type: 'invalid_session' };\n            }\n            if (session.wallet.appPublicKey !== request.appPublicKey) {\n                return { type: 'invalid_session' };\n            }\n            // Parse data\n            let data = new ton_1.Cell();\n            if (typeof request.payload === 'string') {\n                data = ton_1.Cell.fromBoc(Buffer.from(request.payload, 'base64'))[0];\n            }\n            // Comment\n            let comment = '';\n            if (typeof request.text === 'string') {\n                comment = request.text;\n            }\n            // Prepare cell\n            let expires = Math.floor((Date.now() + request.timeout) / 1000);\n            let commentCell = new ton_1.Cell();\n            new ton_1.CommentMessage(comment).writeTo(commentCell);\n            const job = (0, ton_1.beginCell)()\n                .storeBuffer(Buffer.from(session.wallet.appPublicKey, 'base64'))\n                .storeUint(expires, 32)\n                .storeCoins(1)\n                .storeRef((0, ton_1.beginCell)()\n                .storeRef(commentCell)\n                .storeRef(data)\n                .endCell())\n                .endCell();\n            // Sign\n            let keypair = (0, ton_crypto_1.keyPairFromSeed)(Buffer.from(request.seed, 'base64'));\n            let signature = (0, ton_1.safeSign)(job, keypair.secretKey);\n            // Create package\n            let pkg = (0, ton_1.beginCell)()\n                .storeBuffer(signature)\n                .storeBuffer(keypair.publicKey)\n                .storeRef(job)\n                .endCell();\n            let boc = pkg.toBoc({ idx: false }).toString('base64');\n            // Post command\n            await (0, backoff_1.backoff)(() => this.transport.call('command_new', {\n                job: boc,\n            }));\n            // Await result\n            let result = await this._awaitJobState(request.appPublicKey, boc);\n            if (result.type === 'completed') {\n                const cellRes = ton_1.Cell.fromBoc(Buffer.from(result.result, 'base64'))[0];\n                let slice = cellRes.beginParse();\n                const resSignature = slice.readBuffer(64);\n                let correct = (0, crypto_1.verifySignatureResponse)({\n                    signature: resSignature.toString('base64'),\n                    config: session.wallet,\n                    payload: request.payload,\n                    text: request.text,\n                });\n                if (correct) {\n                    return { type: 'success', signature: resSignature.toString('base64') };\n                }\n                else {\n                    return { type: 'rejected' };\n                }\n            }\n            else if (result.type === 'rejected') {\n                return { type: 'rejected' };\n            }\n            return { type: 'expired' };\n        };\n        this._awaitJobState = async (appPublicKey, boc) => {\n            return await (0, backoff_1.backoff)(async () => {\n                while (true) {\n                    let state = await this._getJobState(appPublicKey, boc);\n                    if (state.type === 'expired') {\n                        return { type: 'expired' };\n                    }\n                    if (state.type === 'completed') {\n                        return { type: 'completed', result: state.result };\n                    }\n                    if (state.type === 'rejected') {\n                        return { type: 'rejected' };\n                    }\n                    await (0, teslabot_1.delay)(1000);\n                }\n            });\n        };\n        this._getJobState = async (appPublicKey, boc) => {\n            let appk = (0, toURLsafe_1.toUrlSafe)(appPublicKey);\n            let res = await this.transport.call('command_get', { appk });\n            if (!jobStateCodec.is(res)) {\n                throw Error('Invalid response from server');\n            }\n            if (res.state === 'empty') {\n                return { type: 'expired' };\n            }\n            if (res.job !== boc) {\n                return { type: 'rejected' };\n            }\n            if (res.state === 'expired') {\n                return { type: 'expired' };\n            }\n            if (res.state === 'submitted') {\n                return { type: 'submitted' };\n            }\n            if (res.state === 'rejected') {\n                return { type: 'rejected' };\n            }\n            if (res.state === 'completed') {\n                return { type: 'completed', result: res.result };\n            }\n            throw Error('Invalid response from server');\n        };\n        let network = 'mainnet';\n        if (args) {\n            if (args.network !== undefined) {\n                network = args.network;\n            }\n        }\n        this.network = network;\n        this.transport = (args === null || args === void 0 ? void 0 : args.transport) || new TonhubHttpTransport_1.TonhubHttpTransport();\n    }\n    static verifyWalletConfig(session, config) {\n        // Check address\n        const address = ton_1.Address.parseFriendly(config.address).address;\n        // Extract public key and address\n        let extracted = (0, extractPublicKeyAndAddress_1.extractPublicKeyAndAddress)(config);\n        if (!extracted) {\n            return false;\n        }\n        // Check address\n        if (!extracted.address.equals(address)) {\n            return false;\n        }\n        let publicKey = extracted.publicKey;\n        // Check signature\n        let toSign = (0, ton_1.beginCell)()\n            .storeCoins(0)\n            .storeBuffer(Buffer.from(session, 'base64'))\n            .storeAddress(address)\n            // Endpoint\n            .storeBit(1)\n            .storeRef((0, ton_1.beginCell)()\n            .storeBuffer(Buffer.from(config.endpoint))\n            .endCell())\n            // App Public Key\n            .storeRef((0, ton_1.beginCell)()\n            .storeBuffer(Buffer.from(config.appPublicKey, 'base64'))\n            .endCell())\n            .endCell();\n        // Sign\n        return (0, ton_1.safeSignVerify)(toSign, Buffer.from(config.walletSig, 'base64'), publicKey);\n    }\n}\nexports.TonhubConnector = TonhubConnector;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _TonhubLocalConnector_instances, _TonhubLocalConnector_provider, _TonhubLocalConnector_doRequest;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TonhubLocalConnector = void 0;\nconst t = __importStar(require(\"io-ts\"));\nconst ton_1 = require(\"ton\");\nconst extractPublicKeyAndAddress_1 = require(\"../contracts/extractPublicKeyAndAddress\");\nconst configCodec = t.type({\n    version: t.literal(1),\n    platform: t.union([t.literal('ios'), t.literal('android')]),\n    platformVersion: t.union([t.string, t.number]),\n    network: t.union([t.literal('sandbox'), t.literal('mainnet')]),\n    address: t.string,\n    publicKey: t.string,\n    walletConfig: t.string,\n    walletType: t.string,\n    signature: t.string,\n    time: t.number,\n    subkey: t.type({\n        domain: t.string,\n        publicKey: t.string,\n        time: t.number,\n        signature: t.string\n    })\n});\nclass TonhubLocalConnector {\n    constructor(network) {\n        _TonhubLocalConnector_instances.add(this);\n        _TonhubLocalConnector_provider.set(this, void 0);\n        if (typeof window === 'undefined') {\n            throw Error('Not running in browser');\n        }\n        if (!(window['ton-x'])) {\n            throw Error('Not running in dApp browser');\n        }\n        let tx = (window['ton-x']);\n        if (tx.__IS_TON_X !== true) {\n            throw Error('Not running in dApp browser');\n        }\n        let cfg = tx.config;\n        if (!configCodec.is(cfg)) {\n            throw Error('Not running in dApp browser');\n        }\n        if (cfg.network !== network) {\n            throw Error('Invalid network');\n        }\n        this.network = network;\n        this.config = {\n            version: cfg.version,\n            network: cfg.network,\n            address: cfg.address,\n            publicKey: cfg.publicKey,\n            walletConfig: cfg.walletConfig,\n            walletType: cfg.walletType,\n            signature: cfg.signature,\n            time: cfg.time,\n            subkey: {\n                domain: cfg.subkey.domain,\n                publicKey: cfg.subkey.publicKey,\n                time: cfg.subkey.time,\n                signature: cfg.subkey.signature\n            }\n        };\n        __classPrivateFieldSet(this, _TonhubLocalConnector_provider, tx.call, \"f\");\n        Object.freeze(this.config.subkey);\n        Object.freeze(this.config);\n        Object.freeze(this);\n    }\n    static verifyWalletConfig(config) {\n        // Check address\n        const address = ton_1.Address.parseFriendly(config.address).address;\n        // Extract public key and address\n        let extracted = (0, extractPublicKeyAndAddress_1.extractPublicKeyAndAddress)(config);\n        if (!extracted) {\n            return false;\n        }\n        // Check address\n        if (!extracted.address.equals(address)) {\n            return false;\n        }\n        // Verify subkey\n        const toSignSub = (0, ton_1.beginCell)()\n            .storeCoins(1)\n            .storeBuffer(Buffer.from(config.subkey.publicKey, 'base64'))\n            .storeUint(config.subkey.time, 32)\n            .storeAddress(extracted.address)\n            .storeRef((0, ton_1.beginCell)()\n            .storeBuffer(Buffer.from(config.subkey.domain))\n            .endCell())\n            .endCell();\n        if (!(0, ton_1.safeSignVerify)(toSignSub, Buffer.from(config.subkey.signature, 'base64'), extracted.publicKey)) {\n            return false;\n        }\n        // Verify wallet\n        const toSign = (0, ton_1.beginCell)()\n            .storeCoins(1)\n            .storeAddress(extracted.address)\n            .storeUint(config.time, 32)\n            .storeRef((0, ton_1.beginCell)()\n            .storeBuffer(Buffer.from(config.subkey.domain))\n            .endCell())\n            .endCell();\n        // Check signature\n        return (0, ton_1.safeSignVerify)(toSign, Buffer.from(config.signature, 'base64'), Buffer.from(config.subkey.publicKey, 'base64'));\n    }\n    static isAvailable() {\n        if (typeof window === 'undefined') {\n            return false;\n        }\n        if (!(window['ton-x'])) {\n            return false;\n        }\n        let tx = (window['ton-x']);\n        if (tx.__IS_TON_X !== true) {\n            return false;\n        }\n        if (!configCodec.is(tx.config)) {\n            return false;\n        }\n        return true;\n    }\n    async requestTransaction(request) {\n        let res = await __classPrivateFieldGet(this, _TonhubLocalConnector_instances, \"m\", _TonhubLocalConnector_doRequest).call(this, 'tx', {\n            network: this.network,\n            to: request.to,\n            value: request.value,\n            stateInit: request.stateInit ? request.stateInit : null,\n            text: request.text ? request.text : null,\n            payload: request.payload ? request.payload : null,\n        });\n        if (res.type === 'ok') {\n            let d = res.data;\n            if (d.state === 'rejected') {\n                return { type: 'rejected' };\n            }\n            if (d.state === 'sent') {\n                return { type: 'success', response: d.result };\n            }\n            throw Error('Unknown reponse');\n        }\n        throw Error(res.message);\n    }\n    async requestSign(request) {\n        // Parse data\n        let data = new ton_1.Cell();\n        if (typeof request.payload === 'string') {\n            data = ton_1.Cell.fromBoc(Buffer.from(request.payload, 'base64'))[0];\n        }\n        // Comment\n        let comment = '';\n        if (typeof request.text === 'string') {\n            comment = request.text;\n        }\n        let commentCell = new ton_1.Cell();\n        new ton_1.CommentMessage(comment).writeTo(commentCell);\n        let res = await __classPrivateFieldGet(this, _TonhubLocalConnector_instances, \"m\", _TonhubLocalConnector_doRequest).call(this, 'sign', {\n            network: this.network,\n            textCell: commentCell.toBoc({ idx: false }).toString('base64'),\n            payloadCell: data.toBoc({ idx: false }).toString('base64')\n        });\n        if (res.type === 'ok') {\n            let d = res.data;\n            if (d.state === 'rejected') {\n                return { type: 'rejected' };\n            }\n            if (d.state === 'sent') {\n                return { type: 'success', signature: d.result };\n            }\n            throw Error('Unknown reponse');\n        }\n        throw Error(res.message);\n    }\n}\nexports.TonhubLocalConnector = TonhubLocalConnector;\n_TonhubLocalConnector_provider = new WeakMap(), _TonhubLocalConnector_instances = new WeakSet(), _TonhubLocalConnector_doRequest = async function _TonhubLocalConnector_doRequest(name, args) {\n    return await new Promise((resolve) => __classPrivateFieldGet(this, _TonhubLocalConnector_provider, \"f\").call(this, name, args, resolve));\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extractPublicKeyAndAddress = exports.verifySignatureResponse = exports.TonhubLocalConnector = exports.TonhubConnector = void 0;\nvar TonhubConnector_1 = require(\"./connector/TonhubConnector\");\nObject.defineProperty(exports, \"TonhubConnector\", { enumerable: true, get: function () { return TonhubConnector_1.TonhubConnector; } });\nvar TonhubLocalConnector_1 = require(\"./connector/TonhubLocalConnector\");\nObject.defineProperty(exports, \"TonhubLocalConnector\", { enumerable: true, get: function () { return TonhubLocalConnector_1.TonhubLocalConnector; } });\nvar crypto_1 = require(\"./connector/crypto\");\nObject.defineProperty(exports, \"verifySignatureResponse\", { enumerable: true, get: function () { return crypto_1.verifySignatureResponse; } });\nvar extractPublicKeyAndAddress_1 = require(\"./contracts/extractPublicKeyAndAddress\");\nObject.defineProperty(exports, \"extractPublicKeyAndAddress\", { enumerable: true, get: function () { return extractPublicKeyAndAddress_1.extractPublicKeyAndAddress; } });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useLocalConnector = void 0;\nconst react_1 = require(\"react\");\nconst ton_1 = require(\"ton\");\nconst ton_x_1 = require(\"ton-x\");\nfunction useLocalConnector(network, active) {\n    const connector = (0, react_1.useMemo)(() => {\n        if (active)\n            return new ton_x_1.TonhubLocalConnector(network);\n        return null;\n    }, [active]);\n    if (!connector) {\n        return null;\n    }\n    const revoke = (0, react_1.useCallback)(() => {\n        throw new Error('Cannot revoke local session');\n    }, []);\n    const requestSign = (request) => {\n        if (!connector) {\n            throw new Error('No active tonhub connector');\n        }\n        return connector.requestSign({\n            payload: request.payload,\n            text: request.text\n        });\n    };\n    const requestTransaction = (request) => {\n        if (!connector) {\n            throw new Error('No active tonhub connector');\n        }\n        return connector.requestTransaction({\n            payload: request.payload,\n            text: request.text,\n            to: request.to,\n            value: request.value,\n            stateInit: request.stateInit\n        });\n    };\n    return {\n        api: {\n            requestSign,\n            requestTransaction,\n            revoke\n        },\n        state: { type: 'online', address: ton_1.Address.parse(connector.config.address), walletConfig: connector.config }\n    };\n}\nexports.useLocalConnector = useLocalConnector;\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.backoff = exports.exponentialBackoffDelay = exports.delay = void 0;\nfunction delay(ms) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    });\n}\nexports.delay = delay;\nfunction exponentialBackoffDelay(currentFailureCount, minDelay, maxDelay, maxFailureCount) {\n    let maxDelayRet = minDelay + ((maxDelay - minDelay) / maxFailureCount) * Math.max(currentFailureCount, maxFailureCount);\n    return Math.round(Math.random() * maxDelayRet);\n}\nexports.exponentialBackoffDelay = exponentialBackoffDelay;\nfunction backoff(callback, opts) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let currentFailureCount = 0;\n        const minDelay = opts && opts.minDelay !== undefined ? opts.minDelay : 250;\n        const maxDelay = opts && opts.maxDelay !== undefined ? opts.maxDelay : 1000;\n        const maxFailureCount = opts && opts.maxFailureCount !== undefined ? opts.maxFailureCount : 50;\n        while (true) {\n            try {\n                return yield callback();\n            }\n            catch (e) {\n                if (currentFailureCount < maxFailureCount) {\n                    currentFailureCount++;\n                }\n                if (opts && opts.onError) {\n                    opts.onError(e, currentFailureCount);\n                }\n                let waitForRequest = exponentialBackoffDelay(currentFailureCount, minDelay, maxDelay, maxFailureCount);\n                yield delay(waitForRequest);\n            }\n        }\n    });\n}\nexports.backoff = backoff;\n", "\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useRemoteConnector = void 0;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst react_1 = require(\"react\");\nconst ton_1 = require(\"ton\");\nconst ton_x_1 = require(\"ton-x\");\nconst time_1 = require(\"./utils/time\");\nfunction useTonhubSession(connector, id, log) {\n    const [sessionState, setSessionState] = (0, react_1.useState)();\n    (0, react_1.useEffect)(() => {\n        if (!connector) {\n            log('[tonhub]: not using remote connector');\n            return;\n        }\n        if (!id) {\n            log('[tonhub]: no session');\n            return;\n        }\n        log('[tonhub]: new session ' + id);\n        let isActive = true;\n        let lastUpdated = undefined;\n        let end = () => {\n            isActive = false;\n        };\n        (0, time_1.backoff)(() => __awaiter(this, void 0, void 0, function* () {\n            while (isActive) {\n                let state = yield connector.waitForSessionState(id, lastUpdated);\n                if (state.state !== 'revoked') {\n                    lastUpdated = state.updated;\n                }\n                // in case of hook is disabled before request was got\n                setSessionState((prevState) => {\n                    if (!isActive) {\n                        return prevState;\n                    }\n                    return Object.assign(Object.assign({}, state), { id: id });\n                });\n            }\n        }));\n        return end;\n    }, [id]);\n    return sessionState;\n}\nfunction useRemoteConnector(config, active) {\n    const log = (...args) => config.debug && console.log(...args);\n    const connector = (0, react_1.useMemo)(() => {\n        if (active)\n            return new ton_x_1.TonhubConnector({ network: config.network });\n        return null;\n    }, [active]);\n    const { connectionState, setConnectionState } = config;\n    // Init\n    (0, react_1.useEffect)(() => {\n        if (!connector) {\n            return;\n        }\n        if (connectionState.type === 'initing' || connectionState.type === undefined) {\n            (0, time_1.backoff)(() => __awaiter(this, void 0, void 0, function* () {\n                let session = yield connector.createNewSession({\n                    name: config.name,\n                    url: config.url,\n                });\n                setConnectionState({ type: 'pending', session: session.id, link: session.link, seed: session.seed });\n            }));\n        }\n    }, [connectionState, connector]);\n    const sessionId = (0, react_1.useMemo)(() => {\n        if (!connector) {\n            return;\n        }\n        if (connectionState.type === 'initing') {\n            return undefined;\n        }\n        return connectionState.session;\n    }, [connectionState, connector]);\n    let session = useTonhubSession(connector, sessionId, log);\n    (0, react_1.useEffect)(() => {\n        if (!session || !connector) {\n            return;\n        }\n        // store only if session revoked and ready\n        if (session.state === 'revoked') {\n            log('[tonhub] revoked remotely');\n            setConnectionState({ type: 'initing' });\n        }\n        else if (session.state === 'ready') {\n            setConnectionState((prevState) => {\n                if (prevState.type === 'initing' || (session === null || session === void 0 ? void 0 : session.state) !== 'ready') {\n                    return prevState;\n                }\n                if (prevState.session !== session.id) {\n                    return prevState;\n                }\n                return {\n                    type: 'online',\n                    seed: prevState.seed,\n                    session: prevState.session,\n                    walletConfig: session.wallet,\n                    address: ton_1.Address.parse(session.wallet.address)\n                };\n            });\n        }\n    }, [session]);\n    if (!connector) {\n        return null;\n    }\n    const revoke = (0, react_1.useCallback)(() => {\n        log('[tonhub]: revoked by user');\n        if (connectionState.type === 'online') {\n            (0, time_1.backoff)(() => __awaiter(this, void 0, void 0, function* () {\n                yield axios_1.default.post('https://connect.tonhubapi.com/connect/revoke', {\n                    key: connectionState.session\n                }, { timeout: 5000 });\n            }));\n        }\n        setConnectionState({ type: 'initing' });\n    }, [connectionState]);\n    const requestSign = (request) => {\n        if (!connector) {\n            throw new Error('No active tonhub connector');\n        }\n        if (connectionState.type !== 'online') {\n            throw new Error('No active tonhub session');\n        }\n        return connector.requestSign({\n            appPublicKey: connectionState.walletConfig.appPublicKey,\n            seed: connectionState.seed,\n            timeout: 300000,\n            payload: request.payload,\n            text: request.text\n        });\n    };\n    const requestTransaction = (request) => {\n        if (!connector) {\n            throw new Error('No active tonhub connector');\n        }\n        if (connectionState.type !== 'online') {\n            throw new Error('No active tonhub session');\n        }\n        return connector.requestTransaction({\n            appPublicKey: connectionState.walletConfig.appPublicKey,\n            seed: connectionState.seed,\n            timeout: 300000,\n            payload: request.payload,\n            text: request.text,\n            to: request.to,\n            value: request.value,\n            stateInit: request.stateInit\n        });\n    };\n    return {\n        api: {\n            requestSign,\n            requestTransaction,\n            revoke\n        },\n        state: connectionState.type === 'online' ? Object.assign(Object.assign({}, connectionState), { address: ton_1.Address.parse(connectionState.walletConfig.address) }) : connectionState\n    };\n}\nexports.useRemoteConnector = useRemoteConnector;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TonhubConnectProvider = exports.useTonhubConnect = void 0;\nconst React = __importStar(require(\"react\"));\nconst ton_x_1 = require(\"ton-x\");\nconst useLocalConnector_1 = require(\"./useLocalConnector\");\nconst useRemoteConnector_1 = require(\"./useRemoteConnector\");\nconst TonhubConnectContext = React.createContext({\n    state: { type: 'initing' },\n    api: {\n        requestSign: () => { throw new Error('Cannot call \"requestSign\" without context'); },\n        requestTransaction: () => { throw new Error('Cannot call \"requestTransaction\" without context'); },\n        revoke: () => { throw new Error('Cannot call \"revoke\" without context'); },\n    },\n    connector: 'remote'\n});\nfunction useTonhubConnect() {\n    return React.useContext(TonhubConnectContext);\n}\nexports.useTonhubConnect = useTonhubConnect;\nexports.TonhubConnectProvider = React.memo(({ children, network, url, name, connectionState, setConnectionState, debug }) => {\n    const localAvailable = ton_x_1.TonhubLocalConnector.isAvailable();\n    // enable local if available, else enable remote\n    const local = (0, useLocalConnector_1.useLocalConnector)(network, localAvailable);\n    const remote = (0, useRemoteConnector_1.useRemoteConnector)({\n        network,\n        url,\n        name,\n        connectionState,\n        setConnectionState,\n        debug: !!debug\n    }, !localAvailable);\n    // select working connector\n    const { state, api } = localAvailable ? local : remote;\n    if (debug)\n        console.log(localAvailable ? '[tonhub] using local connector' : '[tonhub] using remote connector');\n    return (React.createElement(TonhubConnectContext.Provider, { value: { state, api, connector: localAvailable ? 'local' : 'remote' } }, children));\n});\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TonhubConnectProvider = exports.useTonhubConnect = void 0;\nvar useTonhubConnect_1 = require(\"./useTonhubConnect\");\nObject.defineProperty(exports, \"useTonhubConnect\", { enumerable: true, get: function () { return useTonhubConnect_1.useTonhubConnect; } });\nObject.defineProperty(exports, \"TonhubConnectProvider\", { enumerable: true, get: function () { return useTonhubConnect_1.TonhubConnectProvider; } });\n", "export default require(\"./node_modules/react-ton-x/dist/index.js\");"],
  "mappings": "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AA,MAAY;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAW;AAAA,MAAU;AAAA,MAAO;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAO;AAAA,MAAO;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAO;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAY;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAO;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAO;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAY;AAAA,MAAU;AAAA,MAAW;AAAA,MAAO;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAW;AAAA,MAChyC;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAS;AAAA,MAAS;AAAA,MAAO;AAAA,MAAW;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAO;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAO;AAAA,MAAO;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAC1jC;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAO;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAO;AAAA,MAAW;AAAA,MAAS;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAY;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAY;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAY;AAAA,MAAW;AAAA,MAAY;AAAA,MAAW;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAO;AAAA,MAAY;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MACnuD;AAAA,MAAO;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAW;AAAA,MAAY;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAY;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAY;AAAA,MAAW;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAY;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAC/ijrtjB;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAO;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAY;AAAA,MAAS;AAAA,MAAY;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAY;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAC9hB;AAAA,MAAU;AAAA,MAAU;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAO;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MACxK;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MACxK;AAAA,MAAO;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAC1qB;AAAA,MAAW;AAAA,MAAO;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAO;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAO;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAO;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAY;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MACj+B;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MACtvfjvC;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAY;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACtE;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAY;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAO;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,M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AAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAO;AAAA,MAAO;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAO;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAY;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAO;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAO;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAY;AAAA,MAAU;AAAA,MAAW;AAAA,MAAO;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAW;AAAA,MAChyC;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAS;AAAA,MAAS;AAAA,MAAO;AAAA,MAAW;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAO;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAO;AAAA,MAAO;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAC1jC;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAO;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAO;AAAA,MAAW;AAAA,MAAS;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAY;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAY;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAY;AAAA,MAAW;AAAA,MAAY;AAAA,MAAW;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAO;AAAA,MAAY;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MACnuD;AAAA,MAAO;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAW;AAAA,MAAY;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAY;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAY;AAAA,MAAW;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAY;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAC/ijrtjB;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAO;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAY;AAAA,MAAS;AAAA,MAAY;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAY;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAC9hB;AAAA,MAAU;AAAA,MAAU;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAO;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MACxK;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MACxK;AAAA,MAAO;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAC1qB;AAAA,MAAW;AAAA,MAAO;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAO;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAS;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAO;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAO;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAY;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAY;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MACj+B;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAW;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAW;AAAA,MAAW;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MACtvfjvC;AAAA,MAAW;AAAA,MAAW;AAAA,MAAW;AAAA,MAAY;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACtE;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAO;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAS;AAAA,MAAW;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAY;AAAA,MAAU;AAAA,MAAY;AAAA,MAAY;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAW;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAU;AAAA,MAAO;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAQ;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAU;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAS;AAAA,MAAU;AAAA,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",
  "names": ["require_wordlist", "require_dist", "require_backoff", "buffer", "_BitString_checkRange", "require_sha256", "require_sha512", "require_pbkdf2_sha512", "require_hmac_sha512", "require_getSecureRandom", "require_wordlist", "require_mnemonic", "require_nacl", "require_wordlist", "require_newSecureWords", "require_newSecurePassphrase", "require_dist", "require_axios", "require_axios", "SendMode", "c", "w", "slice", "slice", "src", "alphabet", "slice", "require_dist", "require_bind", "require_utils", "require_buildURL", "require_InterceptorManager", "require_normalizeHeaderName", "require_settle", "require_cookies", "require_isAbsoluteURL", "require_combineURLs", "require_buildFullPath", "require_parseHeaders", "require_isURLSameOrigin", "require_xhr", "require_defaults", "require_transformData", "require_isCancel", "require_dispatchRequest", "require_mergeConfig", "require_data", "require_validator", "require_Axios", "require_CancelToken", "require_spread", "require_isAxiosError", "require_axios", "require_axios", "args", "_TonhubLocalConnector_doRequest", "require_dist", "session", "require_dist"]
}
