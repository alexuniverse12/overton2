"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useLocalConnector = void 0;
const react_1 = require("react");
const ton_1 = require("ton");
const ton_x_1 = require("ton-x");
function useLocalConnector(network, active) {
    const connector = (0, react_1.useMemo)(() => {
        if (active)
            return new ton_x_1.TonhubLocalConnector(network);
        return null;
    }, [active]);
    if (!connector) {
        return null;
    }
    const revoke = (0, react_1.useCallback)(() => {
        throw new Error('Cannot revoke local session');
    }, []);
    const requestSign = (request) => {
        if (!connector) {
            throw new Error('No active tonhub connector');
        }
        return connector.requestSign({
            payload: request.payload,
            text: request.text
        });
    };
    const requestTransaction = (request) => {
        if (!connector) {
            throw new Error('No active tonhub connector');
        }
        return connector.requestTransaction({
            payload: request.payload,
            text: request.text,
            to: request.to,
            value: request.value,
            stateInit: request.stateInit
        });
    };
    return {
        api: {
            requestSign,
            requestTransaction,
            revoke
        },
        state: { type: 'online', address: ton_1.Address.parse(connector.config.address), walletConfig: connector.config }
    };
}
exports.useLocalConnector = useLocalConnector;
